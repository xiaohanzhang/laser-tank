{"version":3,"sources":["features/game/tiles.ts","utils/colors.ts","features/game/consts.ts","features/game/game.ts","features/game/Board.tsx","features/ui/MenuBar.tsx","app/App.tsx","serviceWorker.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["GameBackgrounds","GameObstacles","hex","v","toString","getColors","size","pattern","n","Math","floor","cbrt","getPattern","rgbs","map","p","colors","color","diff","push","results","each","r","g","b","sameCoord","p1","p2","x","y","isAvailable","position","board","target","get","object","nextPosition","direction","GameObject","css","game","tile","FLAG","Flag","DIRT","Dirt","WATER","Water","MOVABLE_BLOCK_WATER","MovableBlockWater","ICE","Ice","THIN_ICE","ThinIce","TANK_MOVER_N","TankMoverN","TANK_MOVER_S","TankMoverS","TANK_MOVER_E","TankMoverE","TANK_MOVER_W","TankMoverW","TUNNEL","Tunnel","background","BRICKS","Bricks","SOLID_BLOCK","SolidBlock","CRYSTAL_BLOCK","CrystalBlock","MOVABLE_BLOCK","MovableBlock","ANTI_TANK_N","AntiTankN","ANTI_TANK_S","AntiTankS","ANTI_TANK_W","AntiTankW","ANTI_TANK_E","AntiTankE","ANTI_TANK_DEAD_N","AntiTankDeadN","ANTI_TANK_DEAD_S","AntiTankDeadS","ANTI_TANK_DEAD_W","AntiTankDeadW","ANTI_TANK_DEAD_E","AntiTankDeadE","MIRROR_NW","MirrorNW","MIRROR_NE","MirrorNE","MIRROR_SE","MirrorSE","MIRROR_SW","MirrorSW","ROTARY_MIRROR_NW","RotaryMirrorNW","ROTARY_MIRROR_NE","RotaryMirrorNE","ROTARY_MIRROR_SE","RotaryMirrorSE","ROTARY_MIRROR_SW","RotaryMirrorSW","from","to","toTile","this","getBackground","handleMove","fromTile","handleEmpty","getObstacle","handleFire","tank","callback","BOARD_SIZE","forEachTile","current","checkTank","handleTank","GameObstacle","laser","next","cmd","start","dead","dead_direction","N","S","W","E","reverseDirection","getDirection","fireLasert","directions","indexOf","hitBack","hitMirror","directionMap","fire_directions","getFireDirections","next_direction","GameBackground","sameKindTunnel","t1","t2","pendingTunnels","tunnel","haveTank","pending","row","index","findIndex","splice","status","saveDataMap","0","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","isDirection","includes","db","record","history","state","initialState","range","timer","levels","levelIndex","gameSlice","createSlice","name","reducers","loadLevels","action","payload","localStorage","setItem","JSON","stringify","caseReducers","loadLevel","level","shift","forEach","i","cell","j","result","console","log","changeDirection","move","fire","startCycle","finishCycle","undo","pop","moveTank","renderFrame","actions","exec","dispatch","getState","length","save","BoardTile","React","memo","tileSize","style","width","height","className","getBackgroundCss","filter","Boolean","join","borderRadius","border","boxSizing","getObstacleCss","BoardRow","key","Board","props","limit","boardRef","createRef","interval","bindAll","window","addEventListener","handleResize","animations","setInterval","a","el","backgrounds","querySelectorAll","bg","classList","remove","add","removeEventListener","clearInterval","offsetWidth","offsetHeight","setState","min","nextProps","nextState","tileStyle","ref","letter","display","margin","verticalAlign","lineHeight","left","top","Component","useSelector","useDispatch","debounceRenderFrame","debounce","useEffect","handleKeyDown","e","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","useState","currentMenu","setMenu","handleFile","file","reader","FileReader","onload","buffer","tLevel","levelName","hint","author","scoreDifficulty","sizeOfTLevel","sum","Object","values","byteLength","cursor","data","slice","chunk","Array","Uint8Array","String","fromCharCode","apply","Uint16Array","readAsArrayBuffer","items","render","id","type","onChange","files","currentTarget","onClick","menu","event","offsetTop","offsetLeft","onMouseEnter","App","getItem","parse","location","hostname","match","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ce0d5f2.chunk.js","sourcesContent":["import { get, each, findIndex } from 'lodash';\nimport {  GameState, DIRECTION, BOARD_SIZE } from './game';\n\nexport enum GameBackgrounds {\n    // background\n    FLAG = 1,\n    DIRT,\n    WATER,\n    MOVABLE_BLOCK_WATER,\n    ICE,\n    THIN_ICE,\n    TANK_MOVER_N,\n    TANK_MOVER_S,\n    TANK_MOVER_E,\n    TANK_MOVER_W,\n    TUNNEL,\n}\n\nexport enum GameObstacles {\n    // obstacle\n    BRICKS = 32,\n    SOLID_BLOCK,\n    CRYSTAL_BLOCK,\n    MOVABLE_BLOCK,\n    ANTI_TANK_N,\n    ANTI_TANK_S,\n    ANTI_TANK_W,\n    ANTI_TANK_E,\n    ANTI_TANK_DEAD_N,\n    ANTI_TANK_DEAD_S,\n    ANTI_TANK_DEAD_W,\n    ANTI_TANK_DEAD_E,\n    MIRROR_NW,\n    MIRROR_NE,\n    MIRROR_SE,\n    MIRROR_SW,\n    ROTARY_MIRROR_NW,\n    ROTARY_MIRROR_NE,\n    ROTARY_MIRROR_SE,\n    ROTARY_MIRROR_SW,\n}\n\nexport const sameCoord = (p1: Position, p2: Position): boolean => {\n    return p1.x === p2.x && p1.y === p2.y; \n}\n\nconst getDirection = (p1: Position, p2: Position): DIRECTION | null => {\n    if (p1.x !== p2.x || p1.y !== p2.y) {\n        if (p1.x === p2.x) {\n            return p1.y > p2.y ? 'N': 'S';\n        } else if (p1.y === p2.y) {\n            return p1.x > p2.x ? 'W': 'E';\n        }\n    }\n    return null;\n} \n\nconst reverseDirection = (direction: DIRECTION): DIRECTION => {\n    const reverseMap: {[key: string]: DIRECTION} = {N: 'S', S: 'N', W: 'E', E: 'W'};\n    return reverseMap[direction];\n}\n\nconst fireLasert = (game: GameState, laser: Position) => {\n    if (game.laser === null) {\n        game.laser = laser;\n    }\n}\n\nconst forEachTile = (board: Board, position: Position, callback: (tile: Tile, position: Position) => void | boolean) => {\n    let target = nextPosition(position);\n    while (target.x < BOARD_SIZE && target.y < BOARD_SIZE && target.x >= 0 && target.y >= 0) {\n        if (callback(board[target.y][target.x], target) === false) {\n            break;\n        }\n        target = nextPosition(target);\n    }\n}\n\nexport const isAvailable = (position: Position, board: Board): boolean => {\n    const { x, y } = position;\n    const target = get(board, `${y}.${x}`);\n    return !!(target && !target.object);\n}\n\nexport const nextPosition = (position: Position) => {\n    const { x, y, direction } = position;\n    return {\n        'N': { x, y: y - 1, direction },\n        'S': { x, y: y + 1, direction },\n        'E': { x: x + 1, y, direction },\n        'W': { x: x - 1, y, direction },\n    }[direction];\n}\n\nexport interface Tile {\n    background: GameBackgrounds,\n    color?: string,\n    object?: GameObstacles,\n};\n\nexport type Board = Tile[][]; \n\nexport interface Position {\n    x: number,\n    y: number,\n    direction: DIRECTION,\n}\n\n\nexport class GameObject {\n    static getBackground(tile: Tile): GameBackground {\n        return new ({\n            [GameBackgrounds.FLAG]: Flag,\n            [GameBackgrounds.DIRT]: Dirt,\n            [GameBackgrounds.WATER]: Water, \n            [GameBackgrounds.MOVABLE_BLOCK_WATER]: MovableBlockWater,\n            [GameBackgrounds.ICE]: Ice,\n            [GameBackgrounds.THIN_ICE]: ThinIce,\n            [GameBackgrounds.TANK_MOVER_N]: TankMoverN,\n            [GameBackgrounds.TANK_MOVER_S]: TankMoverS,\n            [GameBackgrounds.TANK_MOVER_E]: TankMoverE,\n            [GameBackgrounds.TANK_MOVER_W]: TankMoverW,\n            [GameBackgrounds.TUNNEL]: Tunnel,\n        }[tile.background])();\n    }\n\n    static getObstacle(tile: Tile): GameObstacle | null {\n        return !tile.object ? null : new ({\n            [GameObstacles.BRICKS]: Bricks,\n            [GameObstacles.SOLID_BLOCK]: SolidBlock,\n            [GameObstacles.CRYSTAL_BLOCK]: CrystalBlock,\n            [GameObstacles.MOVABLE_BLOCK]: MovableBlock,\n            [GameObstacles.ANTI_TANK_N]: AntiTankN,\n            [GameObstacles.ANTI_TANK_S]: AntiTankS,\n            [GameObstacles.ANTI_TANK_W]: AntiTankW,\n            [GameObstacles.ANTI_TANK_E]: AntiTankE,\n            [GameObstacles.ANTI_TANK_DEAD_N]: AntiTankDeadN,\n            [GameObstacles.ANTI_TANK_DEAD_S]: AntiTankDeadS,\n            [GameObstacles.ANTI_TANK_DEAD_W]: AntiTankDeadW,\n            [GameObstacles.ANTI_TANK_DEAD_E]: AntiTankDeadE,\n            [GameObstacles.MIRROR_NW]: MirrorNW, \n            [GameObstacles.MIRROR_NE]: MirrorNE, \n            [GameObstacles.MIRROR_SE]: MirrorSE, \n            [GameObstacles.MIRROR_SW]: MirrorSW, \n            [GameObstacles.ROTARY_MIRROR_NW]: RotaryMirrorNW, \n            [GameObstacles.ROTARY_MIRROR_NE]: RotaryMirrorNE, \n            [GameObstacles.ROTARY_MIRROR_SE]: RotaryMirrorSE, \n            [GameObstacles.ROTARY_MIRROR_SW]: RotaryMirrorSW, \n        }[tile.object])();\n    }\n\n    static handleMove(game: GameState, from: Position, to: Position){\n        const { board } = game;\n        const toTile = get(board, [to.y, to.x]);\n        if (toTile) {\n            this.getBackground(toTile).handleMove(game, to);\n            const fromTile = get(board, [from.y, from.x]);\n            if (!fromTile?.object) {\n                this.getBackground(fromTile).handleEmpty(game, from);\n            }\n        }\n    };\n\n    static handleFire(game: GameState, position: Position) {\n        const tile = get(game.board, [position.y, position.x]);\n        if (tile) {\n            this.getObstacle(tile)?.handleFire(game, position);\n        }\n    }\n\n    static checkTank(game: GameState) {\n        const { board, tank } = game;\n        if (!board[tank.y][tank.x].object) {\n            each(['N', 'W', 'E', 'S'], (direction: DIRECTION) => {\n                forEachTile(board, { ...tank, direction }, (tile, current) => {\n                    return this.getObstacle(tile)?.checkTank(game, current);\n                });\n            });\n            this.getBackground(board[tank.y][tank.x]).handleTank(game, tank);\n        }\n    };\n\n    static getObstacleCss(tile: Tile) {\n        return this.getObstacle(tile)?.css;\n    }\n\n    static getBackgroundCss(tile: Tile) {\n        return this.getBackground(tile)?.css;\n    }\n\n    css = '';\n\n    handleMove(game: GameState, position: Position) {};\n    handleEmpty(game: GameState, position: Position) {};\n}\n\nclass GameObstacle extends GameObject {\n    handleFire(game: GameState, position: Position) {\n        game.laser = null;\n    }\n\n    checkTank(game: GameState, position: Position): boolean {\n        // false means current obstacle already blocked further obstacles seeing tank\n        return false;\n    }\n}\n\nclass Bricks extends GameObstacle {\n    css = 'BRICKS';\n\n    handleFire(game: GameState, position: Position) {\n        super.handleFire(game, position);\n        delete game.board[position.y][position.x].object;\n    };\n}\n\nclass SolidBlock extends GameObstacle {\n    css = 'SOLID_BLOCK';\n}\n\nclass MovableBlock extends GameObstacle {\n    css = 'MOVABLE_BLOCK';\n\n    handleFire(game: GameState, position: Position) {\n        super.handleFire(game, position);\n        game.next.push({\n            cmd: position.direction,\n            start: position,\n        });\n    };\n}\n\n\nclass AntiTankN extends GameObstacle {\n    css = 'ANTI_TANK_N';\n    dead = GameObstacles.ANTI_TANK_DEAD_N;\n    dead_direction: DIRECTION = 'S';\n\n    handleFire(game: GameState, position: Position) {\n        super.handleFire(game, position);\n        if (position.direction === this.dead_direction) {\n            game.board[position.y][position.x].object = this.dead;\n        } else {\n            game.next.push({\n                cmd: position.direction,\n                start: position,\n            });\n        }\n    }\n\n    checkTank(game: GameState, position: Position) {\n        const { tank, laser } = game;\n        const direction = reverseDirection(this.dead_direction);\n        if (laser === null && getDirection(position, tank) === direction) {\n            fireLasert(game, nextPosition({\n                ...position,\n                direction,\n            }));\n        }\n        return super.checkTank(game, position);\n    }\n}\n\nclass AntiTankS extends AntiTankN {\n    css = 'ANTI_TANK_S';\n    dead = GameObstacles.ANTI_TANK_DEAD_S;\n    dead_direction: DIRECTION = 'N';\n}\n\nclass AntiTankE extends AntiTankN {\n    css = 'ANTI_TANK_E';\n    dead = GameObstacles.ANTI_TANK_DEAD_E;\n    dead_direction: DIRECTION = 'W';\n}\n\nclass AntiTankW extends AntiTankN {\n    css = 'ANTI_TANK_W';\n    dead = GameObstacles.ANTI_TANK_DEAD_W;\n    dead_direction: DIRECTION = 'E';\n}\n\nclass AntiTankDeadN extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_N';\n}\n\nclass AntiTankDeadS extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_S';\n}\n\nclass AntiTankDeadW extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_W';\n}\n\nclass AntiTankDeadE extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_E';\n}\n\nclass MirrorNW extends GameObstacle {\n    css = 'MIRROR_NW';\n    directions: DIRECTION[] = ['N', 'W'];\n    handleFire(game: GameState, position: Position) {\n        super.handleFire(game, position);\n        const index = this.directions.indexOf(position.direction);\n        if (index !== -1) {\n            this.hitBack(game, position);\n        } else {\n            this.hitMirror(game, position);\n        }\n    }\n\n    getFireDirections(): DIRECTION[] {\n        const directionMap: {[key: string]: DIRECTION} = {\n            'N': 'S', 'S': 'N', 'W': 'E', 'E': 'W'\n        };\n        return [\n            directionMap[this.directions[0]],\n            directionMap[this.directions[1]],\n        ]\n    }\n\n    hitBack(game: GameState, position: Position) {\n        game.next.push({\n            cmd: position.direction,\n            start: position,\n        });\n    }\n\n    hitMirror(game: GameState, position: Position) {\n        const fire_directions = this.getFireDirections()\n        const direction =  this.directions[1 - fire_directions.indexOf(position.direction)];\n        game.laser = {\n            ...position,\n            direction\n        };\n    }\n}\n\nclass MirrorNE extends MirrorNW {\n    css = 'MIRROR_NE';\n    directions: DIRECTION[] = ['N', 'E'];\n}\n\nclass MirrorSE extends MirrorNW {\n    css = 'MIRROR_SE';\n    directions: DIRECTION[] = ['S', 'E'];\n}\n\nclass MirrorSW extends MirrorNW {\n    css = 'MIRROR_SW';\n    directions: DIRECTION[] = ['S', 'W'];\n}\n\nclass RotaryMirrorNW extends MirrorNW {\n    css = 'ROTARY_MIRROR_NW';\n    directions: DIRECTION[] = ['N', 'W'];\n    next_direction = GameObstacles.ROTARY_MIRROR_NE;\n\n    hitBack(game: GameState, position: Position) {\n        \n        game.board[position.y][position.x].object = this.next_direction;\n    }\n}\n\nclass RotaryMirrorNE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_NE';\n    directions: DIRECTION[] = ['N', 'E'];\n    next_direction = GameObstacles.ROTARY_MIRROR_SE;\n}\n\nclass RotaryMirrorSE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SE';\n    directions: DIRECTION[] = ['S', 'E'];\n    next_direction = GameObstacles.ROTARY_MIRROR_SW;\n}\n\nclass RotaryMirrorSW extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SW';\n    directions: DIRECTION[] = ['S', 'W'];\n    next_direction = GameObstacles.ROTARY_MIRROR_NW;\n}\n\nclass CrystalBlock extends GameObstacle {\n    css = 'CRYSTAL_BLOCK';\n    handleFire(game: GameState, position: Position) { }\n}\n\nclass GameBackground extends GameObject {\n    handleTank(game: GameState, position: Position) {}\n}\n\nclass Dirt extends GameBackground {\n    css = 'DIRT';\n}\n\nclass MovableBlockWater extends GameBackground {\n    css = 'MOVABLE_BLOCK_WATER';\n}\n\nconst sameKindTunnel = (t1: Tile, t2: Tile) => {\n    return t1.background === GameBackgrounds.TUNNEL && t2.background === GameBackgrounds.TUNNEL && t1.color === t2.color;\n}\n\nclass Tunnel extends GameBackground {\n    css = 'TUNNEL';\n\n    handleMove(game: GameState, position: Position) {\n        const { board, tank, pendingTunnels } = game;\n        const tunnel = board[position.y][position.x];\n        const haveTank = sameCoord(position, tank);\n        let pending = true;\n        each(board, (row, y) => {\n            each(row, (tile, x) => {\n                if (\n                    sameKindTunnel(tile, tunnel) && \n                    !sameCoord(position, {x, y, direction: 'N'}) &&\n                    !tile.object\n                ) {\n                    if (tunnel.object) {\n                        tile.object = tunnel.object;\n                        delete tunnel.object;\n                        pending = false;\n                    } else if (haveTank) {\n                        tank.x = x;\n                        tank.y = y;\n                        pending = false;\n                    }\n                    return pending;\n                }\n            });\n            return pending;\n        });\n        if (pending) {\n            pendingTunnels.push(position);\n        }\n    }\n\n    handleEmpty(game: GameState, position: Position) { \n        super.handleEmpty(game, position);\n        const { board, pendingTunnels } = game;\n        const index = findIndex(pendingTunnels, ({ x, y }) => {\n            return sameKindTunnel(board[y][x], board[position.y][position.x]);\n        });\n        if (index > -1) {\n            const pending = pendingTunnels.splice(index, 1)[0];\n            if (!sameCoord(pending, position)) {\n                this.handleMove(game, pending);\n            }\n        }\n    }\n}\n\nclass Flag extends GameBackground {\n    css = 'FLAG';\n\n    handleMove(game: GameState, position: Position) {\n        const { tank } = game;\n        if (tank.x === position.x && tank.y === position.y) {\n            game.status = \"WIN\";\n        }\n    };\n}\n\nclass Water extends GameBackground {\n    css = 'WATER';\n\n    handleMove(game: GameState, position: Position) {\n        const { board, tank } = game;\n        const { x, y } = position;\n        const tile = board[y][x];\n        if (tile.object === GameObstacles.MOVABLE_BLOCK) {\n            tile.background = GameBackgrounds.MOVABLE_BLOCK_WATER;\n        }\n        delete tile.object;\n        if (tank.x === x && tank.y === y) {\n            game.status = 'FAIL';\n        }\n    };\n}\n\nclass Ice extends GameBackground {\n    css = 'ICE';\n\n    handleMove(game: GameState, position: Position) {\n        game.next.push({\n            cmd: position.direction,\n            start: position,\n        });\n    }\n}\n\nclass ThinIce extends Ice {\n    css = 'THIN_ICE';\n\n    handleMove(game: GameState, position: Position) {\n        super.handleMove(game, position);\n        game.board[position.y][position.x].background = GameBackgrounds.WATER;\n    }\n}\n\nclass TankMoverN extends GameObject {\n    css = 'TANK_MOVER_N';\n    direction: DIRECTION = 'N';\n\n    handleTank(game: GameState, position: Position) {\n        const { x, y } = position;\n        const { tank } = game;\n        const target = nextPosition({ ...position, direction: this.direction });\n        if (tank.x === x && tank.y === y && isAvailable(target, game.board)) {\n            game.next.push({\n                cmd: this.direction,\n                start: position,\n            });\n        }\n    }\n}\n\nclass TankMoverS extends TankMoverN {\n    css = 'TANK_MOVER_S';\n    direction: DIRECTION = 'S';\n}\n\nclass TankMoverW extends TankMoverN {\n    css = 'TANK_MOVER_W';\n    direction: DIRECTION = 'W';\n}\n\nclass TankMoverE extends TankMoverN {\n    css = 'TANK_MOVER_E';\n    direction: DIRECTION = 'E';\n}\n","import { map, each } from 'lodash';\n\nconst hex = (v: number): string => {\n    return (v < 16 ? '0' : '') + v.toString(16);\n}\n\nconst getPattern = (size: number): [number, number, number] => {\n    const n = Math.floor(Math.cbrt(size));\n    if (n > 255) {\n        return [255, 255, 255];\n    }\n    size -= n * n * n;\n    const pattern: [number, number, number] = [n, n, n];\n    if (size === 0) {\n        return pattern;\n    }\n    pattern[0] += 1;\n    if (size <= n * n) {\n        return pattern;\n    }\n    pattern[1] += 1;\n    if (size <= 2 * n * n + n) {\n        return pattern;\n    }\n    pattern[2] += 1;\n    return pattern;\n}\n\nexport const getColors = (size: number): string[] => {\n    const pattern = getPattern(size);\n\n    const rgbs = map(pattern, (p) => {\n        const colors = [];\n        let color = 0;\n        p -= 1;\n        if (p > 0) {\n            const diff = 255 / p;\n            while (color < 255) {\n                colors.push(Math.floor(color));\n                color += diff;\n            }\n        }\n        colors.push(255);\n        return colors;\n    });\n\n    const results: string[] = [];\n    // const available = rgbs[0].length * rgbs[1].length * rgbs[2].length;\n    // const redundant = Math.ceil(available / (available - size + 1));\n    // let count = 0;\n    each(rgbs[0], (r) => {\n        each(rgbs[1], (g) => {\n            each(rgbs[2], (b) => {\n                // if (count % redundant !== 0) {\n                results.push(`${hex(r)}${hex(g)}${hex(b)}`);\n                // }\n                // count += 1;\n            });\n        });\n    });\n    return results;\n}\n\n","import { GameBackgrounds, GameObstacles } from './tiles';\n\nexport const saveDataMap: {[key: number]: any} = {\n    0: {\n        background: GameBackgrounds.DIRT,\n    },\n    2: {\n        background: GameBackgrounds.FLAG,\n    },\n    3: {\n        background: GameBackgrounds.WATER,\n    },\n    4: {\n        object: GameObstacles.SOLID_BLOCK,\n    },\n    5: {\n        object: GameObstacles.MOVABLE_BLOCK, ///////\n    },\n    6: {\n        object: GameObstacles.BRICKS,\n    },\n    7: {\n        object: GameObstacles.ANTI_TANK_N\n    },\n    8: {\n        object: GameObstacles.ANTI_TANK_E\n    },\n    9: {\n        object: GameObstacles.ANTI_TANK_S\n    },\n    10: {\n        object: GameObstacles.ANTI_TANK_W\n    },\n    11: {\n        object: GameObstacles.MIRROR_NW\n    },\n    12: {\n        object: GameObstacles.MIRROR_NE\n    },\n    13: {\n        object: GameObstacles.MIRROR_SE\n    },\n    14: {\n        object: GameObstacles.MIRROR_SW\n    },\n    15: {\n        background: GameBackgrounds.TANK_MOVER_N\n    },\n    16: {\n        background: GameBackgrounds.TANK_MOVER_E\n    },\n    17: {\n        background: GameBackgrounds.TANK_MOVER_S\n    },\n    18: {\n        background: GameBackgrounds.TANK_MOVER_W\n    },\n    19: {\n        object: GameObstacles.CRYSTAL_BLOCK\n    },\n    20: {\n        object: GameObstacles.ROTARY_MIRROR_NW\n    },\n    21: {\n        object: GameObstacles.ROTARY_MIRROR_NE\n    },\n    22: {\n        object: GameObstacles.ROTARY_MIRROR_SE\n    },\n    23: {\n        object: GameObstacles.ROTARY_MIRROR_SW\n    },\n    24: {\n        background: GameBackgrounds.ICE\n    },\n    25: {\n        background: GameBackgrounds.THIN_ICE,\n    },\n}\n","import { get, map, range, sum, chunk } from 'lodash';\nimport { createSlice, PayloadAction  } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../app/store';\n\nimport { getColors } from '../../utils/colors';\nimport { \n    nextPosition, sameCoord, isAvailable, Board, Position, GameObject, GameBackgrounds\n} from './tiles';\nimport { saveDataMap } from './consts';\n\nexport const BOARD_SIZE = 16;\n\ninterface TLEVEL {\n    board: number[][],\n    levelName: string,\n    hint: string,\n    author: string,\n    scoreDifficulty: number,\n}\ninterface NextAction {\n    cmd: CMD, start: Position\n}\n\nexport type DIRECTION = 'N'|'S'|'W'|'E';\nexport type CMD = DIRECTION | 'FIRE' | 'UNDO';\n\nexport interface PlayField {\n    board: Board,\n    tank: Position,\n    laser: Position | null,\n    status: Status,\n    pendingTunnels: Position[],\n}\n\nexport interface GameState {\n    board: Board,\n    tank: Position,\n    laser: Position | null,\n    status: Status,\n    pendingTunnels: Position[],\n    next: NextAction[],\n    timer: number,\n    levels: TLEVEL[],\n    levelIndex: number,\n};\n\ntype Status = \"WIN\" | \"FAIL\" | \"PLAYING\"\n\nconst isDirection = (cmd: string): cmd is DIRECTION => {\n    return ['N', 'S', 'W', 'E'].includes(cmd);\n}\n\nclass DB {\n    record: CMD[] = [];\n    history: PlayField[] = [];\n\n    save(state: GameState, cmd: CMD) {\n        const { board, tank, laser, status, pendingTunnels } = state;\n        this.record.push(cmd);\n        this.history.push({ board, tank, laser, status, pendingTunnels });\n    }\n}\n\nconst db = new DB();\n\nconst initialState: GameState = {\n    board: range(0, BOARD_SIZE).map(() => {\n        return range(0, BOARD_SIZE).map(() => {\n            return {\n                background: GameBackgrounds.DIRT,\n            };\n        });\n    }),\n    tank: {x: 0, y: 0, direction: 'N'}, \n    laser: null,\n    status: \"PLAYING\",\n    pendingTunnels: [],\n    timer: 0,\n    next: [],\n    levels: [],\n    levelIndex: 0,\n};\n\nconst gameSlice = createSlice({\n    name: 'game',\n    initialState,\n    reducers: {\n        loadLevels(state, action: PayloadAction<TLEVEL[]>) {\n            state.levels = action.payload;\n            localStorage.setItem('levels', JSON.stringify(action.payload));\n            gameSlice.caseReducers.loadLevel(state, loadLevel(0));\n        },\n        loadLevel(state, action: PayloadAction<number>) {\n            const { tank, board, levels } = state;\n            const levelIndex = action.payload;\n            const level = get(levels, [levelIndex]);\n            if (!level) {\n                return;\n            }\n            const colors = getColors(9);\n            colors.shift(); // old lasertank doesn't use back tunnels\n\n            state.levelIndex = levelIndex;\n            level.board.forEach((row, i) => {\n                return row.forEach((cell, j) => {\n                    if (cell === 1) {\n                        tank.x = i;\n                        tank.y = j;\n                        board[j][i] = {\n                            background: GameBackgrounds.DIRT,\n                        }\n                    } else if (cell > 63 && cell < 72) {\n                        board[j][i] = {\n                            color: colors[cell - 64],\n                            background: GameBackgrounds.TUNNEL,\n                        };\n                    } else {\n                        const result = saveDataMap[cell];\n                        if (!result) {\n                            console.log(cell);\n                        }\n                        board[j][i] = {\n                            background: GameBackgrounds.DIRT,\n                            ...result,\n                        };\n                    }\n                });\n            });\n            state.timer += 1;\n            state.status = 'PLAYING';\n        },\n        changeDirection(state, action: PayloadAction<DIRECTION>) {\n            state.tank.direction = action.payload;\n        },\n        move(state, action: PayloadAction<Position>) {\n            const { x, y } = action.payload;\n            const target = nextPosition(action.payload);\n            const { tank, board } = state;\n            if (isAvailable(target, board)) {\n                if (board[y][x].object) {\n                    board[target.y][target.x].object = board[y][x].object;\n                    delete board[y][x].object;\n                } else if (tank.x === x && tank.y === y) {\n                    tank.x = target.x;\n                    tank.y = target.y;\n                }\n                GameObject.handleMove(state, action.payload, target);\n            }\n        },\n        fire(state, action: PayloadAction<NextAction>) {\n            const { tank, board } = state;\n            const { start } = action.payload;\n            const { x, y } = start;\n            const tile = get(board, [y, x]);\n            if (tile) {\n                if (sameCoord(start, tank)) {\n                    state.status = 'FAIL';\n                } else {\n                    state.laser = start;\n                    GameObject.handleFire(state, start);\n                }\n            } else {\n                state.laser = null;\n            }\n        },\n        startCycle(state) {\n            state.next = [];\n        },\n        finishCycle(state) {\n            const { tank } = state;\n            GameObject.checkTank(state);\n            const laser = state.laser;\n            if (laser) {\n                if (sameCoord(laser, tank)) {\n                    state.status = 'FAIL';\n                } else {\n                    const target = nextPosition(laser);\n                    state.next.push({\n                        cmd: 'FIRE',\n                        start: target,\n                    });\n                }\n            }\n            state.timer += 1\n        },\n        undo(state) {\n            return {\n                ...state,\n                ...(db.history.pop()),\n                timer: state.timer + 1,\n            };\n        },\n        moveTank(state, action: PayloadAction<DIRECTION>) {\n            const { tank } = state;\n            const cmd = action.payload;\n            if (tank.direction === cmd) {\n                const from = {...tank};\n                const target = nextPosition(tank);\n                tank.x = target.x;\n                tank.y = target.y;\n                GameObject.handleMove(state, from, target);\n                GameObject.checkTank(state);\n            } else {\n                tank.direction = cmd;\n            }\n            state.timer += 1;\n        },\n        renderFrame(state, action: PayloadAction<NextAction | null>) {\n            const { tank, board, next } = state;\n            state.next = [];\n            if (action?.payload) {\n                next.push(action.payload);\n            }\n            next.forEach((n) => {\n                const { cmd, start } = n;\n                const { x, y } = start;\n                if (isDirection(cmd)) {\n                    const from = { x, y, direction: cmd };\n                    const target = nextPosition(from);\n\n                    if (isAvailable(target, board)) {\n                        if (board[y][x].object) {\n                            board[target.y][target.x].object = board[y][x].object;\n                            delete board[y][x].object;\n                        } else if (sameCoord(tank, from)) {\n                            tank.x = target.x;\n                            tank.y = target.y;\n                        }\n                        GameObject.handleMove(state, from, target);\n                    }\n                } else if (cmd === 'FIRE') {\n                    const tile = get(board, [y, x]);\n                    if (tile) {\n                        if (sameCoord(start, tank)) {\n                            state.status = 'FAIL';\n                        } else {\n                            state.laser = { ...start };\n                            GameObject.handleFire(state, state.laser);\n                        }\n                    } else {\n                        state.laser = null;\n                    }\n                }\n            });\n            GameObject.checkTank(state);\n            const laser = state.laser;\n            if (laser) {\n                if (sameCoord(laser, tank)) {\n                    state.status = 'FAIL';\n                } else {\n                    const target = nextPosition(laser);\n                    state.next.push({\n                        cmd: 'FIRE',\n                        start: target,\n                    });\n                }\n            }\n            state.timer += 1\n        },\n    },\n});\n\nexport const {\n    loadLevel, loadLevels, move, fire, undo, changeDirection, startCycle, finishCycle, renderFrame, moveTank\n} = gameSlice.actions;\n\nexport const exec = (cmd: string): AppThunk => (dispatch, getState) => {\n    const { game } = getState();\n    const { tank, board, status, next, levelIndex } = game;\n    if (cmd === 'UNDO') {\n        dispatch(undo());\n    } else if (cmd === 'NEXT_LEVEL') {\n        dispatch(loadLevel(levelIndex + 1));\n    } else if (cmd === 'PREV_LEVEL') {\n        dispatch(loadLevel(levelIndex - 1));\n    } else if (next.length === 0 && status === 'PLAYING') {\n        const target = nextPosition(tank);\n        if (cmd === 'FIRE') {\n            db.save(game, cmd);\n            dispatch(renderFrame({ cmd, start: target }));\n        } else if (isDirection(cmd)) {\n            if (tank.direction === cmd) {\n                if (isAvailable(target, board)) {\n                    db.save(game, cmd);\n                    dispatch(moveTank(cmd));\n                }\n            } else {\n                dispatch(moveTank(cmd));\n            }\n        }\n    }\n};\n\nexport const openDataFile = (buffer: ArrayBuffer): AppThunk => (dispatch) => {\n    const tLevel = {\n        board: 16 * 16,\n        levelName: 31,\n        hint: 256,\n        author: 31,\n        scoreDifficulty: 2,\n    }; // 576\n    const sizeOfTLevel = sum(Object.values(tLevel));\n\n    const levels = map(range(Math.floor(buffer.byteLength / sizeOfTLevel)), (i): TLEVEL => {\n        let cursor = sizeOfTLevel * i;\n        const data: any = {};\n        map(tLevel, (size, key) => {\n            data[key] = buffer.slice(cursor, cursor + size);\n            cursor += size;\n        });\n        return {\n            board: chunk(Array.from(new Uint8Array(data.board)), 16),\n            levelName: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.levelName))),\n            hint: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.hint))),\n            author: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.author))),\n            scoreDifficulty: new Uint16Array(data.scoreDifficulty)[0],\n        }\n    });\n    dispatch(loadLevels(levels));\n};\n\nexport default gameSlice.reducer;\n","import { map, min, range, bindAll, debounce } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport { BOARD_SIZE, CMD, exec, renderFrame, GameState, loadLevel } from './game';\nimport { Tile, GameBackgrounds, GameObject } from './tiles';\n\nimport './Board.css';\n\ninterface BoardProps {\n    game: GameState,\n}\n\ninterface BoardState {\n    limit: number,\n}\n\nconst BoardTile = React.memo(({ tile, tileSize }: { tile: Tile, tileSize: number }) => {\n    return <div style={{ width: tileSize, height: tileSize }} className={[\n        'board-object',\n        GameObject.getBackgroundCss(tile),\n    ].filter(Boolean).join(' ')}>\n        {tile.background === GameBackgrounds.TUNNEL && <div style={{ \n            background: 'transparent',\n            borderRadius: '50%',\n            border: `${tileSize/8}px solid #${tile.color}`,\n            boxSizing: 'border-box',\n        }}/>}\n        {tile.object && <div className={GameObject.getObstacleCss(tile)}/>} \n    </div>\n});\n\nconst BoardRow = React.memo(({ row, tileSize }: {row: Tile[], tileSize: number}) => {\n    return <div className=\"row\">\n        {map(row, (tile, j) => {\n            return <BoardTile key={j} tile={tile} tileSize={tileSize}/>\n        })}\n    </div>\n})\n\nclass Board extends React.Component<BoardProps, BoardState> {\n    state = { limit: 0 };\n    boardRef = React.createRef<HTMLInputElement>();\n    interval!: NodeJS.Timeout;\n\n    constructor(props: BoardProps) {\n        super(props)\n        bindAll(this, ['handleResize']);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        const animations = ['bg0', 'bg1', 'bg2'];\n        this.interval = setInterval(async () => {\n            const el = this.boardRef.current;\n            if (el) {\n                const backgrounds = el.querySelectorAll([\n                    '.ANTI_TANK_N', '.ANTI_TANK_E', '.ANTI_TANK_S', '.ANTI_TANK_W',\n                    '.TANK_MOVER_N', '.TANK_MOVER_S', '.TANK_MOVER_W', '.TANK_MOVER_E',\n                    '.FLAG', '.WATER',\n                ].join(', '));\n                const bg = animations.shift() || '';\n                backgrounds.forEach((background) => {\n                    background.classList.remove(...animations);\n                    background.classList.add(bg);\n                });\n                animations.push(bg);\n            }\n        }, 600);\n        this.handleResize();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        clearInterval(this.interval);\n    }\n\n    handleResize() {\n        if (this.boardRef.current) {\n            const { offsetWidth: width, offsetHeight: height } = this.boardRef.current;\n            this.setState({ limit: min([width, height]) ?? 0 });\n        }\n    }\n\n    shouldComponentUpdate(nextProps: BoardProps, nextState: BoardState) {\n        return nextProps.game.timer !== this.props.game.timer ||\n            nextState.limit !== this.state.limit\n        ;\n    }\n\n    render() {\n        const { game } = this.props;\n        const { limit } = this.state;\n        const { board, tank, laser } = game;\n        const tileSize = Math.floor(limit / (BOARD_SIZE + 2));\n        const tileStyle = { width: tileSize, height: tileSize };\n        return <div ref={this.boardRef} className=\"Board\">\n            <div>\n                {map([\n                    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'\n                ], (letter, i) => {\n                    return <div key={i} style={{ width: tileSize, display: 'inline-block' }}>{letter}</div>\n                })}\n            </div>\n            <div style={{\n                width: tileSize * BOARD_SIZE, height: tileSize * BOARD_SIZE, margin: '0 auto'\n            }}>\n                {map(board, (row, i) => {\n                    return <BoardRow key={i} row={row} tileSize={tileSize}/>\n                })}\n                {map(range(BOARD_SIZE), (i) => {\n                    return <div key={i} style={{\n                        position: 'absolute', verticalAlign: 'center', lineHeight: `${tileSize}px`,\n                        left: -tileSize, top: i * tileSize\n                    }}>{i + 1}</div>\n                })}\n                <div className={`tank TANK_${tank.direction}`} style={{ \n                    left: tank.x * tileSize, top: tank.y * tileSize, ...tileStyle\n                }}/>\n                {laser && <div className={`laser ${laser.direction}`} \n                    style={['N', 'S'].includes(laser.direction) ? { \n                        left: laser.x * tileSize + (tileSize / 2 - 2), \n                        top: laser.y * tileSize, \n                        ...tileStyle, width: 4,\n                    } : {\n                        left: laser.x * tileSize, \n                        top: laser.y * tileSize + (tileSize / 2 - 1), \n                        ...tileStyle, height: 4,\n                    }}\n                />}\n            </div>\n        </div>\n    }\n}\n\nexport default () => {\n    const game = useSelector((state: RootState) => state.game)\n    const dispatch = useDispatch();\n    const { next, status, levelIndex } = game;\n    const debounceRenderFrame = debounce(() => {\n        return dispatch(renderFrame(null));\n    }, 10);\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            const cmdMap: {[key: string]: CMD} = {\n                ArrowUp: 'N',\n                ArrowDown: 'S',\n                ArrowLeft: 'W',\n                ArrowRight: 'E',\n                'u': 'UNDO',\n                'U': 'UNDO',\n                ' ': 'FIRE',\n            };\n            const cmd = cmdMap[e.key];\n            if (cmd) {\n                dispatch(exec(cmd));\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (next.length > 0 && status !== 'FAIL') {\n            debounceRenderFrame();\n        }\n    }, [debounceRenderFrame, next, status]);\n\n    useEffect(() => {\n        if (status === 'WIN') {\n            dispatch(loadLevel(levelIndex + 1));\n        }\n    }, [dispatch, levelIndex, status])\n\n    return <Board game={game}/>\n}","import { map } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { openDataFile } from '../../features/game/game';\n\nimport './MenuBar.css';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const [currentMenu, setMenu] = useState<null|{ menu: any, top: number, left: number}>(null);\n\n    const handleFile = (file: File) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            console.log(e.target?.result);\n            if (e.target?.result) {\n                dispatch(openDataFile(e.target?.result as ArrayBuffer));\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n    return <div className=\"MenuBar\">\n        {map([\n            {\n                name: 'Game',\n                items: [\n                    {\n                        render: () => {\n                            return <div>\n                                <label>\n                                    Open Data File\n                                    <input id=\"fileInput\" type=\"file\" \n                                        style={{display: 'none'}} \n                                        onChange={(e) => {\n                                            const files = e.currentTarget.files;\n                                            if (files?.length) {\n                                                handleFile(files[0]);\n                                            }\n                                            setMenu(null);\n                                        }}\n                                    />\n                                </label>\n                            </div>\n                        },\n                    },\n                ],\n            },\n            {\n                name: 'Options',\n                items: [\n                    {name: 'Animation'},\n                    // {name: 'Sound'},\n                ],\n            },\n            {\n                name: 'Editor', \n                onClick: () => {\n                    setMenu(null);\n                },\n            },\n            {\n                name: 'Help',\n                items: [\n                    {name: 'About'},\n                ],\n            },\n        ], (menu, i) => {\n            const { name, ...props } = menu;\n            return <div key={i}\n                className={`MenuBarItem ${name === currentMenu?.menu.name ? 'active ' : ''}`} \n                onClick={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    setMenu(currentMenu ? null : {\n                        menu,\n                        top: offsetTop + offsetHeight,\n                        left: offsetLeft,\n                    });\n                }}\n                onMouseEnter={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    if (currentMenu) {\n                        setMenu({\n                            menu,\n                            top: offsetTop + offsetHeight,\n                            left: offsetLeft,\n                        });\n                    }\n                }}\n                {...props}\n            >{name}</div>\n        })}\n        {<ul className=\"Menu\" style={!currentMenu?.menu.items ? {display: 'none'} : {\n            top: currentMenu.top,\n            left: currentMenu.left,\n        }}>\n            {map(currentMenu?.menu.items, ({ name, render }, i) => {\n                return <li key={i}>\n                    {render ? render() : name}\n                </li>;\n            })}\n        </ul>}\n    </div>\n}","import { map } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport './App.css';\nimport { exec, loadLevels } from '../features/game/game';\nimport Board from '../features/game/Board';\nimport MenuBar from '../features/ui/MenuBar';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const levels = localStorage.getItem('levels');\n    if (levels) {\n      dispatch(loadLevels(JSON.parse(levels)));\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <MenuBar/>\n      <div className=\"main\">\n        <Board/>\n        <div className=\"control-panel\">\n          <div className=\"info\"></div>\n          <div className=\"control\">\n            {map([\n              [{name: 'Undo', cmd: 'UNDO'}, {name: 'Hint', cmd: 'HINT'}],\n              [{name: 'Save Position', cmd: ''}],\n              [{name: 'Restore Position', cmd: ''}],\n              [{name: 'New', cmd: ''}, {name: 'Restart', cmd: ''}],\n              [{name: 'Load Level', cmd: ''}],\n              [{name: '<< Level', cmd: 'PREV_LEVEL'}, {name: 'Level >>', cmd: 'NEXT_LEVEL'}],\n            ], (row, i) => {\n              return <div key={i}>\n                {map(row, ({name, cmd}, j) => {\n                  return <div key={j} onClick={() => {\n                    if (cmd) {\n                      dispatch(exec(cmd))\n                    }\n                  }}>{name}</div>\n                })}\n              </div>\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit'\n\nimport gameSlice from '../features/game/game';\n\nconst rootReducer = combineReducers({\n    game: gameSlice,\n});\n\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from './rootReducer';\n\n\nconst store = configureStore({\n    reducer: rootReducer\n});\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './app/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}