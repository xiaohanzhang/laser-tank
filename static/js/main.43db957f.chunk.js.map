{"version":3,"sources":["features/game/tiles.ts","features/game/game.ts","features/game/consts.ts","features/game/files.ts","utils/adt.ts","utils/algorithm.ts","utils/async.ts","features/game/BoardTile.tsx","features/game/Board.tsx","features/ui/ui.ts","features/ui/MenuBar.tsx","components/ControlButton.tsx","components/Popup.tsx","features/ui/EditorPanel.tsx","features/ui/ControlPanel.tsx","app/App.tsx","serviceWorker.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["GameBackgrounds","GameObstacles","CMD","sameCoord","p1","p2","x","y","getDirection","UP","DOWN","LEFT","RIGHT","reverseDirection","direction","fireLasert","game","laser","force","tank","status","isAvailable","position","board","target","get","object","nextPosition","GameObject","css","from","to","beforeCheckPending","pending","push","range","BOARD_SIZE","map","background","DIRT","FLAG","Flag","Dirt","WATER","Water","MOVABLE_BLOCK_WATER","MovableBlockWater","ICE","Ice","THIN_ICE","ThinIce","TANK_MOVER_N","TankMoverN","TANK_MOVER_S","TankMoverS","TANK_MOVER_E","TankMoverE","TANK_MOVER_W","TankMoverW","TUNNEL","Tunnel","obstacle","BRICKS","Bricks","SOLID_BLOCK","SolidBlock","CRYSTAL_BLOCK","CrystalBlock","MOVABLE_BLOCK","MovableBlock","ANTI_TANK_N","AntiTankN","ANTI_TANK_S","AntiTankS","ANTI_TANK_W","AntiTankW","ANTI_TANK_E","AntiTankE","ANTI_TANK_DEAD_N","AntiTankDeadN","ANTI_TANK_DEAD_S","AntiTankDeadS","ANTI_TANK_DEAD_W","AntiTankDeadW","ANTI_TANK_DEAD_E","AntiTankDeadE","MIRROR_NW","MirrorNW","MIRROR_NE","MirrorNE","MIRROR_SE","MirrorSE","MIRROR_SW","MirrorSW","ROTARY_MIRROR_NW","RotaryMirrorNW","ROTARY_MIRROR_NE","RotaryMirrorNE","ROTARY_MIRROR_SE","RotaryMirrorSE","ROTARY_MIRROR_SW","RotaryMirrorSW","TANT","Tank","tile","this","getBackgroundClass","getObstacleClass","state","getObstacle","handleLaser","checkFire","each","reverse","handlePending","toTile","fromTile","getBackground","handleLeaving","handleLanding","prevBoard","shouldCheckTank","handleTank","callback","forEachTile","current","sawTank","cleanUp","handle","inSkipping","prevTank","rendering","handleTankMove","skipTank","GameObstacle","index","findIndex","p","splice","targetTile","handleMove","dead","dead_direction","directions","indexOf","hitBack","hitMirror","isMoving","find","fire_directions","getFireDirections","includes","checkLaser","next_direction","GameBackground","sameKindTunnel","t1","t2","color","tunnel","pendingTunnel","row","pendingTunnels","obstacleIndex","tankIndex","pedningTile","getNextTarget","moveTank","shouldPending","checkTank","Boolean","saveDataMap","0","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","TUNNEL_COLORS","getTunnelColor","id","ab2str","buffer","String","fromCharCode","apply","Array","Uint8Array","filter","ab2int","Uint16Array","ab2array","str2ab","str","size","view","i","length","charCodeAt","int2ab","n","array2ab","arr","forEach","v","console","log","tLevelSize","concat","levelName","hint","author","scoreDifficulty","openDataFile","sizeOfTLevel","sumBy","Object","values","Math","floor","byteLength","cursor","data","key","func","slice","chunk","tRecordRecSize","levelIndex","exportFile","buffers","name","link","document","createElement","href","URL","createObjectURL","Blob","type","download","click","exportLevelFile","tLevelBoard","obstacleMap","backgroundMap","j","cell","getTunnelId","tLevel","toArrayBuffer","BinaryHeap","iterateeFunc","identity","nodes","iteratee","shift","node","sortedLastIndexBy","value","found","eachRight","last","reconstructPath","cameFrom","path","sleep","ms","Promise","resolve","setTimeout","isDirection","cmd","isBoardCMD","FIRE","db","record","history","frames","levels","snapshoot","initialState","createEmptyBoard","timer","pause","positionSaved","pendingMoves","pendingMoveIndex","autoRec","editor","editorTile","frameIndex","level","gameSlice","createSlice","reducers","loadLevels","action","payload","localStorage","setItem","JSON","stringify","caseReducers","loadLevel","actions","result","parseBoard","undo","pop","savePosition","restorePosition","setFrame","setAutoRec","setPendingMove","toggleEditor","selectEditorTile","edit","fireTank","renderFrame","checkPending","fire","dispatch","getState","xDiff","yDiff","abs","handleBoardCMD","goto","toId","toString","toCoord","toInteger","hScore","start","goal","fScore","forEachNeighbor","gScore","heap","insert","neighbor","g","remove","isEmpty","aStar","move","a","ui","Date","now","exec","max","renderInterval","save","saveFrame","PREV_FRAME","min","NEXT_FRAME","UNDO","RESTART","SAVE_POSITION","RESTORE_POSITION","NEXT_LEVEL","PREV_LEVEL","TOGGLE_EDITOR","SAVE_LEVEL","LOAD_REC","TOGGLE_AUTO_REC","autoPlayRec","NEXT_REC","PREV_REC","CLOSE_REC","EXPORT_REC","tRecordRec","cmdMap","records","dataSize","exportReplayFile","BoardTile","React","memo","tileSize","onClick","onContextMenu","style","width","height","className","getBackgroundCss","join","borderRadius","border","boxSizing","pointerEvents","getObstacleCss","BoardRow","rowIndex","useDispatch","e","clickBoard","preventDefault","directionToStr","Board","props","limit","boardRef","createRef","interval","bindAll","window","addEventListener","handleResize","animations","setInterval","animation","el","backgrounds","querySelectorAll","bg","classList","add","removeEventListener","clearInterval","offsetWidth","offsetHeight","setState","nextProps","nextState","tileStyle","ref","letter","display","margin","verticalAlign","lineHeight","left","top","Component","useSelector","debounceRenderFrame","debounce","useEffect","handleKeyDown","ARROWUP","ARROWDOWN","ARROWLEFT","ARROWRIGHT","PAUSE","toUpperCase","cancel","uiSlice","setRenderInterval","toggleAnimation","useState","currentMenu","setMenu","handleFile","file","fileType","reader","FileReader","onload","recordsSize","32","37","38","39","40","Error","openReplayFile","readAsArrayBuffer","items","render","onChange","files","currentTarget","open","menu","event","offsetTop","offsetLeft","onMouseEnter","ControlButton","styled","button","Popup","div","EditorPanel","FormTable","table","EditorControl","popup","setPopup","formData","handleChange","field","toNumber","prompt","flex","flexDirection","disabled","rows","errors","alert","LevelsPopup","onClose","fontSize","textAlign","showPopup","setShowPopup","lastCmd","numShoot","numMove","alignItems","App","parse","getItem","error","location","hostname","match","rootReducer","combineReducers","reducer","store","configureStore","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43db957f.chunk.js","sourcesContent":["import { get, each, range, reverse, findIndex } from 'lodash';\nimport {  GameState, DIRECTION, BOARD_SIZE, CMD } from './game';\n\nexport enum GameBackgrounds {\n    // background\n    FLAG = 1,\n    DIRT,\n    WATER,\n    MOVABLE_BLOCK_WATER,\n    ICE,\n    THIN_ICE,\n    TANK_MOVER_N,\n    TANK_MOVER_S,\n    TANK_MOVER_E,\n    TANK_MOVER_W,\n    TUNNEL,\n}\n\nexport enum GameObstacles {\n    // obstacle\n    BRICKS = 32,\n    SOLID_BLOCK = 33,\n    CRYSTAL_BLOCK = 34,\n    MOVABLE_BLOCK = 35,\n    ANTI_TANK_N = 36,\n    ANTI_TANK_S = 37,\n    ANTI_TANK_W = 38,\n    ANTI_TANK_E = 39,\n    ANTI_TANK_DEAD_N = 40,\n    ANTI_TANK_DEAD_S = 41,\n    ANTI_TANK_DEAD_W = 42,\n    ANTI_TANK_DEAD_E = 43,\n    MIRROR_NW = 44,\n    MIRROR_NE = 45,\n    MIRROR_SE = 46,\n    MIRROR_SW = 47,\n    ROTARY_MIRROR_NW = 48,\n    ROTARY_MIRROR_NE = 49,\n    ROTARY_MIRROR_SE = 50,\n    ROTARY_MIRROR_SW = 51,\n    TANT = 52,\n}\n\nexport const sameCoord = (p1: Position | null, p2: Position | null): boolean => {\n    return p1 === p2 || (!!p1 && !!p2 && p1.x === p2.x && p1.y === p2.y); \n}\n\n// get direction of p2 relative to p1\nexport const getDirection = (p1: Coordinate, p2: Coordinate): DIRECTION | null => {\n    if (p1.x !== p2.x || p1.y !== p2.y) {\n        if (p1.x === p2.x) {\n            return p1.y > p2.y ? CMD.UP : CMD.DOWN;\n        } else if (p1.y === p2.y) {\n            return p1.x > p2.x ? CMD.LEFT : CMD.RIGHT;\n        }\n    }\n    return null;\n} \n\nconst reverseDirection = (direction: DIRECTION): DIRECTION => {\n    const reverseMap: {[key: string]: DIRECTION} = {\n        [CMD.UP]: CMD.DOWN, \n        [CMD.DOWN]: CMD.UP, \n        [CMD.LEFT]: CMD.RIGHT, \n        [CMD.RIGHT]: CMD.LEFT, \n    };\n    return reverseMap[direction];\n}\n\nconst fireLasert = (game: GameState, laser: Position, force: boolean = false) => {\n    if (game.laser === null || force) {\n        game.laser = laser;\n        // TODO: add this to impelemnt odd/even tank bug\n        if (sameCoord(laser, game.tank)) {\n            game.status = 'FAIL';\n        }\n    }\n}\n\nconst forEachTile = (board: Board, position: Position, callback: (tile: Tile, position: Position) => void | boolean) => {\n    let target = nextPosition(position);\n    while (target.x < BOARD_SIZE && target.y < BOARD_SIZE && target.x >= 0 && target.y >= 0) {\n        if (callback(board[target.y][target.x], target) === false) {\n            break;\n        }\n        target = nextPosition(target);\n    }\n}\n\nexport const isAvailable = (position: Coordinate, board: Board): boolean => {\n    const { x, y } = position;\n    const target = get(board, `${y}.${x}`);\n    return !!(target && !target.object);\n}\n\nexport const nextPosition = (position: Position) => {\n    const { x, y, direction } = position;\n    return {\n        [CMD.UP]: { x, y: y - 1, direction },\n        [CMD.DOWN]: { x, y: y + 1, direction },\n        [CMD.RIGHT]: { x: x + 1, y, direction },\n        [CMD.LEFT]: { x: x - 1, y, direction },\n    }[direction];\n}\n\nexport interface Tile {\n    background: GameBackgrounds,\n    color?: string,\n    object?: GameObstacles,\n};\n\nexport type Board = Tile[][]; \n\nexport interface Coordinate {\n    x: number,\n    y: number,\n}\n\nexport interface Position extends Coordinate {\n    direction: DIRECTION,\n}\n\nexport class GameObject {\n    static createEmptyBoard() {\n        return range(0, BOARD_SIZE).map(() => {\n            return range(0, BOARD_SIZE).map(() => {\n                return {\n                    background: GameBackgrounds.DIRT,\n                };\n            });\n        })\n    }\n\n    static getBackgroundClass(background: GameBackgrounds) {\n        return {\n            [GameBackgrounds.FLAG]: Flag,\n            [GameBackgrounds.DIRT]: Dirt,\n            [GameBackgrounds.WATER]: Water, \n            [GameBackgrounds.MOVABLE_BLOCK_WATER]: MovableBlockWater,\n            [GameBackgrounds.ICE]: Ice,\n            [GameBackgrounds.THIN_ICE]: ThinIce,\n            [GameBackgrounds.TANK_MOVER_N]: TankMoverN,\n            [GameBackgrounds.TANK_MOVER_S]: TankMoverS,\n            [GameBackgrounds.TANK_MOVER_E]: TankMoverE,\n            [GameBackgrounds.TANK_MOVER_W]: TankMoverW,\n            [GameBackgrounds.TUNNEL]: Tunnel,\n        }[background];\n    }\n\n    static getObstacleClass(obstacle: GameObstacles) {\n        return {\n            [GameObstacles.BRICKS]: Bricks,\n            [GameObstacles.SOLID_BLOCK]: SolidBlock,\n            [GameObstacles.CRYSTAL_BLOCK]: CrystalBlock,\n            [GameObstacles.MOVABLE_BLOCK]: MovableBlock,\n            [GameObstacles.ANTI_TANK_N]: AntiTankN,\n            [GameObstacles.ANTI_TANK_S]: AntiTankS,\n            [GameObstacles.ANTI_TANK_W]: AntiTankW,\n            [GameObstacles.ANTI_TANK_E]: AntiTankE,\n            [GameObstacles.ANTI_TANK_DEAD_N]: AntiTankDeadN,\n            [GameObstacles.ANTI_TANK_DEAD_S]: AntiTankDeadS,\n            [GameObstacles.ANTI_TANK_DEAD_W]: AntiTankDeadW,\n            [GameObstacles.ANTI_TANK_DEAD_E]: AntiTankDeadE,\n            [GameObstacles.MIRROR_NW]: MirrorNW,\n            [GameObstacles.MIRROR_NE]: MirrorNE,\n            [GameObstacles.MIRROR_SE]: MirrorSE,\n            [GameObstacles.MIRROR_SW]: MirrorSW,\n            [GameObstacles.ROTARY_MIRROR_NW]: RotaryMirrorNW,\n            [GameObstacles.ROTARY_MIRROR_NE]: RotaryMirrorNE,\n            [GameObstacles.ROTARY_MIRROR_SE]: RotaryMirrorSE,\n            [GameObstacles.ROTARY_MIRROR_SW]: RotaryMirrorSW,\n            [GameObstacles.TANT]: Tank,\n        }[obstacle];\n    }\n\n    static getBackground(tile: Tile) {\n        return new (this.getBackgroundClass(tile.background))();\n    }\n\n    static getObstacle(tile: Tile) {\n        return !tile.object ? null : new (this.getObstacleClass(tile.object))();\n    }\n\n    static checkLaser(state: GameState) {\n        const { laser, tank, board } = state;\n        if (laser) {\n            const target = nextPosition(laser);\n            const tile = get(board, [target.y, target.x]);\n            if (tile) {\n                state.laser = target;\n                if (sameCoord(target, tank)) {\n                    state.status = 'FAIL';\n                } else {\n                    this.getObstacle(tile)?.handleLaser(state, target);\n                }\n            } else {\n                state.laser = null;\n            }\n            if (!state.laser) {\n                this.checkFire(state);\n            }\n        }\n    }\n\n    static checkPending(game: GameState) {\n        const { pending } = game;\n        if (game.status === 'FAIL') {\n            return;\n        }\n        game.pending = [];\n        each(\n            reverse(pending), \n            ({ from, to }) => {\n                this.handlePending(game, from , to)\n            }\n        );\n        game.pending = reverse(game.pending);\n    }\n\n    static handlePending(game: GameState, from: Position, to: Position) {\n        const { board } = game;\n        const toTile = get(board, [to.y, to.x]);\n        if (from) {\n            const fromTile = get(board, [from.y, from.x]);\n            this.getBackground(fromTile).handleLeaving(game, from);\n        }\n        this.getBackground(toTile).handleLanding(game, from, to);\n        return game.status !== 'FAIL';\n    }\n\n    static checkTank(game: GameState, prevBoard: Board) {\n        const { board, tank } = game;\n        const tile = board[tank.y][tank.x];\n        if (game.status !== 'FAIL') {\n            if (!tile.object) {\n                this.checkFire(game);\n            }\n            const background = this.getBackground(board[tank.y][tank.x]);\n            if (background.shouldCheckTank(game, prevBoard)) {\n                background.handleTank(game, false);\n            }\n        }\n    }\n\n    static checkFire(game: GameState) {\n        const { board, tank } = game;\n        const tile = board[tank.y][tank.x];\n        if (!tile.object && game.status !== 'FAIL') {\n            each([CMD.RIGHT, CMD.LEFT, CMD.DOWN, CMD.UP], (direction: DIRECTION) => {\n                forEachTile(board, { ...tank, direction }, (tile, current) => {\n                    return this.getObstacle(tile)?.sawTank(game, current);\n                });\n                return game.status !== 'FAIL';\n            });\n        }\n    }\n\n    static cleanUp(game: GameState) {\n        const { cleanUp, board } = game;\n        game.cleanUp = [];\n        each(cleanUp, (position) => {\n            this.getBackground(board[position.y][position.x]).cleanUp(game, position);\n        });\n    }\n\n    static moveTank(game: GameState, to: Position, handle: boolean = false, inSkipping: boolean = false) {\n        const { board, tank } = game;\n        const tile = board[to.y][to.x];\n        const background = GameObject.getBackground(tile);\n        game.prevTank = { ...tank };\n        if (isAvailable(to, game.board)) {\n            tank.x = to.x;\n            tank.y = to.y;\n            game.rendering = true;\n            if (tile.background === GameBackgrounds.TUNNEL) {\n                background.handleTankMove(game);\n            }\n            GameObject.checkFire(game);\n            if (game.status !== 'FAIL') {\n                if (handle) {\n                    background.handleTank(game, true);\n                } else if (!inSkipping) {\n                    background.skipTank(game);\n                }\n            } \n        }\n    }\n\n    static getObstacleCss(tile: Tile) {\n        return this.getObstacle(tile)?.css;\n    }\n\n    static getBackgroundCss(tile: Tile) {\n        return this.getBackground(tile)?.css;\n    }\n\n    css = '';\n\n    handleLeaving(game: GameState, position: Position) {};\n\n    pending(game: GameState, from: Position, to: Position, beforeCheckPending: boolean) {\n        game.pending.push({ from, to });\n    }\n}\n\nclass GameObstacle extends GameObject {\n    handleLaser(game: GameState, position: Position) {\n        game.laser = null;\n    }\n\n    sawTank(game: GameState, position: Position): boolean {\n        // false means current obstacle already blocked further obstacles seeing tank\n        return false;\n    }\n\n    skipLaser(game: GameState) {}\n\n    handleMove(game: GameState, from: Position, to: Position | null, beforeCheckPending: boolean) {\n        const { board, pending } = game;\n        const fromTile = board[from.y][from.x];\n        if (!to) {\n            to = nextPosition(from);\n        }\n        const index = pending.findIndex((p) => {\n            return sameCoord(p.to, from);\n        });\n        if (index > -1) {\n            pending.splice(index, 1);\n        }\n        if (fromTile.object && isAvailable(to, board)) {\n            const targetTile = get(board, [to.y, to.x]);\n            targetTile.object = fromTile.object;\n            delete fromTile.object;\n\n            // if (game.laser && sameCoord(from, game.laser)) {\n            //     GameObject.getObstacle(targetTile)?.skipLaser(game);\n            // }\n\n            if (targetTile.background === GameBackgrounds.TUNNEL) {\n                GameObject.handlePending(game, from, to);\n            } else {\n                GameObject.getBackground(targetTile).pending(game, from, to, beforeCheckPending);\n            }\n        }\n    }\n}\n\nclass Tank extends GameObstacle {\n    css = 'tank TANK_N';\n}\n\nclass Bricks extends GameObstacle {\n    css = 'BRICKS';\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        delete game.board[position.y][position.x].object;\n    };\n}\n\nclass SolidBlock extends GameObstacle {\n    css = 'SOLID_BLOCK';\n}\n\nclass MovableBlock extends GameObstacle {\n    css = 'MOVABLE_BLOCK';\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        this.handleMove(game, position, null, true);\n    }\n}\n\nclass AntiTankN extends GameObstacle {\n    css = 'ANTI_TANK_N';\n    dead = GameObstacles.ANTI_TANK_DEAD_N;\n    dead_direction: DIRECTION = CMD.DOWN;\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        if (position.direction === this.dead_direction) {\n            game.board[position.y][position.x].object = this.dead;\n        } else {\n            this.handleMove(game, position, null, true);\n        }\n    }\n\n    sawTank(game: GameState, position: Position): boolean {\n        const { tank } = game;\n        const direction = reverseDirection(this.dead_direction);\n        if (getDirection(position, tank) === direction) {\n            fireLasert(game, nextPosition({ ...position, direction, }));\n        }\n        return super.sawTank(game, position);\n    }\n}\n\nclass AntiTankS extends AntiTankN {\n    css = 'ANTI_TANK_S';\n    dead = GameObstacles.ANTI_TANK_DEAD_S;\n    dead_direction: DIRECTION = CMD.UP;\n}\n\nclass AntiTankE extends AntiTankN {\n    css = 'ANTI_TANK_E';\n    dead = GameObstacles.ANTI_TANK_DEAD_E;\n    dead_direction: DIRECTION = CMD.LEFT;\n}\n\nclass AntiTankW extends AntiTankN {\n    css = 'ANTI_TANK_W';\n    dead = GameObstacles.ANTI_TANK_DEAD_W;\n    dead_direction: DIRECTION = CMD.RIGHT;\n}\n\nclass AntiTankDeadN extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_N';\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        this.handleMove(game, position, position, true);\n    }\n}\n\nclass AntiTankDeadS extends AntiTankDeadN {\n    css = 'ANTI_TANK_DEAD_S';\n}\n\nclass AntiTankDeadW extends AntiTankDeadN {\n    css = 'ANTI_TANK_DEAD_W';\n}\n\nclass AntiTankDeadE extends AntiTankDeadN {\n    css = 'ANTI_TANK_DEAD_E';\n}\n\nclass MirrorNW extends GameObstacle {\n    css = 'MIRROR_NW';\n    directions: DIRECTION[] = [CMD.UP, CMD.LEFT];\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        const index = this.directions.indexOf(position.direction);\n        if (index !== -1) {\n            this.hitBack(game, position);\n        } else {\n            this.hitMirror(game, position);\n        }\n    }\n\n    getFireDirections(): DIRECTION[] {\n        return [\n            reverseDirection(this.directions[0]),\n            reverseDirection(this.directions[1]),\n        ]\n    }\n\n    hitBack(game: GameState, position: Position) {\n        this.handleMove(game, position, null, true);\n    }\n\n    hitMirror(game: GameState, position: Position) {\n        const isMoving = game.pending.find(({ from, to }) => {\n            return sameCoord(to, position);\n        });\n        const fire_directions = this.getFireDirections()\n        const direction =  this.directions[1 - fire_directions.indexOf(position.direction)];\n        fireLasert(game, {\n            ...position,\n            direction\n        }, true);\n        if (isMoving && \n            [GameBackgrounds.ICE, GameBackgrounds.THIN_ICE].includes(\n                game.board[position.y][position.x].background\n            )\n        ) {\n            GameObject.checkLaser(game);\n        }\n    }\n\n    // skipLaser(game: GameState) {\n    //     // TODO: tmp hack, should move this logic to mirror and anti-tank\n    //     game.laser = {\n    //         ...to,\n    //         direction: game.laser.direction\n    //     };\n    // }\n}\n\nclass MirrorNE extends MirrorNW {\n    css = 'MIRROR_NE';\n    directions: DIRECTION[] = [CMD.UP, CMD.RIGHT];\n}\n\nclass MirrorSE extends MirrorNW {\n    css = 'MIRROR_SE';\n    directions: DIRECTION[] = [CMD.DOWN, CMD.RIGHT];\n}\n\nclass MirrorSW extends MirrorNW {\n    css = 'MIRROR_SW';\n    directions: DIRECTION[] = [CMD.DOWN, CMD.LEFT];\n}\n\nclass RotaryMirrorNW extends MirrorNW {\n    css = 'ROTARY_MIRROR_NW';\n    directions: DIRECTION[] = [CMD.UP, CMD.LEFT];\n    next_direction = GameObstacles.ROTARY_MIRROR_NE;\n\n    hitBack(game: GameState, position: Position) {\n        \n        game.board[position.y][position.x].object = this.next_direction;\n    }\n}\n\nclass RotaryMirrorNE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_NE';\n    directions: DIRECTION[] = [CMD.UP, CMD.RIGHT];\n    next_direction = GameObstacles.ROTARY_MIRROR_SE;\n}\n\nclass RotaryMirrorSE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SE';\n    directions: DIRECTION[] = [CMD.DOWN, CMD.RIGHT];\n    next_direction = GameObstacles.ROTARY_MIRROR_SW;\n}\n\nclass RotaryMirrorSW extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SW';\n    directions: DIRECTION[] = [CMD.DOWN, CMD.LEFT];\n    next_direction = GameObstacles.ROTARY_MIRROR_NW;\n}\n\nclass CrystalBlock extends GameObstacle {\n    css = 'CRYSTAL_BLOCK';\n    handleLaser(game: GameState, position: Position) { }\n}\n\nclass GameBackground extends GameObject {\n    handleLanding(game: GameState, from: Position, to: Position) {}\n    handleTank(game: GameState, inSkipping: boolean) {}\n    handleTankMove(game: GameState) {}\n    skipTank(game: GameState) {}\n    cleanUp(game: GameState, position: Position) {}\n    shouldSkip(game: GameState, position: Position): boolean {\n        return false;\n    }\n    shouldCheckTank(game: GameState, prevBoard: Board) {\n        return true;\n    }\n}\n\nclass Dirt extends GameBackground {\n    css = 'DIRT';\n}\n\nclass MovableBlockWater extends GameBackground {\n    css = 'MOVABLE_BLOCK_WATER';\n}\n\nconst sameKindTunnel = (t1: Tile, t2: Tile) => {\n    return t1.background === GameBackgrounds.TUNNEL && t2.background === GameBackgrounds.TUNNEL && t1.color === t2.color;\n}\n\nclass Tunnel extends GameBackground {\n    css = 'TUNNEL';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const { board } = game;\n        const tunnel = board[to.y][to.x];\n        let pendingTunnel = true;\n        each(board, (row, y) => {\n            each(row, (tile, x) => {\n                if (\n                    sameKindTunnel(tile, tunnel) && \n                    !sameCoord(to, {x, y, direction: CMD.UP}) &&\n                    !tile.object\n                ) {\n                    tile.object = tunnel.object;\n                    delete tunnel.object;\n                    pendingTunnel = false;\n                    return pendingTunnel;\n                }\n            });\n            return pendingTunnel;\n        });\n        if (pendingTunnel) {\n            game.pendingTunnels.push({\n                ...to,\n                direction: CMD.UP // TODO: use UP to indicate pending obstacle for now, should refactoring this\n            });\n        }\n    }\n\n    handleTankMove(game: GameState) {\n        super.handleTankMove(game);\n        const { board, tank } = game;\n        const tunnel = board[tank.y][tank.x];\n        let pendingTunnel = true;\n        each(board, (row, y) => {\n            each(row, (tile, x) => {\n                if (\n                    sameKindTunnel(tile, tunnel) && \n                    !sameCoord(tank, {x, y, direction: CMD.UP}) &&\n                    !tile.object\n                ) {\n                    tank.x = x;\n                    tank.y = y;\n                    pendingTunnel = false;\n                    return pendingTunnel;\n                }\n            });\n            return pendingTunnel;\n        });\n        if (pendingTunnel) {\n            game.pendingTunnels.push({ \n                ...tank,\n                direction: CMD.DOWN // TODO: use DOWN to indicate pending tank for now, should refactoring this\n            });\n        }\n    }\n\n    handleLeaving(game: GameState, position: Position) { \n        super.handleLeaving(game, position);\n        const { board, tank, pendingTunnels } = game;\n        const obstacleIndex = findIndex(pendingTunnels, ({ x, y, direction }) => {\n            return sameKindTunnel(board[y][x], board[position.y][position.x]) && direction === CMD.UP;\n        });\n        const tankIndex = findIndex(pendingTunnels, ({ x, y, direction }) => {\n            return sameKindTunnel(board[y][x], board[position.y][position.x]) && direction === CMD.DOWN;\n        });\n        if (obstacleIndex > -1) {\n            const pending = pendingTunnels.splice(obstacleIndex, 1)[0];\n            if (!sameCoord(pending, position)) {\n                const pedningTile = board[pending.y][pending.x];\n                if (pedningTile.object) {\n                    const targetTile = get(board, [position.y, position.x]);\n                    targetTile.object = pedningTile.object;\n                    delete pedningTile.object;\n                }\n            }\n        } else if (tankIndex > -1) {\n            const pending = pendingTunnels.splice(tankIndex, 1)[0];\n            if (!sameCoord(pending, position) && sameCoord(tank, pending)) {\n                if (isAvailable(position, game.board)) {\n                    tank.x = position.x;\n                    tank.y = position.y;\n                    game.rendering = true;\n                }\n            }\n        }\n    }\n}\n\nclass Flag extends GameBackground {\n    css = 'FLAG';\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        game.status = \"WIN\";\n    }\n\n    skipTank(game: GameState) {\n        game.status = \"WIN\";\n    }\n}\n\nclass Water extends GameBackground {\n    css = 'WATER';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const { board } = game;\n        const tile = board[to.y][to.x];\n        if (tile.object === GameObstacles.MOVABLE_BLOCK) {\n            tile.background = GameBackgrounds.MOVABLE_BLOCK_WATER;\n        }\n        delete tile.object;\n    };\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        game.status = 'FAIL';\n    }\n\n    pending(game: GameState, from: Position, to: Position, beforeCheckPending: boolean) {\n        super.pending(game, from, to, beforeCheckPending);\n        this.handleLanding(game, from, to);\n    }\n\n    skipTank(game: GameState) {\n        const { board, prevTank } = game;\n        const prevTile = board[prevTank.y][prevTank.x];\n        if (prevTile.background === GameBackgrounds.ICE) {\n            this.handleTank(game, true);\n        }\n    }\n}\n\nclass Ice extends GameBackground {\n    css = 'ICE';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const target = this.getNextTarget(game, from, to, true);\n        if (target) {\n            GameObject.getObstacle(game.board[to.y][to.x])?.handleMove(game, to, target, false);\n        }\n    }\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        const { tank, prevTank } = game;\n        const direction = getDirection(prevTank, tank);\n        if (direction) {\n            GameObject.moveTank(game, nextPosition({\n                ...tank,\n                direction,\n            }), false, false);\n        }\n    }\n\n    pending(game: GameState, from: Position, to: Position, beforeCheckPending: boolean) {\n        if (!beforeCheckPending || this.shouldPending(game, from, to)) {\n            super.pending(game, from, to, beforeCheckPending);\n        }\n    }\n\n    shouldPending(game: GameState, from: Position, to: Position): boolean {\n        return !!this.getNextTarget(game, from, to, false);\n    }\n\n    getNextTarget(game: GameState, from: Position, to: Position, checkTank: boolean): Position | null {\n        const direction = getDirection(from, to);\n        if (direction) {\n            const target = nextPosition({ ...to, direction, });\n            if ((!checkTank || !sameCoord(game.tank, target)) && isAvailable(target, game.board)) {\n                return target;\n            }\n        }\n        return null;\n    }\n\n    shouldSkip(game: GameState, position: Position): boolean {\n        const tile = get(game.board, [position.y, position.x])\n        const background = GameObject.getBackground(tile);\n        return !Boolean(tile.object) && !(background instanceof Ice);\n    }\n\n    shouldCheckTank(game: GameState, prevBoard: Board) {\n        const { tank } = game;\n        return !prevBoard[tank.y][tank.x].object;\n    }\n}\n\nclass ThinIce extends Ice {\n    css = 'THIN_ICE';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const tile = game.board[to.y][to.x];\n        if (tile.object) {\n            // TODO: this doesn't make much sense, should handle this in cleanUp. this is for tutor.lvl 68\n            new Water().handleLanding(game, to, to);\n        }\n        game.cleanUp.push(to);\n    }\n\n    cleanUp(game: GameState, position: Position) {\n        game.board[position.y][position.x].background = GameBackgrounds.WATER\n    }\n\n    shouldPending(game: GameState, from: Position, to: Position) {\n        return true;\n    }\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        const { tank, board } = game;\n        const position = { ...tank };\n        const tile = board[position.y][position.x];\n        super.handleTank(game, inSkipping);\n        tile.background = GameBackgrounds.WATER;\n        if (sameCoord(position, game.tank)) {\n            GameObject.getBackground(tile).handleTank(game, inSkipping);\n        }\n    }\n}\n\nclass TankMoverN extends GameBackground {\n    css = 'TANK_MOVER_N';\n    direction: DIRECTION = CMD.UP;\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        GameObject.moveTank(game, nextPosition({ ...game.tank, direction: this.direction }), false, true);\n    }\n\n    skipTank(game: GameState) {\n        GameObject.moveTank(game, nextPosition({ ...game.tank, direction: this.direction }), false, true);\n    }\n\n    shouldSkip(game: GameState, position: Position): boolean {\n        const tile = get(game.board, [position.y, position.x]);\n        const background = GameObject.getBackground(tile);\n        return !Boolean(tile.object) && !(background instanceof TankMoverN);\n    }\n\n    shouldCheckTank(game: GameState, prevBoard: Board) {\n        const { board, tank } = game;\n        return !board[tank.y][tank.x].object;\n    }\n}\n\nclass TankMoverS extends TankMoverN {\n    css = 'TANK_MOVER_S';\n    direction: DIRECTION = CMD.DOWN;\n}\n\nclass TankMoverW extends TankMoverN {\n    css = 'TANK_MOVER_W';\n    direction: DIRECTION = CMD.LEFT;\n}\n\nclass TankMoverE extends TankMoverN {\n    css = 'TANK_MOVER_E';\n    direction: DIRECTION = CMD.RIGHT;\n}\n","import { each, isEmpty, toInteger, get, map, max, min } from 'lodash';\nimport { createSlice, PayloadAction  } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../app/store';\n\nimport { \n    nextPosition, isAvailable, Board, Coordinate, Position, GameObject, getDirection, GameBackgrounds, Tile, GameObstacles\n} from './tiles';\nimport { parseBoard, exportReplayFile, exportLevelFile } from './files';\nimport { aStar } from '../../utils/algorithm';\nimport { sleep } from '../../utils/async';\n\nexport const BOARD_SIZE = 16;\n\nexport interface TLEVEL {\n    board: number[][],\n    levelName: string,\n    hint: string,\n    author: string,\n    scoreDifficulty: number,\n}\n\nexport enum CMD {\n    UP = 'N',\n    DOWN = 'S',\n    LEFT = 'W',\n    RIGHT = 'E',\n    FIRE = ' ',\n    UNDO = 'UNDO',\n    PAUSE = 'PAUSE',\n    NEXT_LEVEL = 'NEXT_LEVEL',\n    PREV_LEVEL = 'PREV_LEVEL',\n    PREV_FRAME = 'PREV_FRAME',\n    NEXT_FRAME = 'NEXT_FRAME',\n    LOAD_REC = 'LOAD_REC',\n    PREV_REC = 'PREV_REC',\n    NEXT_REC = 'NEXT_REC',\n    CLOSE_REC = 'CLOSE_REC',\n    TOGGLE_AUTO_REC = 'TOGGLE_AUTO_REC',\n    EXPORT_REC = 'EXPORT_REC',\n    TOGGLE_EDITOR = 'TOGGLE_EDITOR',\n    SAVE_LEVEL = 'SAVE_LEVEL',\n    HINT = 'HINT',\n    RESTART = 'RESTART',\n    SAVE_POSITION = 'SAVE_POSITION',\n    RESTORE_POSITION = 'RESTORE_POSITION',\n};\n\nexport type DIRECTION = CMD.UP|CMD.DOWN|CMD.LEFT|CMD.RIGHT;\nexport const isDirection = (cmd: CMD): cmd is DIRECTION => {\n    return [CMD.UP, CMD.DOWN, CMD.LEFT, CMD.RIGHT].includes(cmd);\n}\n\nexport type BoardCMD = DIRECTION|CMD.FIRE;\nexport const isBoardCMD = (cmd: CMD): cmd is BoardCMD => {\n    return isDirection(cmd) || cmd === CMD.FIRE;\n}\n\nexport interface PlayField {\n    board: Board,\n    tank: Position,\n    prevTank: Position,\n    laser: Position | null,\n    pending: {from: Position, to: Position}[], // may not need this\n    pendingTunnels: Position[],\n    status: Status,\n    levelIndex: number,\n}\n\nexport interface GameState extends PlayField {\n    cleanUp: Position[],\n    timer: number,\n    rendering: boolean,\n    pause: boolean,\n    positionSaved: boolean,\n    frameIndex: number,\n    pendingMoves: BoardCMD[],\n    pendingMoveIndex: number,\n    autoRec: boolean,\n    editor: boolean,\n    editorTile: Tile,\n    level: TLEVEL | null,\n};\n\nexport type Status = \"WIN\" | \"FAIL\" | \"PLAYING\"\n\nclass DB {\n    record: BoardCMD[] = [];\n    history: PlayField[] = [];\n    frames: PlayField[] = [];\n    levels: TLEVEL[] = [];\n    snapshoot: { state: PlayField, record: BoardCMD[] } | null = null;\n\n    save(state: GameState, cmd: BoardCMD) {\n        const { \n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        } = state;\n        this.record.push(cmd);\n        this.history.push({ \n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        });\n    }\n\n    saveFrame(state: GameState) {\n        const { \n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        } = state;\n        this.frames.push({\n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        });\n    }\n\n    savePosition(state: GameState) {\n        const { \n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        } = state;\n        this.snapshoot = { \n            state: {board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex},\n            record: this.record,\n        };\n    }\n}\n\nexport const db = new DB();\n\nexport const initialState: GameState = {\n    board: GameObject.createEmptyBoard(),\n    tank: {x: 0, y: 0, direction: CMD.UP}, \n    prevTank: {x: 0, y: 0, direction: CMD.UP}, \n    laser: null,\n    pending: [],\n    pendingTunnels: [],\n    status: \"PLAYING\",\n    cleanUp: [],\n    levelIndex: 0,\n    timer: 0,\n    rendering: false,\n    pause: false,\n    positionSaved: false,\n    pendingMoves: [],\n    pendingMoveIndex: 0,\n    autoRec: false,\n    editor: false,\n    editorTile: { background: GameBackgrounds.DIRT },\n    frameIndex: 0,\n    level: null,\n};\n\nconst gameSlice = createSlice({\n    name: 'game',\n    initialState,\n    reducers: {\n        loadLevels(state, action: PayloadAction<{ levels: TLEVEL[], levelIndex: number }>) {\n            const { levels, levelIndex } = action.payload;\n            db.levels = levels;\n            localStorage.setItem('levels', JSON.stringify(levels));\n            gameSlice.caseReducers.loadLevel(state, gameSlice.actions.loadLevel(levelIndex));\n        },\n        loadLevel(state, action: PayloadAction<number>) {\n            const levelIndex = action.payload;\n            const level = get(db.levels, [levelIndex]);\n            // console.log(`${levelIndex}: ${db.record.join('')}`);\n            if (!level) {\n                return;\n            }\n            state.level = level;\n            localStorage.setItem('levelIndex', JSON.stringify(levelIndex));\n            const { board, tank } = parseBoard(level);\n            state.board = board;\n            state.tank = tank;\n            state.prevTank = {...tank};\n            state.laser = null;\n            state.pending = [];\n            state.pendingTunnels = [];\n            state.timer = state.timer === 0 ? 1 : 0;\n            state.rendering = false;\n            state.pause = false;\n            state.status = 'PLAYING';\n            state.frameIndex = 0;\n            db.record = [];\n            db.frames = [];\n            if (state.levelIndex !== levelIndex) {\n                db.history = [];\n                db.snapshoot = null;\n                state.levelIndex = levelIndex;\n                state.positionSaved = false;\n            }\n        },\n        undo(state) {\n            db.record.pop();\n            db.frames = [];\n            return {\n                ...state,\n                ...(db.history.pop()),\n                timer: state.timer + 1,\n                frameIndex: 0,\n            };\n        },\n        savePosition(state) {\n            state.positionSaved = true;\n        },\n        restorePosition(state) {\n            db.record = [...db.snapshoot?.record || []];\n            db.frames = [];\n            return {\n                ...state,\n                ...(db.snapshoot?.state || {}),\n                timer: state.timer + 1,\n                frameIndex: 0,\n            };\n        },\n        setFrame(state, action: PayloadAction<number>) {\n            const frameIndex = action.payload;\n            return {\n                ...state,\n                ...(db.frames[db.frames.length - 1 - frameIndex]),\n                frameIndex,\n                timer: state.timer + 1,\n            }\n        },\n        setAutoRec(state, action: PayloadAction<boolean>) {\n            state.autoRec = action.payload;\n        },\n        pendingMoves(state, action: PayloadAction<BoardCMD[]>) {\n            state.pendingMoveIndex = 0;\n            state.pendingMoves = action.payload;\n            state.autoRec = false;\n        },\n        setPendingMove(state, action: PayloadAction<number>) {\n            if (get(state.pendingMoves, action.payload)) {\n                state.pendingMoveIndex = action.payload;\n            } else {\n                state.pendingMoveIndex = 0;\n                state.pendingMoves = [];\n                state.autoRec = false;\n            }\n        },\n        toggleEditor(state) {\n            state.editor = !state.editor;\n        },\n        selectEditorTile(state, action: PayloadAction<Tile>) {\n            state.editorTile = action.payload;\n        },\n        edit(state, action: PayloadAction<Coordinate>) {\n            const { tank, board, editorTile } = state;\n            const { x, y } = action.payload;\n            board[y][x] = {...editorTile};\n            if (editorTile.object === GameObstacles.TANT) {\n                delete board[y][x].object;\n                tank.x = x;\n                tank.y = y;\n                tank.direction = CMD.UP;\n            }\n            state.timer += 1;\n        },\n        moveTank(state, action: PayloadAction<DIRECTION>) {\n            const { tank } = state;\n            const cmd = action.payload;\n            db.frames = [];\n            if (tank.direction === cmd) {\n                GameObject.moveTank(state, nextPosition(tank), true);\n            } else {\n                tank.direction = cmd;\n                state.prevTank = { ...tank };\n            }\n            state.timer += 1;\n            state.rendering = state.status !== 'FAIL';\n        },\n        fireTank(state) {\n            const { tank } = state;\n            db.frames = [];\n            if (!state.laser) {\n                state.laser = tank;\n                state.rendering = true;\n                state.timer += 1;\n            }\n            // gameSlice.caseReducers.renderFrame(state);\n        },\n        renderFrame(state) {\n            const { board } = state;\n            const prevBoard: Board = map(board, (row) => {\n                return map(row, (tile) => {\n                    return {...tile};\n                });\n            });\n            state.rendering = false;\n            // move laser\n            // check fail \n            // obstacle handle laser \n            //      move obstacle, pending target and src\n            GameObject.checkLaser(state);\n            // handle landing obstacle \n            // handle leaving obstacle\n            GameObject.checkPending(state);\n            // obstacle sawTank\n            // background handleTank\n            GameObject.checkTank(state, prevBoard);\n            GameObject.cleanUp(state);\n            state.timer += 1;\n            state.rendering = state.status === 'PLAYING' && (\n                state.rendering || Boolean(state.laser) || state.pending.length > 0\n            )\n        },\n    },\n});\n\nexport const renderFrame = (): AppThunk => (dispatch, getState) => {\n    dispatch(gameSlice.actions.renderFrame());\n    db.saveFrame(getState().game);\n}\n\nexport const fire = (x: number, y: number): AppThunk => (dispatch, getState) => {\n    const { game } = getState();\n    const { tank } = game;\n    const xDiff = x - tank.x;\n    const yDiff = y - tank.y;\n    let direction = tank.direction;\n    if (xDiff !== 0 || yDiff !== 0) {\n        if (yDiff >= Math.abs(xDiff)) {\n            direction = CMD.DOWN;\n        } else if (-yDiff >= Math.abs(xDiff)) {\n            direction = CMD.UP;\n        } else if (xDiff > 0) {\n            direction = CMD.RIGHT;\n        } else if (xDiff < 0) {\n            direction = CMD.LEFT;\n        }\n    }\n    if (direction !== tank.direction) {\n        dispatch(handleBoardCMD(direction));\n    }\n    dispatch(handleBoardCMD(CMD.FIRE));\n}\n\nexport const clickBoard = (x: number, y: number): AppThunk => (dispatch, getState) => {\n    const { game } = getState();\n    const { editor } = game;\n    if (editor) {\n        dispatch(gameSlice.actions.edit({x, y}));\n    } else {\n        dispatch(goto(x, y));\n    }\n}\n\nexport const goto = (x: number, y: number): AppThunk => (dispatch, getState) => {\n    const { game } = getState();\n    const { tank, board } = game;\n    const toId = ({x, y}: Coordinate) => {\n        return (y * BOARD_SIZE + x).toString();\n    };\n    const toCoord = (id: string) => {\n        const value = toInteger(id);\n        const x = value % BOARD_SIZE;\n        const y = Math.floor(value/BOARD_SIZE);\n        return {x, y};\n    }\n    const hScore = (from: Coordinate, to: Coordinate): number => {\n        return Math.abs(from.x - to.x) + Math.abs(from.y - to.y);\n    }\n    const path = aStar(toId(tank), toId({x, y}), hScore(tank, {x, y}), (current, callback) => {\n        const {x, y} = toCoord(current);\n        each([{x, y: y - 1}, {x: x + 1, y}, {x, y: y + 1}, {x: x - 1, y}], (neighbor) => {\n            const tile = get(board, [neighbor.y, neighbor.x]);\n            if (\n                tile && !tile.object && [\n                    GameBackgrounds.DIRT, GameBackgrounds.FLAG, GameBackgrounds.MOVABLE_BLOCK_WATER,\n                ].includes(tile.background)\n            ) {\n                callback(toId(neighbor), 1, hScore(neighbor, tank));\n            }\n        });\n    });\n\n    const move = async () => {\n        const { game, ui } = getState();\n        const { tank, rendering } = game;\n        if (path && path.length > 0) {\n            const start = Date.now();\n            if (!rendering) {\n                const target = toCoord(path[0]);\n                const direction = getDirection(tank, target);\n                if (direction) {\n                    if (direction === tank.direction) {\n                        path.shift();\n                    }\n                    dispatch(exec(direction));\n                } else {\n                    path.shift();\n                }\n            }\n            \n            await sleep(max([ui.renderInterval - (Date.now() - start), 0]) || 0);\n            move();\n        }\n    }\n    move();\n}\n\nconst autoPlayRec  = (): AppThunk => async (dispatch, getState) => {\n    const { ui, game } = getState();\n    const { autoRec, rendering, pendingMoves, pendingMoveIndex, status } = game;\n    if (autoRec && pendingMoveIndex < pendingMoves.length && status === 'PLAYING') {\n        const start = Date.now();\n        if (!rendering) {\n            dispatch(exec(CMD.NEXT_REC));\n        }\n        await sleep(max([ui.renderInterval - (Date.now() - start), 0]) || 0);\n        dispatch(autoPlayRec());\n    }\n}\n\nconst handleBoardCMD = (cmd: CMD): AppThunk => (dispatch, getState) => {\n    const actions = gameSlice.actions;\n    const { game } = getState();\n    const { tank, board, status, pending, laser, frameIndex } = game;\n    if (isBoardCMD(cmd)) {\n        if (frameIndex > 0) {\n            dispatch(actions.setFrame(0));\n        } else if (pending.length === 0 && !laser && status === 'PLAYING') {\n            const target = nextPosition(tank);\n            if (cmd === CMD.FIRE) {\n                db.save(game, cmd);\n                dispatch(actions.fireTank());\n                db.saveFrame(game);\n            } else if (\n                isDirection(cmd) && \n                (tank.direction !== cmd || isAvailable(target, board))\n            ) {\n                db.save(game, cmd);\n                dispatch(actions.moveTank(cmd));\n                db.saveFrame(game);\n            }\n        }\n    }\n}\n\nexport const exec = (cmd: CMD, payload?: any): AppThunk => (dispatch, getState) => {\n    const actions = gameSlice.actions;\n    const { game } = getState();\n    let username = '';\n    const { levelIndex, frameIndex, pendingMoves, pendingMoveIndex, autoRec, board, tank } = game;\n    if (cmd === CMD.PREV_FRAME) {\n        dispatch(actions.setFrame(\n            min([frameIndex + 1, db.frames.length - 1]) || \n            (db.frames.length - 1)\n        ));\n    } else if (cmd === CMD.NEXT_FRAME) {\n        dispatch(actions.setFrame(max([frameIndex - 1, 0]) || 0));\n    } else if (cmd === CMD.UNDO) {\n        dispatch(actions.undo());\n    } else if (cmd === CMD.RESTART) {\n        dispatch(actions.loadLevel(levelIndex));\n    } else if (cmd === CMD.SAVE_POSITION && frameIndex === 0) {\n        db.savePosition(game);\n        dispatch(actions.savePosition());\n    } else if (cmd === CMD.RESTORE_POSITION) {\n        dispatch(actions.restorePosition());\n    } else if (cmd === CMD.NEXT_LEVEL) {\n        dispatch(actions.loadLevel(levelIndex + 1));\n    } else if (cmd === CMD.PREV_LEVEL) {\n        dispatch(actions.loadLevel(levelIndex - 1));\n    } else if (cmd === CMD.TOGGLE_EDITOR) {\n        dispatch(actions.toggleEditor());\n    } else if (cmd === CMD.SAVE_LEVEL) {\n        exportLevelFile({\n            board,\n            tank,\n            levelName: payload.levelName,\n            hint: payload.hint || '',\n            author: payload.author,\n            scoreDifficulty: payload.scoreDifficulty,\n        });\n    } else if (cmd === CMD.LOAD_REC) {\n        dispatch(actions.loadLevel(levelIndex));\n        dispatch(actions.pendingMoves(payload));\n    } else if (cmd === CMD.TOGGLE_AUTO_REC) {\n        dispatch(actions.setAutoRec(!autoRec));\n        dispatch(autoPlayRec());\n    } else if (cmd === CMD.PREV_REC) {\n        dispatch(actions.setPendingMove(pendingMoveIndex - 1));\n        dispatch(actions.undo());\n    } else if (cmd === CMD.NEXT_REC) {\n        const move = get(pendingMoves, [pendingMoveIndex]);\n        if (move) {\n            dispatch(actions.setPendingMove(pendingMoveIndex + 1));\n            dispatch(handleBoardCMD(move));\n        }\n    } else if (cmd === CMD.CLOSE_REC) {\n        dispatch(actions.pendingMoves([]));\n    } else if (cmd === CMD.EXPORT_REC) {\n        const level = db.levels[levelIndex];\n        if (level) {\n            exportReplayFile({\n                levelName: level.levelName,\n                author: username,\n                levelIndex: levelIndex + 1,\n                records: db.record,\n            });\n        }\n    } else if (isBoardCMD(cmd) && isEmpty(pendingMoves)) {\n        dispatch(handleBoardCMD(cmd));\n    }\n};\n\nexport default gameSlice;\n","import { GameBackgrounds, GameObstacles } from './tiles';\n\nexport const saveDataMap: {[key: number]: any} = {\n    0: {\n        background: GameBackgrounds.DIRT,\n    },\n    2: {\n        background: GameBackgrounds.FLAG,\n    },\n    3: {\n        background: GameBackgrounds.WATER,\n    },\n    4: {\n        object: GameObstacles.SOLID_BLOCK,\n    },\n    5: {\n        object: GameObstacles.MOVABLE_BLOCK, ///////\n    },\n    6: {\n        object: GameObstacles.BRICKS,\n    },\n    7: {\n        object: GameObstacles.ANTI_TANK_N\n    },\n    8: {\n        object: GameObstacles.ANTI_TANK_E\n    },\n    9: {\n        object: GameObstacles.ANTI_TANK_S\n    },\n    10: {\n        object: GameObstacles.ANTI_TANK_W\n    },\n    11: {\n        object: GameObstacles.MIRROR_NW\n    },\n    12: {\n        object: GameObstacles.MIRROR_NE\n    },\n    13: {\n        object: GameObstacles.MIRROR_SE\n    },\n    14: {\n        object: GameObstacles.MIRROR_SW\n    },\n    15: {\n        background: GameBackgrounds.TANK_MOVER_N\n    },\n    16: {\n        background: GameBackgrounds.TANK_MOVER_E\n    },\n    17: {\n        background: GameBackgrounds.TANK_MOVER_S\n    },\n    18: {\n        background: GameBackgrounds.TANK_MOVER_W\n    },\n    19: {\n        object: GameObstacles.CRYSTAL_BLOCK\n    },\n    20: {\n        object: GameObstacles.ROTARY_MIRROR_NW\n    },\n    21: {\n        object: GameObstacles.ROTARY_MIRROR_NE\n    },\n    22: {\n        object: GameObstacles.ROTARY_MIRROR_SE\n    },\n    23: {\n        object: GameObstacles.ROTARY_MIRROR_SW\n    },\n    24: {\n        background: GameBackgrounds.ICE\n    },\n    25: {\n        background: GameBackgrounds.THIN_ICE,\n    },\n}\n","import { get, map, sumBy, range, chunk } from 'lodash';\n\nimport { CMD, BoardCMD } from './game';\nimport { Board, Position, GameBackgrounds, GameObstacles, GameObject, Coordinate } from './tiles';\nimport { saveDataMap } from './consts';\n\nexport interface TLEVEL {\n    board: number[][],\n    levelName: string,\n    hint: string,\n    author: string,\n    scoreDifficulty: number,\n}\n\nexport interface TRECORDREC\t{\n\tlevelName: string,  // char LName[31];  // Level Name\n\tauthor: string,     // char Author[31];\t// Author of the recording\n\tlevelIndex: number,      // WORD Level;\t\t// Level Number\n    // size: number,       // WORD Size;\t\t// Size of Data -- Data to fallow\n    records: BoardCMD[],\n}\n\nconst TUNNEL_COLORS = [\n    'FB2D0F', '36FA0E', '1538FF', '36FCFF', 'FFFB0A', 'F542F9', 'FFFFFF', 'A1A1A1'\n];\n\nexport const getTunnelColor = (id: number) => {\n    return TUNNEL_COLORS[id];\n}\n\nexport const getTunnelId = (color: string) => {\n    const index = TUNNEL_COLORS.indexOf(color);\n    return index > -1 ? index + 64 : 64;\n}\n\nexport const parseBoard = (tLevel: TLEVEL): { board: Board, tank: Position } => {\n    const board: Board = GameObject.createEmptyBoard();\n    const tank: Position = {x: 0, y: 0, direction: CMD.UP};\n\n    tLevel.board.forEach((row, i) => {\n        return row.forEach((cell, j) => {\n            if (cell === 1) {\n                tank.x = i;\n                tank.y = j;\n                tank.direction = CMD.UP;\n                board[j][i] = {\n                    background: GameBackgrounds.DIRT,\n                }\n            } else if (cell > 63 && cell < 96) {\n                board[j][i] = {\n                    color: getTunnelColor((cell & 15) >> 1),\n                    background: GameBackgrounds.TUNNEL,\n                };\n            } else {\n                const result = saveDataMap[cell];\n                if (!result) {\n                    console.log(cell);\n                }\n                board[j][i] = {\n                    background: GameBackgrounds.DIRT,\n                    ...result,\n                };\n            }\n        });\n    });\n    return { board, tank };\n}\n\nconst ab2str = (buffer: ArrayBuffer) => {\n    return String.fromCharCode.apply(\n        null, Array.from(new Uint8Array(buffer)).filter(Boolean)\n    );\n}\n\nconst ab2int = (buffer: ArrayBuffer) => {\n    return new Uint16Array(buffer)[0];\n}\n\nconst ab2array = (buffer: ArrayBuffer) => {\n    return Array.from(new Uint8Array(buffer));\n}\n\nconst str2ab = (str: string, size: number) => {\n    const view = new Uint8Array(size);\n    for (let i = 0; i < str.length && i < size; i++) {\n        view[i] = str.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\nconst int2ab = (n: number, size: number) => {\n    const view = new Uint16Array(1);\n    view[0] = n;\n    return view.buffer;\n}\n\nconst array2ab = (arr: any[], size: number) => {\n    const view = new Uint8Array(size);\n    arr.forEach((v, i) => {\n        if (i < size) {\n            view[i] = v;\n        }\n    });\n    console.log(arr);\n    return view.buffer;\n}\n\nconst board2ab = (board: number[][], size: number) => {\n    return array2ab(([] as number[]).concat.apply([], board), size);\n}\n\nconst tLevelSize: {[key: string]: [\n    number, \n    (b: ArrayBuffer) => any, \n    (v: any, size: number) => ArrayBuffer \n]} = {\n    board: [16 * 16, ab2array, board2ab],\n    levelName: [31, ab2str, str2ab],\n    hint: [256, ab2str, str2ab],\n    author: [31, ab2str, str2ab],\n    scoreDifficulty: [2, ab2int, int2ab],\n}; // 576\n\nexport const openDataFile = (buffer: ArrayBuffer): TLEVEL[] => {\n    const sizeOfTLevel = sumBy(Object.values(tLevelSize), (v) => v[0]);\n\n    const levels = map(range(Math.floor(buffer.byteLength / sizeOfTLevel)), (i): TLEVEL => {\n        let cursor = sizeOfTLevel * i;\n        const data: any = {};\n        map(tLevelSize, ([size, func], key) => {\n            data[key] = func(buffer.slice(cursor, cursor + size));\n            cursor += size;\n        });\n\n        return {\n            ...data,\n            board: chunk(data.board, 16),\n        }\n    });\n    return levels;\n};\n\nconst tRecordRecSize: {[key: string]: [\n    number, \n    (b: ArrayBuffer) => any, \n    (v: any, size: number) => ArrayBuffer \n]} = {\n    levelName: [31, ab2str, str2ab],\n    author: [31, ab2str, str2ab],\n    levelIndex: [2, ab2int, int2ab],\n    size: [2, ab2int, int2ab],\n};\nexport const openReplayFile = (buffer: ArrayBuffer): TRECORDREC => {\n    const data: any = {};\n    let cursor = 0;\n    map(tRecordRecSize, ([size, func], key) => {\n        data[key] = func(buffer.slice(cursor, cursor + size));\n        cursor += size;\n    });\n\n    // 32 fire, 37 W, 38 N, 39 E, 40 S, \n    const recordsSize = data.size;\n    delete data.size;\n    return {\n        ...data,\n        records: map(\n            new Uint8Array(buffer.slice(cursor, cursor + recordsSize)),\n            (v) => {\n                const cmdMap: {[key: number]: BoardCMD} = {\n                    32: CMD.FIRE,\n                    37: CMD.LEFT,\n                    38: CMD.UP,\n                    39: CMD.RIGHT,\n                    40: CMD.DOWN,\n                };\n                if (!(v in cmdMap)) {\n                    throw new Error(`wrong data in rec file: ${v}`);\n                }\n                return cmdMap[v];\n            }\n        ),\n    }\n}\n\nconst exportFile = (buffers: ArrayBuffer[], name: string) => {\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(new Blob(buffers, {type: \"application/octet-stream\"}));\n    link.download = name;\n    link.click();\n}\n\nexport const exportLevelFile = (data: { \n    board: Board, \n    tank: Coordinate, \n    levelName: string,\n    hint: string,\n    author: string,\n    scoreDifficulty: number,\n}) => {\n    const { board, tank, levelName, hint, author, scoreDifficulty } = data;\n    const tLevelBoard = range(0, 16).map(() => {\n        return range(0, 16).map(() => {\n            return 0;\n        });\n    });\n    const obstacleMap = {\n        [GameObstacles.BRICKS]: 6,\n        [GameObstacles.SOLID_BLOCK]: 4,\n        [GameObstacles.CRYSTAL_BLOCK]: 19,\n        [GameObstacles.MOVABLE_BLOCK]: 5,\n        [GameObstacles.ANTI_TANK_N]: 7,\n        [GameObstacles.ANTI_TANK_S]: 9,\n        [GameObstacles.ANTI_TANK_W]: 10,\n        [GameObstacles.ANTI_TANK_E]: 8,\n        [GameObstacles.ANTI_TANK_DEAD_N]: 7,\n        [GameObstacles.ANTI_TANK_DEAD_S]: 9,\n        [GameObstacles.ANTI_TANK_DEAD_W]: 10,\n        [GameObstacles.ANTI_TANK_DEAD_E]: 8,\n        [GameObstacles.MIRROR_NW]: 11,\n        [GameObstacles.MIRROR_NE]: 12,\n        [GameObstacles.MIRROR_SE]: 13,\n        [GameObstacles.MIRROR_SW]: 14,\n        [GameObstacles.ROTARY_MIRROR_NW]: 20,\n        [GameObstacles.ROTARY_MIRROR_NE]: 21,\n        [GameObstacles.ROTARY_MIRROR_SE]: 22,\n        [GameObstacles.ROTARY_MIRROR_SW]: 23,\n        [GameObstacles.TANT]: 1,\n    };\n    const backgroundMap = {\n        [GameBackgrounds.FLAG]: 2,\n        [GameBackgrounds.DIRT]: 0,\n        [GameBackgrounds.WATER]: 3, \n        [GameBackgrounds.MOVABLE_BLOCK_WATER]: 3,\n        [GameBackgrounds.ICE]: 24,\n        [GameBackgrounds.THIN_ICE]: 25,\n        [GameBackgrounds.TANK_MOVER_N]: 15,\n        [GameBackgrounds.TANK_MOVER_S]: 17,\n        [GameBackgrounds.TANK_MOVER_E]: 16,\n        [GameBackgrounds.TANK_MOVER_W]: 18,\n        [GameBackgrounds.TUNNEL]: 64,\n    };\n\n    board.forEach((row, i) => {\n        return row.forEach((tile, j) => {\n            let cell = (tile.object && get(obstacleMap, tile.object)) ||\n                get(backgroundMap, tile.background)\n            ;\n            if (tile.background === GameBackgrounds.TUNNEL) {\n                cell = getTunnelId(tile.color || '');\n            }\n            tLevelBoard[j][i] = cell;\n        });\n    });\n    tLevelBoard[tank.y][tank.x] = 1;\n    const tLevel: any = {\n        board: tLevelBoard,\n        levelName,\n        hint,\n        author,\n        scoreDifficulty,\n    };\n\n    const buffers = map(tLevelSize, ([size, fromArrayBuffer, toArrayBuffer], key) => {\n        return toArrayBuffer(tLevel[key], size);\n    });\n    exportFile(buffers, `${levelName}.lvl`);\n}\n\nexport const exportReplayFile = (tRecordRec: TRECORDREC) => {\n    const cmdMap: {[key in BoardCMD]: number} = {\n        [CMD.FIRE]: 32,\n        [CMD.LEFT]: 37,\n        [CMD.UP]: 38,\n        [CMD.RIGHT]: 39,\n        [CMD.DOWN]: 40,\n    };\n    const records = map(tRecordRec.records, (cmd) => {\n        return cmdMap[cmd];\n    });\n    const data: any = {\n        ...tRecordRec,\n        levelIndex: 26,\n        size: records.length,\n        records,\n    };\n    const dataSize: {[key: string]: [\n        number, \n        (b: ArrayBuffer) => any, \n        (v: any, size: number) => ArrayBuffer \n    ]} = {\n        ...tRecordRecSize,\n        records: [records.length, ab2array, array2ab],\n    };\n    const buffers = map(dataSize, ([size, fromArrayBuffer, toArrayBuffer], key) => {\n        return toArrayBuffer(data[key], size);\n    });\n    exportFile(buffers, `level_${tRecordRec.levelIndex}.lpb`);\n}","import { iteratee, identity, eachRight, sortedLastIndexBy } from 'lodash';\n\nexport class BinaryHeap<T> {\n    nodes: T[] = [];\n    iteratee: (value: T) => any = identity;\n\n    constructor(iterateeFunc: string | object | ((value: T) => any) = identity) {\n        this.iteratee = iteratee(iterateeFunc);\n    }\n\n    isEmpty() {\n        return this.nodes.length === 0;\n    }\n\n    pop() {\n        return this.nodes.shift();\n    }\n\n    insert(node: T) {\n        const index = sortedLastIndexBy(this.nodes, node, this.iteratee);\n        const value = this.iteratee(node);\n        let found = false;\n\n        eachRight(this.nodes.slice(0, index), (last) => {\n            if (last === node) {\n                found = true;\n                return false;\n            }\n            if (this.iteratee(last) < value) {\n                return false;\n            }\n        });\n        if (!found) {\n            this.nodes.splice(index, 0, node);\n        }\n    }\n\n    indexOf(node: T) {\n        let index = sortedLastIndexBy(this.nodes, node, this.iteratee);\n        const value = this.iteratee(node);\n        eachRight(this.nodes.slice(0, index), (last, i) => {\n            if (last === node) {\n                index = i;\n                return false;\n            }\n            if (this.iteratee(last) < value) {\n                index = -1;\n                return false;\n            }\n        });\n        return index;\n    }\n\n    remove(node: T) {\n        const index = this.indexOf(node);\n        if (index !== -1) {\n            return this.nodes.splice(index, 1)[0];\n        }\n    }\n}\n","import { reverse } from 'lodash';\n\nimport { BinaryHeap } from './adt';\n\nconst reconstructPath = (cameFrom: {[key: string]: string}, current: string) => {\n    const path = [current];\n    while (current in cameFrom) {\n        current = cameFrom[current];\n        path.push(current);\n    }\n    return reverse(path);\n}\n\ninterface AStarNode {\n    id: string,\n    gScore: number, // the cost of the cheapest path from start to current node\n    fScore: number, // the gScore + heuristic cost to goal\n}\n\n// h(n) estimates the cost to reach goal from node n.\nexport const aStar = (\n    start: string, goal: string, fScore: number,\n    forEachNeighbor: (\n        p1: string, callback: (neighbor: string, gScore: number, hScore: number) => void\n    ) => void\n) => {\n    const nodes: {[key: string]: AStarNode} = {};\n    nodes[start] = {id: start, gScore: 0, fScore, };\n\n    // The set of discovered nodes that may need to be (re-)expanded.\n    // Initially, only the start node is known.\n    const heap = new BinaryHeap<AStarNode>('fScore');\n    heap.insert(nodes[start]);\n\n    // For node n, cameFrom[n] is the node immediately preceding it on the cheapest path from start to n currently known.\n    const cameFrom: {[key: string]: string} = {};\n\n    while (!heap.isEmpty()) {\n        const node = heap.pop() as AStarNode; \n        if (node.id === goal) {\n            return reconstructPath(cameFrom, node.id);\n        }\n        forEachNeighbor(node.id, (neighbor, g, hScore) => {\n            const gScore = node.gScore + g;\n            const fScore = gScore + hScore;\n            if (!(neighbor in nodes)) {\n                nodes[neighbor] = { id: neighbor, gScore, fScore, };\n                cameFrom[neighbor] = node.id;\n                heap.insert(nodes[neighbor]);\n            } else if (gScore < nodes[neighbor].gScore) {\n                // This path to neighbor is better than any previous one. Record it!\n                cameFrom[neighbor] = node.id;\n                heap.remove(nodes[neighbor]);\n                nodes[neighbor].gScore = gScore;\n                nodes[neighbor].fScore = fScore;\n                heap.insert(nodes[neighbor]);\n            }\n        });\n    }\n    // can not find a path\n    return false;\n}\n","\nexport const sleep = (ms: number) => {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, ms)\n    })\n}\n","import React, { MouseEventHandler } from 'react';\n\nimport { Tile, GameBackgrounds, GameObject } from './tiles';\n\nconst BoardTile = React.memo(({ \n    tile, tileSize, onClick, onContextMenu \n}: { \n    tile: Tile, tileSize: number, \n    onClick?: MouseEventHandler, \n    onContextMenu?: MouseEventHandler, \n}) => {\n    return <div \n        style={{ width: tileSize, height: tileSize }} \n        className={[\n            'board-object',\n            GameObject.getBackgroundCss(tile),\n        ].filter(Boolean).join(' ')}\n        onClick={onClick}\n        onContextMenu={onContextMenu}\n    >\n        {tile.background === GameBackgrounds.TUNNEL && <div style={{ \n            background: 'transparent',\n            borderRadius: '50%',\n            border: `${tileSize/8}px solid #${tile.color}`,\n            boxSizing: 'border-box',\n            pointerEvents: 'none'\n        }}/>}\n        {tile.object && <div className={GameObject.getObstacleCss(tile)} style={{ pointerEvents: 'none' }}/>} \n    </div>\n});\n\nexport default BoardTile;","import { map, min, range, bindAll, debounce } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport gameSlice, { \n    fire, clickBoard, exec, renderFrame, BOARD_SIZE, CMD, GameState, DIRECTION, \n} from './game';\nimport { Tile } from './tiles';\nimport BoardTile from './BoardTile';\nimport './Board.css';\n\ninterface BoardProps {\n    game: GameState,\n    animation: boolean,\n    dispatch: any,\n}\n\ninterface BoardState {\n    limit: number,\n}\n\nconst BoardRow = React.memo((\n    { row, rowIndex, tileSize }: {row: Tile[], rowIndex: number, tileSize: number}\n) => {\n    const dispatch = useDispatch();\n    return <div className=\"row\">\n        {map(row, (tile, j) => {\n            const x = j;\n            const y = rowIndex;\n            return <BoardTile key={j} tile={tile} tileSize={tileSize}\n                onClick={(e) => {\n                    dispatch(clickBoard(x, y));\n                }}\n                onContextMenu={(e) => {\n                    e.preventDefault();\n                    dispatch(fire(x, y));\n                }}\n            />\n        })}\n    </div>\n});\n\nconst directionToStr = (direction: DIRECTION) => {\n    const directionMap: {[key in DIRECTION]: string} = {\n        [CMD.UP]: 'N',\n        [CMD.DOWN]: 'S',\n        [CMD.LEFT]: 'W',\n        [CMD.RIGHT]: 'E',\n    };\n    return directionMap[direction];\n}\n\nclass Board extends React.Component<BoardProps, BoardState> {\n    state = { limit: 0 };\n    boardRef = React.createRef<HTMLInputElement>();\n    interval!: number;\n\n    constructor(props: BoardProps) {\n        super(props)\n        bindAll(this, ['handleResize']);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        const animations = ['bg0', 'bg1', 'bg2'];\n        this.interval = setInterval(async () => {\n            if (this.props.animation) {\n                const el = this.boardRef.current;\n                if (el) {\n                    const backgrounds = el.querySelectorAll([\n                        '.ANTI_TANK_N', '.ANTI_TANK_E', '.ANTI_TANK_S', '.ANTI_TANK_W',\n                        '.TANK_MOVER_N', '.TANK_MOVER_S', '.TANK_MOVER_W', '.TANK_MOVER_E',\n                        '.FLAG', '.WATER',\n                    ].join(', '));\n                    const bg = animations.shift() || '';\n                    backgrounds.forEach((background) => {\n                        background.classList.remove(...animations);\n                        background.classList.add(bg);\n                    });\n                    animations.push(bg);\n                }\n            }\n        }, 600);\n        this.handleResize();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        clearInterval(this.interval);\n    }\n\n    handleResize() {\n        if (this.boardRef.current) {\n            const { offsetWidth: width, offsetHeight: height } = this.boardRef.current;\n            this.setState({ limit: min([width, height]) ?? 0 });\n        }\n    }\n\n    shouldComponentUpdate(nextProps: BoardProps, nextState: BoardState) {\n        return nextState.limit !== this.state.limit ||\n            nextProps.game.timer !== this.props.game.timer \n        ;\n    }\n\n    render() {\n        const { game, dispatch } = this.props;\n        const { limit } = this.state;\n        const { board, tank, laser } = game;\n        const tileSize = Math.floor(limit / (BOARD_SIZE + 2));\n        const tileStyle = { width: tileSize, height: tileSize };\n        return <div ref={this.boardRef} className=\"Board\">\n            <div>\n                {map([\n                    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'\n                ], (letter, i) => {\n                    return <div key={i} style={{ width: tileSize, display: 'inline-block' }}>{letter}</div>\n                })}\n            </div>\n            <div style={{\n                width: tileSize * BOARD_SIZE, height: tileSize * BOARD_SIZE, margin: '0 auto'\n            }}>\n                {map(board, (row, i) => {\n                    return <BoardRow key={i} rowIndex={i} row={row} tileSize={tileSize}/>\n                })}\n                {map(range(BOARD_SIZE), (i) => {\n                    return <div key={i} style={{\n                        position: 'absolute', verticalAlign: 'center', lineHeight: `${tileSize}px`,\n                        left: -tileSize, top: i * tileSize\n                    }}>{i + 1}</div>\n                })}\n                <div className={`tank TANK_${directionToStr(tank.direction)}`} \n                    style={{ \n                        left: tank.x * tileSize, top: tank.y * tileSize, ...tileStyle\n                    }}\n                    onContextMenu={(e) => {\n                        e.preventDefault();\n                        dispatch(fire(tank.x, tank.y));\n                    }}\n                />\n                {laser && <div className={`laser ${directionToStr(laser.direction)}`} \n                    style={[CMD.UP, CMD.DOWN].includes(laser.direction) ? { \n                        left: laser.x * tileSize + (tileSize / 2 - 2), \n                        top: laser.y * tileSize, \n                        ...tileStyle, width: 4,\n                    } : {\n                        left: laser.x * tileSize, \n                        top: laser.y * tileSize + (tileSize / 2 - 1), \n                        ...tileStyle, height: 4,\n                    }}\n                />}\n            </div>\n            <div>\n                {map(range(0, 16), (i) => {\n                    return <div key={i} style={{ width: tileSize, display: 'inline-block' }}>{i + 1}</div>\n                })}\n            </div>\n        </div>\n    }\n}\n\nexport default () => {\n    const game = useSelector((state: RootState) => state.game)\n    const ui = useSelector((state: RootState) => state.ui)\n    const dispatch = useDispatch();\n    const { status, levelIndex, } = game;\n    const debounceRenderFrame = debounce(() => {\n        return dispatch(renderFrame());\n    }, ui.renderInterval);\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            const cmdMap: {[key: string]: CMD} = {\n                ARROWUP: CMD.UP,\n                ARROWDOWN: CMD.DOWN,\n                ARROWLEFT: CMD.LEFT,\n                ARROWRIGHT: CMD.RIGHT,\n                'U': CMD.UNDO,\n                ' ': CMD.FIRE,\n                'P': CMD.PAUSE,\n            };\n            const cmd = cmdMap[e.key.toUpperCase()];\n            if (cmd) {\n                dispatch(exec(cmd));\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (game.rendering && !game.pause) {\n            debounceRenderFrame();\n        }\n    }, [debounceRenderFrame, game]);\n\n    useEffect(() => {\n        if (status === 'WIN') {\n            debounceRenderFrame.cancel();\n            dispatch(gameSlice.actions.loadLevel(levelIndex + 1));\n        }\n    }, [dispatch, levelIndex, status, debounceRenderFrame])\n\n    return <Board game={game} animation={ui.animation} dispatch={dispatch}/>\n}","import { createSlice, PayloadAction  } from '@reduxjs/toolkit';\n\nexport interface UIState {\n    renderInterval: number,\n    animation: boolean,\n};\n\nconst initialState: UIState = {\n    renderInterval: 100,\n    animation: true,\n};\n\nconst uiSlice = createSlice({\n    name: 'game',\n    initialState,\n    reducers: {\n        setRenderInterval(state, action: PayloadAction<number>) {\n            const interval = action.payload;\n            const max_interval = 10 * 1000;\n            if (interval >= 0 && interval <= max_interval) {\n                state.renderInterval = interval;\n            }\n        },\n        toggleAnimation(state) {\n            state.animation = !state.animation;\n        },\n    },\n});\n\nexport default uiSlice;\n","import { map } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport gameSlice, { exec, CMD } from '../../features/game/game';\nimport uiSlice from '../../features/ui/ui';\nimport { openDataFile, openReplayFile } from '../../features/game/files';\n\nimport './MenuBar.css';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const { actions } = gameSlice;\n    const [currentMenu, setMenu] = useState<null|{ menu: any, top: number, left: number}>(null);\n\n    const handleFile = (file: File, fileType: string) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            if (e.target?.result) {\n                const buffer = e.target?.result as ArrayBuffer\n                if (fileType === 'lvl') {\n                    dispatch(actions.loadLevels({\n                        levels: openDataFile(buffer),\n                        levelIndex: 0\n                    }));\n                } else {\n                    const { records } = openReplayFile(buffer);\n                    dispatch(exec(CMD.LOAD_REC, records));\n                }\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n    return <div className=\"MenuBar\">\n        {map([\n            {\n                name: 'Game',\n                items: [{\n                    render: () => {\n                        return <div>\n                            <label>\n                                Open Data File\n                                <input type=\"file\" style={{display: 'none'}} \n                                    onChange={(e) => {\n                                        const files = e.currentTarget.files;\n                                        if (files?.length) {\n                                            handleFile(files[0], 'lvl');\n                                        }\n                                        setMenu(null);\n                                    }}\n                                />\n                            </label>\n                        </div>\n                    },\n                }, {\n                    render: () => {\n                        return <div>\n                            <label>\n                                Open Playback File\n                                <input type=\"file\" style={{display: 'none'}} \n                                    onChange={(e) => {\n                                        const files = e.currentTarget.files;\n                                        if (files?.length) {\n                                            handleFile(files[0], 'lpb');\n                                        }\n                                        setMenu(null);\n                                    }}\n                                />\n                            </label>\n                        </div>\n                    },\n                }, {\n                    name: 'Save Recording',\n                    onClick: () => {\n                        dispatch(exec(CMD.EXPORT_REC))\n                    },\n                }],\n            },\n            {\n                name: 'Options',\n                items: [\n                    {name: 'Animation', onClick: () => { \n                        dispatch(uiSlice.actions.toggleAnimation());\n                    }},\n                    // {name: 'Sound'},\n                ],\n            },\n            {\n                name: 'Editor', \n                onClick: () => {\n                    setMenu(null);\n                    dispatch(exec(CMD.TOGGLE_EDITOR))\n                },\n            },\n            {\n                name: 'Help',\n                items: [\n                    {name: 'About'},\n                ],\n            },\n            {\n                name: 'GitHub',\n                onClick: () => {\n                    window.open('https://github.com/xiaohanzhang/laser-tank');\n                },\n            }\n        ], (menu, i) => {\n            const { name, ...props } = menu;\n            return <div key={i}\n                className={`MenuBarItem ${name === currentMenu?.menu.name ? 'active ' : ''}`} \n                onClick={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    setMenu(currentMenu ? null : {\n                        menu,\n                        top: offsetTop + offsetHeight,\n                        left: offsetLeft,\n                    });\n                }}\n                onMouseEnter={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    if (currentMenu) {\n                        setMenu({\n                            menu,\n                            top: offsetTop + offsetHeight,\n                            left: offsetLeft,\n                        });\n                    }\n                }}\n                {...props}\n            >{name}</div>\n        })}\n        {<ul className=\"Menu\" style={!currentMenu?.menu.items ? {display: 'none'} : {\n            top: currentMenu.top,\n            left: currentMenu.left,\n        }}>\n            {map(currentMenu?.menu.items, ({ name, render, ...props }, i) => {\n                return <li key={i}>\n                    {render ? render() : <div {...props}>{name}</div>}\n                </li>;\n            })}\n        </ul>}\n    </div>\n}","import styled from 'styled-components';\n\nconst ControlButton = styled.button`\n    flex: 1;\n    cursor: pointer;\n    margin: 3px;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 26px;\n    height: 30px;\n    border: 1px solid #B1B1B1;\n    border-radius: 3px;\n`;\n\nexport default ControlButton;","import styled from 'styled-components';\n\nconst Popup = styled.div`\n    position: fixed; \n    overflow: scroll;\n    padding: 10px;\n    width: 80%;\n    height: 70%; \n    left: 10%; \n    top: 10%;\n    background: white;\n\n    box-shadow: 2px 2px 10px -1px rgba(0,0,0,0.2);\n    border-radius: 7px;\n`;\n\nexport const PopupHeader = styled.div`\n    position: sticky;\n    top: 0;\n`;\n\nexport default Popup;\n","import { map, toNumber, isEmpty } from 'lodash';\nimport React, { useState, ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { GameBackgrounds, GameObstacles, Tile } from '../game/tiles';\nimport gameSlice, { CMD, exec } from '../game/game';\nimport BoardTile from '../game/BoardTile';\nimport { getTunnelColor } from '../game/files';\nimport ControlButton from '../../components/ControlButton';\nimport Popup from '../../components/Popup';\n\nconst EditorPanel = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    align-content: flex-start;\n    padding: 0 1px;\n\n    div {\n        flex: 0 0 42px;\n        margin: 1px;\n    }\n`;\n\nconst FormTable = styled.table`\n    width: 100%;\n    font-size: 18px;\n\n    th {\n        text-align: left;\n        padding-left: 10px;\n    }\n\n    td > * {\n        width: 100%;\n    }\n\n    input, textarea {\n        font-size: 18px;\n    }\n`;\n\nconst EditorControl = () => {\n    const dispatch = useDispatch();\n    const [popup, setPopup] = useState(false);\n    const formData: {[key: string]: any} = {};\n    const handleChange = (field: string) => {\n        return (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n            formData[field] = e.target.value;\n        }\n    }\n\n    return <EditorPanel>\n        {map([{\n            background: GameBackgrounds.DIRT,\n        }, {\n            object: GameObstacles.TANT,\n        }, {\n            background: GameBackgrounds.FLAG,\n        }, {\n            background: GameBackgrounds.WATER,\n        }, {\n            object: GameObstacles.SOLID_BLOCK,\n        }, {\n            object: GameObstacles.MOVABLE_BLOCK,\n        }, {\n            object: GameObstacles.BRICKS,\n        }, {\n            object: GameObstacles.ANTI_TANK_N,\n        }, {\n            object: GameObstacles.ANTI_TANK_E,\n        }, {\n            object: GameObstacles.ANTI_TANK_S,\n        }, {\n            object: GameObstacles.ANTI_TANK_W,\n        }, {\n            object: GameObstacles.MIRROR_NW,\n        }, {\n            object: GameObstacles.MIRROR_NE,\n        }, {\n            object: GameObstacles.MIRROR_SE,\n        }, {\n            object: GameObstacles.MIRROR_SW,\n        }, {\n            background: GameBackgrounds.TANK_MOVER_N,\n        }, {\n            background: GameBackgrounds.TANK_MOVER_E,\n        }, {\n            background: GameBackgrounds.TANK_MOVER_S,\n        }, {\n            background: GameBackgrounds.TANK_MOVER_W,\n        }, {\n            object: GameObstacles.CRYSTAL_BLOCK,\n        }, {\n            object: GameObstacles.ROTARY_MIRROR_NW,\n        }, {\n            object: GameObstacles.ROTARY_MIRROR_NE,\n        }, {\n            object: GameObstacles.ROTARY_MIRROR_SE,\n        }, {\n            object: GameObstacles.ROTARY_MIRROR_SW,\n        }, {\n            background: GameBackgrounds.ICE,\n        }, {\n            background: GameBackgrounds.THIN_ICE,\n        }, {\n            background: GameBackgrounds.TUNNEL,\n        }], (data, i) => {\n            const tile: Tile = {\n                background: GameBackgrounds.DIRT,\n                ...data,\n            };\n            return <BoardTile key={i}\n                tile={tile}\n                tileSize={42}\n                onClick={(e) => {\n                    if (tile.background === GameBackgrounds.TUNNEL) {\n                        const id = toNumber(prompt('Enter the ID Number for this Tunnel (0-7): '));\n                        if (id >= 0 && id <= 7) {\n                            tile.color = getTunnelColor(id);\n                        }\n                    }\n                    dispatch(gameSlice.actions.selectEditorTile(tile));\n                }}\n            />\n        })}\n        <div style={{ flex: '1 0 178px' }}>\n            {map([\n                [\n                    { name: 'Save Level', onClick: () => {\n                        setPopup(true);\n                    }}, \n                    { name: 'Close Editor', cmd: CMD.TOGGLE_EDITOR },\n                ],\n            ], (row: [], i) => {\n                return <div key={i} style={{ display: 'flex', flexDirection: 'row' }}>\n                    {map(row, (\n                        { name, cmd, onClick, disabled }: \n                        { name: string, cmd?: CMD, onClick?: any, disabled?: boolean }, \n                        j\n                    ) => {\n                        return <ControlButton key={j} disabled={disabled} onClick={(e) => {\n                            if (onClick) {\n                                onClick(e);\n                            } else if (cmd) {\n                                dispatch(exec(cmd))\n                            }\n                        }}>{name}</ControlButton>\n                    })}\n                </div>\n            })}\n        </div>\n        {popup && <Popup>\n            <FormTable>\n                <tbody>\n                    <tr><th>Level Name: </th><td><input type=\"text\" onChange={handleChange('levelName')}/></td></tr>\n                    <tr><th>Author: </th><td><input type=\"text\" onChange={handleChange('author')}/></td></tr>\n                    <tr>\n                        <th>Difficulty: </th>\n                        <td>\n                            <select onChange={handleChange('scoreDifficulty')}>\n                                <option value=\"1\">Kids</option>\n                                <option value=\"2\">Easy</option>\n                                <option value=\"4\">Medium</option>\n                                <option value=\"8\">Hard</option>\n                                <option value=\"16\">Deadly</option>\n                            </select>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Hint: </th>\n                        <td><textarea rows={8} onChange={handleChange('hint')}></textarea></td>\n                    </tr>\n                    <tr>\n                        <th></th>\n                        <td>\n                            <ControlButton onClick={() => {\n                                const errors = [];\n                                if (!(formData.levelName && formData.author)) {\n                                    errors.push('Level Name and Author can not be empty.');\n                                }\n                                const scoreDifficulty = toNumber(formData.scoreDifficulty) || 1;\n                                if (![1, 2, 4, 8, 16].includes(scoreDifficulty)) {\n                                    errors.push('Please select a difficulty from dropdown.')\n                                }\n                                if (!isEmpty(errors)) {\n                                    alert(errors.join('\\n'));\n                                } else {\n                                    setPopup(false);\n                                    dispatch(exec(CMD.SAVE_LEVEL, formData));\n                                }\n                            }}>Save Level</ControlButton>\n                        </td>\n                    </tr>\n                </tbody>\n            </FormTable>\n        </Popup>}\n    </EditorPanel>\n}\n\nexport default EditorControl;","import { map, toNumber, isEmpty } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport gameSlice, { exec, db, CMD, isDirection, TLEVEL } from '../game/game';\nimport uiSlice from '../ui/ui';\nimport EditorControl from './EditorPanel';\n\nimport './ControlPanel.css';\n\nconst { setRenderInterval } = uiSlice.actions;\n\nconst LevelsPopup = (\n    { levels, onClick, onClose }: \n    { levels: TLEVEL[], onClick: (i: number) => void , onClose: () => void}\n) => {\n    return <div className=\"LevelsPopup\">\n        <div style={{ \n            fontSize: 20, textAlign: 'end', cursor: 'pointer', \n            position: 'sticky', top: 0,\n        }} onClick={onClose}>\n            &times;\n        </div>\n        <table>\n            <thead>\n                <tr>\n                    <th>Lev #</th>\n                    <th>Name</th>\n                    <th>Author</th>\n                </tr>\n            </thead>\n            <tbody>\n                {map(levels, (level, i) => {\n                    return <tr key={i} className={i % 2 === 0 ? 'odd' : 'even'} onClick={() => {\n                        onClick(i);\n                    }}>\n                        <td>{i + 1}</td>\n                        <td>{level.levelName}</td>\n                        <td>{level.author}</td>\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    </div>\n}\n\nexport default () => {\n    const dispatch = useDispatch();\n    const game = useSelector((state: RootState) => state.game);\n    const ui = useSelector((state: RootState) => state.ui);\n    const [showPopup, setShowPopup] = useState(false);\n    const { levelIndex, level, positionSaved, frameIndex, pendingMoves, autoRec, editor } = game;\n    const { record } = db;\n    let lastCmd = CMD.UP;\n    let numShoot = 0;\n    let numMove = 0;\n    map(record, (cmd) => {\n        if (!isDirection(cmd)) {\n            numShoot += 1;\n        } else if (cmd === lastCmd) {\n            numMove += 1;\n        } else {\n            lastCmd = cmd;\n        }\n    });\n\n    return <div className=\"control-panel\">\n        <div className=\"info\" style={{ position: 'relative' }}>\n            {level && <>\n                <div style={{ \n                    position: 'absolute', \n                    // top: '16%', left: '24%', height: '8%', width: '52%',\n                    top: 39, left: 43, height: 20, width: 93,\n                    textAlign: 'center', color: '#0df90a',\n                }}>{levelIndex + 1}</div>\n                <div style={{ \n                    position: 'absolute', \n                    // top: '39%', left: '5%', height: '8%', width: '90%',\n                    top: 95, left: 9, height: 20, width: 160,\n                    textAlign: 'center', color: '#0df90a', \n                    fontSize: level.levelName.length > 20 ? 11 : 14\n                }}>{level.levelName}</div>\n                <div style={{ \n                    position: 'absolute', \n                    // top: '59%', left: '5%', height: '8%', width: '90%',\n                    top: 144, left: 9, height: 20, width: 160,\n                    textAlign: 'center', color: '#0df90a',\n                    fontSize: level.author.length > 20 ? 11 : 14\n                }}>{level.author}</div>\n                {/* <div>{level.scoreDifficulty}</div> */}\n                <div style={{ \n                    position: 'absolute',\n                    // top: '82%', left: '11%', height: '8%', width: '32%',\n                    top: 200, left: 20, height: 20, width: 57,\n                    textAlign: 'center', color: '#0df90a',\n                }}>{numMove}</div>\n                <div style={{ \n                    position: 'absolute', \n                    // top: '82%', left: '58%', height: '8%', width: '32%',\n                    top: 200, left: 103, height: 20, width: 57,\n                    textAlign: 'center', color: '#0df90a',\n                }}>{numShoot}</div>\n\n                <div>{}</div>\n            </>}\n        </div>\n        {editor ? <EditorControl/> : <div className=\"control\">\n            {map([\n                isEmpty(pendingMoves) && [\n                    { name: 'Undo', cmd: CMD.UNDO, disabled: frameIndex > 0 }, \n                    { name: 'Hint', onClick: () => {\n                        if (level?.hint) {\n                            alert(level?.hint);\n                        }\n                    }},\n                ],\n                isEmpty(pendingMoves) && [\n                    { name: 'Save', disabled: frameIndex > 0, cmd: CMD.SAVE_POSITION }, \n                    { \n                        name: 'Restore', cmd: CMD.RESTORE_POSITION, \n                        disabled: frameIndex > 0 && !positionSaved \n                    },\n                ],\n                isEmpty(pendingMoves) && [\n                    { name: 'Restart', cmd: CMD.RESTART }, \n                    { name: 'Load Level', onClick: () => { setShowPopup(true); }}\n                ],\n                isEmpty(pendingMoves) && [\n                    { name: '<< Level', cmd: CMD.PREV_LEVEL }, \n                    { name: 'Level >>', cmd: CMD.NEXT_LEVEL }\n\n                ],\n                !isEmpty(pendingMoves) && [\n                    { name: autoRec ? 'Pause' : 'Auto', cmd: CMD.TOGGLE_AUTO_REC }, \n                    { name: 'Close Rec', cmd: CMD.CLOSE_REC }, \n                ],\n                !isEmpty(pendingMoves) && !autoRec && [\n                    { name: '<< Step', cmd: CMD.PREV_REC }, \n                    { name: 'Step >>', cmd: CMD.NEXT_REC }, \n                ],\n                isEmpty(pendingMoves) && [\n                    { name: '<< Frame', cmd: CMD.PREV_FRAME }, \n                    { name: 'Frame >>', cmd: CMD.NEXT_FRAME, disabled: frameIndex === 0 }\n                ],\n            ].filter(Boolean), (row: [], i) => {\n                return <div key={i}>\n                    {map(row, (\n                        { name, cmd, onClick, disabled }: \n                        { name: string, cmd?: CMD, onClick?: any, disabled?: boolean }, \n                        j\n                    ) => {\n                        return <button key={j} disabled={disabled} onClick={(e) => {\n                            if (onClick) {\n                                onClick(e);\n                            } else if (cmd) {\n                                dispatch(exec(cmd))\n                            }\n                        }}>{name}</button>\n                    })}\n                </div>\n            })}\n            <div style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n                <div>\n                    <label style={{ flex: 1 }}>speed(0 - 10000): </label>\n                </div>\n                <div>\n                    <input style={{ flex: 3 }} value={ui.renderInterval} \n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                            dispatch(setRenderInterval(toNumber(e.target.value)));\n                        }}\n                    />\n                    <span>ms</span>\n                </div>\n            </div>\n        </div>}\n        {showPopup && <LevelsPopup levels={db.levels} \n            onClose={() => setShowPopup(false)}\n            onClick={(i) => {\n                dispatch(gameSlice.actions.loadLevel(i));\n                setShowPopup(false);\n            }}\n        />}\n    </div>\n}","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport './App.css';\nimport gameSlice from '../features/game/game';\nimport Board from '../features/game/Board';\nimport MenuBar from '../features/ui/MenuBar';\nimport ControlPanel from '../features/ui/ControlPanel';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    try {\n      const levels = JSON.parse(localStorage.getItem('levels') ?? '');\n      const levelIndex = JSON.parse(localStorage.getItem('levelIndex') ?? '0');\n      if (levels) {\n        dispatch(gameSlice.actions.loadLevels({ levels, levelIndex }));\n      }\n    } catch (error) {\n      alert(`failed to load levels: ${error}`);\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <MenuBar/>\n      <div className=\"main\">\n        <Board/>\n        <ControlPanel/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit'\n\nimport gameSlice from '../features/game/game';\nimport uiSlice from '../features/ui/ui';\n\nconst rootReducer = combineReducers({\n    game: gameSlice.reducer,\n    ui: uiSlice.reducer,\n});\n\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from './rootReducer';\n\n\nconst store = configureStore({\n    reducer: rootReducer\n});\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './app/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}