{"version":3,"sources":["features/game/tiles.ts","features/game/consts.ts","features/game/game.ts","features/game/Board.tsx","features/ui/MenuBar.tsx","features/ui/ControlPanel.tsx","app/App.tsx","serviceWorker.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["GameBackgrounds","GameObstacles","sameCoord","p1","p2","x","y","getDirection","fireLasert","game","laser","force","tank","status","isAvailable","position","board","target","get","object","nextPosition","direction","GameObject","css","from","to","pending","fromTile","targetTile","push","background","FLAG","Flag","DIRT","Dirt","WATER","Water","MOVABLE_BLOCK_WATER","MovableBlockWater","ICE","Ice","THIN_ICE","ThinIce","TANK_MOVER_N","TankMoverN","TANK_MOVER_S","TankMoverS","TANK_MOVER_E","TankMoverE","TANK_MOVER_W","TankMoverW","TUNNEL","Tunnel","obstacle","BRICKS","Bricks","SOLID_BLOCK","SolidBlock","CRYSTAL_BLOCK","CrystalBlock","MOVABLE_BLOCK","MovableBlock","ANTI_TANK_N","AntiTankN","ANTI_TANK_S","AntiTankS","ANTI_TANK_W","AntiTankW","ANTI_TANK_E","AntiTankE","ANTI_TANK_DEAD_N","AntiTankDeadN","ANTI_TANK_DEAD_S","AntiTankDeadS","ANTI_TANK_DEAD_W","AntiTankDeadW","ANTI_TANK_DEAD_E","AntiTankDeadE","MIRROR_NW","MirrorNW","MIRROR_NE","MirrorNE","MIRROR_SE","MirrorSE","MIRROR_SW","MirrorSW","ROTARY_MIRROR_NW","RotaryMirrorNW","ROTARY_MIRROR_NE","RotaryMirrorNE","ROTARY_MIRROR_SE","RotaryMirrorSE","ROTARY_MIRROR_SW","RotaryMirrorSW","tile","this","getBackgroundClass","getObstacleClass","state","getObstacle","handleLaser","checkFire","each","toTile","getBackground","handleLanding","handleLeaving","handleTank","callback","BOARD_SIZE","forEachTile","current","sawTank","handle","prevTank","rendering","handleTankMove","GameObstacle","handleMove","dead","dead_direction","N","S","W","E","reverseDirection","directions","indexOf","hitBack","hitMirror","directionMap","fire_directions","getFireDirections","next_direction","GameBackground","inSkipping","console","log","sameKindTunnel","t1","t2","color","tunnel","pendingTunnel","row","pendingTunnels","index","findIndex","splice","pedningTile","moveTank","shouldSkip","Boolean","saveDataMap","0","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","db","record","history","cmd","levelIndex","initialState","range","map","timer","pause","levels","gameSlice","createSlice","name","reducers","loadLevels","action","payload","localStorage","setItem","JSON","stringify","caseReducers","loadLevel","level","colors","forEach","i","cell","j","result","undo","pop","togglePause","fireTank","renderFrame","checkLaser","checkPending","checkTank","length","actions","exec","dispatch","getState","save","includes","isDirection","BoardTile","React","memo","tileSize","style","width","height","className","getBackgroundCss","filter","join","borderRadius","border","boxSizing","getObstacleCss","BoardRow","key","Board","props","limit","boardRef","createRef","interval","bindAll","window","addEventListener","handleResize","animations","setInterval","a","el","backgrounds","querySelectorAll","bg","shift","classList","remove","add","removeEventListener","clearInterval","offsetWidth","offsetHeight","setState","min","nextProps","nextState","Math","floor","tileStyle","ref","letter","display","margin","verticalAlign","lineHeight","left","top","Component","useSelector","useDispatch","debounceRenderFrame","debounce","useEffect","handleKeyDown","e","ARROWUP","ARROWDOWN","ARROWLEFT","ARROWRIGHT","toUpperCase","useState","currentMenu","setMenu","handleFile","file","reader","FileReader","onload","buffer","tLevel","levelName","hint","author","scoreDifficulty","sizeOfTLevel","sum","Object","values","byteLength","cursor","data","size","slice","chunk","Array","Uint8Array","String","fromCharCode","apply","Uint16Array","readAsArrayBuffer","items","render","id","type","onChange","files","currentTarget","onClick","menu","event","offsetTop","offsetLeft","onMouseEnter","numShoot","numMove","textAlign","fontSize","max","alert","App","parse","getItem","error","ControlPanel","location","hostname","match","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d96d5051.chunk.js","sourcesContent":["import { get, each, findIndex } from 'lodash';\nimport {  GameState, DIRECTION, BOARD_SIZE } from './game';\n\nexport enum GameBackgrounds {\n    // background\n    FLAG = 1,\n    DIRT,\n    WATER,\n    MOVABLE_BLOCK_WATER,\n    ICE,\n    THIN_ICE,\n    TANK_MOVER_N,\n    TANK_MOVER_S,\n    TANK_MOVER_E,\n    TANK_MOVER_W,\n    TUNNEL,\n}\n\nexport enum GameObstacles {\n    // obstacle\n    BRICKS = 32,\n    SOLID_BLOCK,\n    CRYSTAL_BLOCK,\n    MOVABLE_BLOCK,\n    ANTI_TANK_N,\n    ANTI_TANK_S,\n    ANTI_TANK_W,\n    ANTI_TANK_E,\n    ANTI_TANK_DEAD_N,\n    ANTI_TANK_DEAD_S,\n    ANTI_TANK_DEAD_W,\n    ANTI_TANK_DEAD_E,\n    MIRROR_NW,\n    MIRROR_NE,\n    MIRROR_SE,\n    MIRROR_SW,\n    ROTARY_MIRROR_NW,\n    ROTARY_MIRROR_NE,\n    ROTARY_MIRROR_SE,\n    ROTARY_MIRROR_SW,\n}\n\nexport const sameCoord = (p1: Position, p2: Position): boolean => {\n    return p1.x === p2.x && p1.y === p2.y; \n}\n\n// get direction of p2 relative to p1\nexport const getDirection = (p1: Position, p2: Position): DIRECTION | null => {\n    if (p1.x !== p2.x || p1.y !== p2.y) {\n        if (p1.x === p2.x) {\n            return p1.y > p2.y ? 'N': 'S';\n        } else if (p1.y === p2.y) {\n            return p1.x > p2.x ? 'W': 'E';\n        }\n    }\n    return null;\n} \n\nconst reverseDirection = (direction: DIRECTION): DIRECTION => {\n    const reverseMap: {[key: string]: DIRECTION} = {N: 'S', S: 'N', W: 'E', E: 'W'};\n    return reverseMap[direction];\n}\n\nconst fireLasert = (game: GameState, laser: Position, force: boolean = false) => {\n    if (game.laser === null || force) {\n        game.laser = laser;\n        // TODO: add this to impelemnt odd/even tank bug\n        if (sameCoord(laser, game.tank)) {\n            game.status = 'FAIL';\n        }\n    }\n}\n\nconst forEachTile = (board: Board, position: Position, callback: (tile: Tile, position: Position) => void | boolean) => {\n    let target = nextPosition(position);\n    while (target.x < BOARD_SIZE && target.y < BOARD_SIZE && target.x >= 0 && target.y >= 0) {\n        if (callback(board[target.y][target.x], target) === false) {\n            break;\n        }\n        target = nextPosition(target);\n    }\n}\n\nexport const isAvailable = (position: Position, board: Board): boolean => {\n    const { x, y } = position;\n    const target = get(board, `${y}.${x}`);\n    return !!(target && !target.object);\n}\n\nexport const nextPosition = (position: Position) => {\n    const { x, y, direction } = position;\n    return {\n        'N': { x, y: y - 1, direction },\n        'S': { x, y: y + 1, direction },\n        'E': { x: x + 1, y, direction },\n        'W': { x: x - 1, y, direction },\n    }[direction];\n}\n\nexport interface Tile {\n    background: GameBackgrounds,\n    color?: string,\n    object?: GameObstacles,\n};\n\nexport type Board = Tile[][]; \n\nexport interface Position {\n    x: number,\n    y: number,\n    direction: DIRECTION,\n}\n\nexport class GameObject {\n    static getBackgroundClass(background: GameBackgrounds) {\n        return {\n            [GameBackgrounds.FLAG]: Flag,\n            [GameBackgrounds.DIRT]: Dirt,\n            [GameBackgrounds.WATER]: Water, \n            [GameBackgrounds.MOVABLE_BLOCK_WATER]: MovableBlockWater,\n            [GameBackgrounds.ICE]: Ice,\n            [GameBackgrounds.THIN_ICE]: ThinIce,\n            [GameBackgrounds.TANK_MOVER_N]: TankMoverN,\n            [GameBackgrounds.TANK_MOVER_S]: TankMoverS,\n            [GameBackgrounds.TANK_MOVER_E]: TankMoverE,\n            [GameBackgrounds.TANK_MOVER_W]: TankMoverW,\n            [GameBackgrounds.TUNNEL]: Tunnel,\n        }[background];\n    }\n\n    static getObstacleClass(obstacle: GameObstacles) {\n        return {\n            [GameObstacles.BRICKS]: Bricks,\n            [GameObstacles.SOLID_BLOCK]: SolidBlock,\n            [GameObstacles.CRYSTAL_BLOCK]: CrystalBlock,\n            [GameObstacles.MOVABLE_BLOCK]: MovableBlock,\n            [GameObstacles.ANTI_TANK_N]: AntiTankN,\n            [GameObstacles.ANTI_TANK_S]: AntiTankS,\n            [GameObstacles.ANTI_TANK_W]: AntiTankW,\n            [GameObstacles.ANTI_TANK_E]: AntiTankE,\n            [GameObstacles.ANTI_TANK_DEAD_N]: AntiTankDeadN,\n            [GameObstacles.ANTI_TANK_DEAD_S]: AntiTankDeadS,\n            [GameObstacles.ANTI_TANK_DEAD_W]: AntiTankDeadW,\n            [GameObstacles.ANTI_TANK_DEAD_E]: AntiTankDeadE,\n            [GameObstacles.MIRROR_NW]: MirrorNW,\n            [GameObstacles.MIRROR_NE]: MirrorNE,\n            [GameObstacles.MIRROR_SE]: MirrorSE,\n            [GameObstacles.MIRROR_SW]: MirrorSW,\n            [GameObstacles.ROTARY_MIRROR_NW]: RotaryMirrorNW,\n            [GameObstacles.ROTARY_MIRROR_NE]: RotaryMirrorNE,\n            [GameObstacles.ROTARY_MIRROR_SE]: RotaryMirrorSE,\n            [GameObstacles.ROTARY_MIRROR_SW]: RotaryMirrorSW,\n        }[obstacle];\n    }\n\n    static getBackground(tile: Tile) {\n        return new (this.getBackgroundClass(tile.background))();\n    }\n\n    static getObstacle(tile: Tile) {\n        return !tile.object ? null : new (this.getObstacleClass(tile.object))();\n    }\n\n    static checkLaser(state: GameState) {\n        const { laser, tank, board } = state;\n        if (laser) {\n            const target = nextPosition(laser);\n            const tile = get(board, [target.y, target.x]);\n            if (tile) {\n                state.laser = target;\n                if (sameCoord(target, tank)) {\n                    state.status = 'FAIL';\n                } else {\n                    this.getObstacle(tile)?.handleLaser(state, target);\n                }\n            } else {\n                state.laser = null;\n            }\n            if (!state.laser) {\n                this.checkFire(state);\n            }\n        }\n    }\n\n    static checkPending(game: GameState) {\n        const { board, pending } = game;\n        if (game.status === 'FAIL') {\n            return;\n        }\n        game.pending = [];\n        each(pending, ({ from, to }) => {\n            const toTile = get(board, [to.y, to.x]);\n            this.getBackground(toTile).handleLanding(game, from, to);\n            if (from) {\n                const fromTile = get(board, [from.y, from.x]);\n                if (!fromTile.object) {\n                    this.getBackground(fromTile).handleLeaving(game, from);\n                }\n            }\n            return game.status !== 'FAIL';\n        });\n    }\n\n    static checkTank(game: GameState) {\n        const { board, tank } = game;\n        const tile = board[tank.y][tank.x];\n        if (!tile.object && game.status !== 'FAIL') {\n            this.checkFire(game);\n            this.getBackground(board[tank.y][tank.x]).handleTank(game, false);\n        }\n    }\n\n    static checkFire(game: GameState) {\n        const { board, tank } = game;\n        const tile = board[tank.y][tank.x];\n        if (!tile.object && game.status !== 'FAIL') {\n            each(['E', 'S', 'W', 'N'], (direction: DIRECTION) => {\n                forEachTile(board, { ...tank, direction }, (tile, current) => {\n                    return this.getObstacle(tile)?.sawTank(game, current);\n                });\n                return game.status !== 'FAIL';\n            });\n        }\n    }\n\n    static moveTank(game: GameState, to: Position, handle: boolean = false) {\n        const { board, tank } = game;\n        const tile = board[to.y][to.x];\n        const background = GameObject.getBackground(tile);\n        if (isAvailable(to, game.board)) {\n            game.prevTank = { ...tank };\n            tank.x = to.x;\n            tank.y = to.y;\n            game.rendering = true;\n            if (tile.background === GameBackgrounds.TUNNEL) {\n                background.handleTankMove(game);\n            }\n            GameObject.checkFire(game);\n            if (handle && game.status !== 'FAIL') {\n                background.handleTank(game, false);\n            }\n        }\n    }\n    // static handleMove(game: GameState, position: Position){\n    //     const { board, pending } = game;\n    //     const target = nextPosition(position);\n    //     if (isAvailable(target, board)) {\n    //         const targetTile = get(board, [target.y, target.x]);\n    //         const fromTile = board[position.y][position.x];\n    //         targetTile.object = fromTile.object;\n    //         delete fromTile.object;\n\n    //         pending.push(target);\n    //         pending.push(position);\n    //         // this.getBackground(targetTile).handleMove(game, position, target);\n    //         // this.getBackground(fromTile).handleEmpty(game, position);\n    //     }\n    // }\n\n    static getObstacleCss(tile: Tile) {\n        return this.getObstacle(tile)?.css;\n    }\n\n    static getBackgroundCss(tile: Tile) {\n        return this.getBackground(tile)?.css;\n    }\n\n    css = '';\n\n    handleLeaving(game: GameState, position: Position) {};\n\n    handleMove(game: GameState, from: Position, to: Position | null = null){\n        const { board, pending } = game;\n        const fromTile = board[from.y][from.x];\n        if (!to) {\n            to = nextPosition(from);\n        }\n        if (fromTile.object && isAvailable(to, board)) {\n            const targetTile = get(board, [to.y, to.x]);\n            targetTile.object = fromTile.object;\n            delete fromTile.object;\n\n            pending.push({\n                from,\n                to,\n            });\n        }\n    }\n}\n\nclass GameObstacle extends GameObject {\n    handleLaser(game: GameState, position: Position) {\n        game.laser = null;\n    }\n\n    sawTank(game: GameState, position: Position): boolean {\n        // false means current obstacle already blocked further obstacles seeing tank\n        return false;\n    }\n}\n\nclass Bricks extends GameObstacle {\n    css = 'BRICKS';\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        delete game.board[position.y][position.x].object;\n    };\n}\n\nclass SolidBlock extends GameObstacle {\n    css = 'SOLID_BLOCK';\n}\n\nclass MovableBlock extends GameObstacle {\n    css = 'MOVABLE_BLOCK';\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        this.handleMove(game, position);\n    }\n}\n\nclass AntiTankN extends GameObstacle {\n    css = 'ANTI_TANK_N';\n    dead = GameObstacles.ANTI_TANK_DEAD_N;\n    dead_direction: DIRECTION = 'S';\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        if (position.direction === this.dead_direction) {\n            game.board[position.y][position.x].object = this.dead;\n        } else {\n            this.handleMove(game, position);\n        }\n    }\n\n    sawTank(game: GameState, position: Position): boolean {\n        const { tank } = game;\n        const direction = reverseDirection(this.dead_direction);\n        if (getDirection(position, tank) === direction) {\n            fireLasert(game, nextPosition({\n                ...position,\n                direction,\n            }));\n        }\n        return super.sawTank(game, position);\n    }\n}\n\nclass AntiTankS extends AntiTankN {\n    css = 'ANTI_TANK_S';\n    dead = GameObstacles.ANTI_TANK_DEAD_S;\n    dead_direction: DIRECTION = 'N';\n}\n\nclass AntiTankE extends AntiTankN {\n    css = 'ANTI_TANK_E';\n    dead = GameObstacles.ANTI_TANK_DEAD_E;\n    dead_direction: DIRECTION = 'W';\n}\n\nclass AntiTankW extends AntiTankN {\n    css = 'ANTI_TANK_W';\n    dead = GameObstacles.ANTI_TANK_DEAD_W;\n    dead_direction: DIRECTION = 'E';\n}\n\nclass AntiTankDeadN extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_N';\n}\n\nclass AntiTankDeadS extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_S';\n}\n\nclass AntiTankDeadW extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_W';\n}\n\nclass AntiTankDeadE extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_E';\n}\n\nclass MirrorNW extends GameObstacle {\n    css = 'MIRROR_NW';\n    directions: DIRECTION[] = ['N', 'W'];\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        const index = this.directions.indexOf(position.direction);\n        if (index !== -1) {\n            this.hitBack(game, position);\n        } else {\n            this.hitMirror(game, position);\n        }\n    }\n\n    getFireDirections(): DIRECTION[] {\n        const directionMap: {[key: string]: DIRECTION} = {\n            'N': 'S', 'S': 'N', 'W': 'E', 'E': 'W'\n        };\n        return [\n            directionMap[this.directions[0]],\n            directionMap[this.directions[1]],\n        ]\n    }\n\n    hitBack(game: GameState, position: Position) {\n        this.handleMove(game, position);\n    }\n\n    hitMirror(game: GameState, position: Position) {\n        const fire_directions = this.getFireDirections()\n        const direction =  this.directions[1 - fire_directions.indexOf(position.direction)];\n        fireLasert(game, {\n            ...position,\n            direction\n        }, true);\n    }\n}\n\nclass MirrorNE extends MirrorNW {\n    css = 'MIRROR_NE';\n    directions: DIRECTION[] = ['N', 'E'];\n}\n\nclass MirrorSE extends MirrorNW {\n    css = 'MIRROR_SE';\n    directions: DIRECTION[] = ['S', 'E'];\n}\n\nclass MirrorSW extends MirrorNW {\n    css = 'MIRROR_SW';\n    directions: DIRECTION[] = ['S', 'W'];\n}\n\nclass RotaryMirrorNW extends MirrorNW {\n    css = 'ROTARY_MIRROR_NW';\n    directions: DIRECTION[] = ['N', 'W'];\n    next_direction = GameObstacles.ROTARY_MIRROR_NE;\n\n    hitBack(game: GameState, position: Position) {\n        \n        game.board[position.y][position.x].object = this.next_direction;\n    }\n}\n\nclass RotaryMirrorNE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_NE';\n    directions: DIRECTION[] = ['N', 'E'];\n    next_direction = GameObstacles.ROTARY_MIRROR_SE;\n}\n\nclass RotaryMirrorSE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SE';\n    directions: DIRECTION[] = ['S', 'E'];\n    next_direction = GameObstacles.ROTARY_MIRROR_SW;\n}\n\nclass RotaryMirrorSW extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SW';\n    directions: DIRECTION[] = ['S', 'W'];\n    next_direction = GameObstacles.ROTARY_MIRROR_NW;\n}\n\nclass CrystalBlock extends GameObstacle {\n    css = 'CRYSTAL_BLOCK';\n    handleLaser(game: GameState, position: Position) { }\n}\n\nclass GameBackground extends GameObject {\n    handleLanding(game: GameState, from: Position, to: Position) {}\n    handleTank(game: GameState, inSkipping: boolean) {\n        console.log(this, 'handleTank', {...game.tank});\n    }\n    handleTankMove(game: GameState) {\n        console.log(this, 'handleTankMove', {...game.tank});\n    }\n    shouldSkip(game: GameState, position: Position): boolean {\n        return false;\n    }\n}\n\nclass Dirt extends GameBackground {\n    css = 'DIRT';\n}\n\nclass MovableBlockWater extends GameBackground {\n    css = 'MOVABLE_BLOCK_WATER';\n}\n\nconst sameKindTunnel = (t1: Tile, t2: Tile) => {\n    return t1.background === GameBackgrounds.TUNNEL && t2.background === GameBackgrounds.TUNNEL && t1.color === t2.color;\n}\n\nclass Tunnel extends GameBackground {\n    css = 'TUNNEL';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const { board } = game;\n        const tunnel = board[to.y][to.x];\n        let pendingTunnel = true;\n        each(board, (row, y) => {\n            each(row, (tile, x) => {\n                if (\n                    sameKindTunnel(tile, tunnel) && \n                    !sameCoord(to, {x, y, direction: 'N'}) &&\n                    !tile.object\n                ) {\n                    tile.object = tunnel.object;\n                    delete tunnel.object;\n                    pendingTunnel = false;\n                    return pendingTunnel;\n                }\n            });\n            return pendingTunnel;\n        });\n        if (pendingTunnel) {\n            game.pendingTunnels.push(to);\n        }\n    }\n\n    handleTankMove(game: GameState) {\n        super.handleTankMove(game);\n        const { board, tank } = game;\n        const tunnel = board[tank.y][tank.x];\n        let pendingTunnel = true;\n        each(board, (row, y) => {\n            each(row, (tile, x) => {\n                if (\n                    sameKindTunnel(tile, tunnel) && \n                    !sameCoord(tank, {x, y, direction: 'N'}) &&\n                    !tile.object\n                ) {\n                    tank.x = x;\n                    tank.y = y;\n                    pendingTunnel = false;\n                    return pendingTunnel;\n                }\n            });\n            return pendingTunnel;\n        });\n        if (pendingTunnel) {\n            game.pendingTunnels.push({ ...tank });\n        }\n    }\n\n    handleLeaving(game: GameState, position: Position) { \n        super.handleLeaving(game, position);\n        const { board, tank, pendingTunnels } = game;\n        const index = findIndex(pendingTunnels, ({ x, y }) => {\n            return sameKindTunnel(board[y][x], board[position.y][position.x]);\n        });\n        if (index > -1) {\n            const pending = pendingTunnels.splice(index, 1)[0];\n            if (!sameCoord(pending, position)) {\n                const pedningTile = board[pending.y][pending.x];\n                if (pedningTile.object) {\n                    const targetTile = get(board, [position.y, position.x]);\n                    targetTile.object = pedningTile.object;\n                    delete pedningTile.object;\n                } else if (sameCoord(tank, pending)) {\n                    GameObject.moveTank(game, position);\n                }\n            }\n        }\n    }\n}\n\nclass Flag extends GameBackground {\n    css = 'FLAG';\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        game.status = \"WIN\";\n    }\n}\n\nclass Water extends GameBackground {\n    css = 'WATER';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const { board } = game;\n        const tile = board[to.y][to.x];\n        if (tile.object === GameObstacles.MOVABLE_BLOCK) {\n            tile.background = GameBackgrounds.MOVABLE_BLOCK_WATER;\n        }\n        delete tile.object;\n    };\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        game.status = 'FAIL';\n    }\n}\n\nclass Ice extends GameBackground {\n    css = 'ICE';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const direction = getDirection(from, to);\n        if (direction) {\n            const target = nextPosition({ ...to, direction, });\n            if (!sameCoord(game.tank, target)) {\n                this.handleMove(game, to, target);\n            }\n        }\n    }\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        const { tank, prevTank } = game;\n        const direction = getDirection(prevTank, tank);\n        if (direction) {\n            const target = nextPosition({\n                ...tank,\n                direction,\n            });\n            GameObject.moveTank(game, target, this.shouldSkip(game, target));\n        }\n    }\n\n    shouldSkip(game: GameState, position: Position): boolean {\n        const tile = get(game.board, [position.y, position.x])\n        const background = GameObject.getBackground(tile);\n        return !Boolean(tile.object) && !(background instanceof Ice);\n    }\n}\n\nclass ThinIce extends Ice {\n    css = 'THIN_ICE';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const tile = game.board[to.y][to.x];\n        tile.background = GameBackgrounds.WATER;\n        if (tile.object) {\n            GameObject.getBackground(tile).handleLanding(game, to, to);\n        }\n    }\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        const { tank, board } = game;\n        const position = { ...tank };\n        const tile = board[position.y][position.x];\n        super.handleTank(game, inSkipping);\n        tile.background = GameBackgrounds.WATER;\n        if (sameCoord(position, game.tank)) {\n            GameObject.getBackground(tile).handleTank(game, inSkipping);\n        }\n    }\n}\n\nclass TankMoverN extends GameBackground {\n    css = 'TANK_MOVER_N';\n    direction: DIRECTION = 'N';\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        GameObject.moveTank(game, nextPosition({ ...game.tank, direction: this.direction }));\n    }\n\n    // shouldSkip(game: GameState, position: Position): boolean {\n    //     const tile  = get(game.board, [position.y, position.x]);\n    //     return !(GameObject.getBackground(tile) instanceof TankMoverN) || Boolean(tile.object);\n    // }\n}\n\nclass TankMoverS extends TankMoverN {\n    css = 'TANK_MOVER_S';\n    direction: DIRECTION = 'S';\n}\n\nclass TankMoverW extends TankMoverN {\n    css = 'TANK_MOVER_W';\n    direction: DIRECTION = 'W';\n}\n\nclass TankMoverE extends TankMoverN {\n    css = 'TANK_MOVER_E';\n    direction: DIRECTION = 'E';\n}\n","import { GameBackgrounds, GameObstacles } from './tiles';\n\nexport const saveDataMap: {[key: number]: any} = {\n    0: {\n        background: GameBackgrounds.DIRT,\n    },\n    2: {\n        background: GameBackgrounds.FLAG,\n    },\n    3: {\n        background: GameBackgrounds.WATER,\n    },\n    4: {\n        object: GameObstacles.SOLID_BLOCK,\n    },\n    5: {\n        object: GameObstacles.MOVABLE_BLOCK, ///////\n    },\n    6: {\n        object: GameObstacles.BRICKS,\n    },\n    7: {\n        object: GameObstacles.ANTI_TANK_N\n    },\n    8: {\n        object: GameObstacles.ANTI_TANK_E\n    },\n    9: {\n        object: GameObstacles.ANTI_TANK_S\n    },\n    10: {\n        object: GameObstacles.ANTI_TANK_W\n    },\n    11: {\n        object: GameObstacles.MIRROR_NW\n    },\n    12: {\n        object: GameObstacles.MIRROR_NE\n    },\n    13: {\n        object: GameObstacles.MIRROR_SE\n    },\n    14: {\n        object: GameObstacles.MIRROR_SW\n    },\n    15: {\n        background: GameBackgrounds.TANK_MOVER_N\n    },\n    16: {\n        background: GameBackgrounds.TANK_MOVER_E\n    },\n    17: {\n        background: GameBackgrounds.TANK_MOVER_S\n    },\n    18: {\n        background: GameBackgrounds.TANK_MOVER_W\n    },\n    19: {\n        object: GameObstacles.CRYSTAL_BLOCK\n    },\n    20: {\n        object: GameObstacles.ROTARY_MIRROR_NW\n    },\n    21: {\n        object: GameObstacles.ROTARY_MIRROR_NE\n    },\n    22: {\n        object: GameObstacles.ROTARY_MIRROR_SE\n    },\n    23: {\n        object: GameObstacles.ROTARY_MIRROR_SW\n    },\n    24: {\n        background: GameBackgrounds.ICE\n    },\n    25: {\n        background: GameBackgrounds.THIN_ICE,\n    },\n}\n","import { get, each, map, range, sum, chunk, sortBy } from 'lodash';\nimport { createSlice, PayloadAction  } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../app/store';\n\nimport { getColors } from '../../utils/colors';\nimport { \n    nextPosition, isAvailable, Board, Position, GameObject, GameBackgrounds,  \n} from './tiles';\nimport { saveDataMap } from './consts';\n\nexport const BOARD_SIZE = 16;\n\ninterface TLEVEL {\n    board: number[][],\n    levelName: string,\n    hint: string,\n    author: string,\n    scoreDifficulty: number,\n}\n\nexport type DIRECTION = 'N'|'S'|'W'|'E';\nexport type CMD = DIRECTION | 'FIRE' | 'UNDO' | 'PAUSE';\n\nexport interface PlayField {\n    board: Board,\n    tank: Position,\n    prevTank: Position,\n    laser: Position | null,\n    pending: {from: Position, to: Position}[], // may not need this\n    pendingTunnels: Position[],\n    status: Status,\n    levelIndex: number,\n}\n\nexport interface GameState extends PlayField {\n    timer: number,\n    rendering: boolean,\n    pause: boolean,\n    levels: TLEVEL[],\n};\n\ntype Status = \"WIN\" | \"FAIL\" | \"PLAYING\"\n\nconst isDirection = (cmd: string): cmd is DIRECTION => {\n    return ['N', 'S', 'W', 'E'].includes(cmd);\n}\n\nclass DB {\n    record: CMD[] = [];\n    history: PlayField[] = [];\n\n    save(state: GameState, cmd: CMD) {\n        const { \n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        } = state;\n        this.record.push(cmd);\n        this.history.push({ \n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        });\n    }\n}\n\nexport const db = new DB();\n\nconst initialState: GameState = {\n    board: range(0, BOARD_SIZE).map(() => {\n        return range(0, BOARD_SIZE).map(() => {\n            return {\n                background: GameBackgrounds.DIRT,\n            };\n        });\n    }),\n    tank: {x: 0, y: 0, direction: 'N'}, \n    prevTank: {x: 0, y: 0, direction: 'N'}, \n    laser: null,\n    pending: [],\n    pendingTunnels: [],\n    status: \"PLAYING\",\n    levelIndex: 0,\n    timer: 0,\n    rendering: false,\n    pause: false,\n    levels: [],\n};\n\nconst gameSlice = createSlice({\n    name: 'game',\n    initialState,\n    reducers: {\n        loadLevels(state, action: PayloadAction<{ levels: TLEVEL[], levelIndex: number }>) {\n            const { levels, levelIndex } = action.payload;\n            state.levels = levels;\n            localStorage.setItem('levels', JSON.stringify(levels));\n            gameSlice.caseReducers.loadLevel(state, loadLevel(levelIndex));\n        },\n        loadLevel(state, action: PayloadAction<number>) {\n            const { board, tank, prevTank, levels } = state;\n            const levelIndex = action.payload;\n            const level = get(levels, [levelIndex]);\n            if (!level) {\n                return;\n            }\n            state.levelIndex = levelIndex;\n            localStorage.setItem('levelIndex', JSON.stringify(levelIndex));\n            const colors = ['FB2D0F', '36FA0E', '1538FF', '36FCFF', 'FFFB0A', 'F542F9', 'FFFFFF', 'A1A1A1'];\n            // getColors(9);\n            // colors.shift(); // old lasertank doesn't use back tunnels\n\n            level.board.forEach((row, i) => {\n                return row.forEach((cell, j) => {\n                    if (cell === 1) {\n                        tank.x = i;\n                        tank.y = j;\n                        prevTank.x = i;\n                        prevTank.y = j\n                        board[j][i] = {\n                            background: GameBackgrounds.DIRT,\n                        }\n                    } else if (cell > 63 && cell < 96) {\n                        board[j][i] = {\n                            color: colors[(cell & 15) >> 1],\n                            background: GameBackgrounds.TUNNEL,\n                        };\n                    } else {\n                        const result = saveDataMap[cell];\n                        if (!result) {\n                            console.log(cell);\n                        }\n                        board[j][i] = {\n                            background: GameBackgrounds.DIRT,\n                            ...result,\n                        };\n                    }\n                });\n            });\n            state.timer += 1;\n            state.status = 'PLAYING';\n        },\n        undo(state) {\n            return {\n                ...state,\n                ...(db.history.pop()),\n                timer: state.timer + 1,\n            };\n        },\n        togglePause(state) {\n            state.pause = !state.pause;\n        },\n        moveTank(state, action: PayloadAction<DIRECTION>) {\n            const { tank } = state;\n            const cmd = action.payload;\n            if (tank.direction === cmd) {\n                GameObject.moveTank(state, nextPosition(tank), true);\n            } else {\n                tank.direction = cmd;\n                state.prevTank = { ...tank };\n            }\n            state.timer += 1;\n            state.rendering = state.status !== 'FAIL';\n        },\n        fireTank(state) {\n            const { tank } = state;\n            if (!state.laser) {\n                state.laser = tank;\n            }\n            gameSlice.caseReducers.renderFrame(state);\n        },\n        renderFrame(state) {\n            state.rendering = false;\n            // move laser\n            // check fail \n            // obstacle handle laser \n            //      move obstacle, pending target and src\n            GameObject.checkLaser(state);\n            // handle landing obstacle \n            // handle leaving obstacle\n            GameObject.checkPending(state);\n            // obstacle sawTank\n            // background handleTank\n            GameObject.checkTank(state);\n            state.timer += 1;\n            state.rendering = state.status !== 'FAIL' && (\n                state.rendering || Boolean(state.laser) || state.pending.length > 0\n            )\n        },\n    },\n});\n\nexport const {\n    loadLevel, loadLevels, undo, togglePause, renderFrame, moveTank, fireTank,\n} = gameSlice.actions;\n\nexport const exec = (cmd: string): AppThunk => (dispatch, getState) => {\n    const { game } = getState();\n    const { tank, board, status, pending, laser, levelIndex } = game;\n    if (cmd === 'UNDO') {\n        dispatch(undo());\n    } else if (cmd === 'PAUSE') {\n        dispatch(togglePause());\n    } else if (cmd === 'NEXT_LEVEL') {\n        dispatch(loadLevel(levelIndex + 1));\n    } else if (cmd === 'PREV_LEVEL') {\n        dispatch(loadLevel(levelIndex - 1));\n    } else if (pending.length === 0 && !laser && status === 'PLAYING') {\n        const target = nextPosition(tank);\n        if (cmd === 'FIRE') {\n            db.save(game, cmd);\n            dispatch(fireTank());\n        } else if (isDirection(cmd)) {\n            if (tank.direction === cmd) {\n                if (isAvailable(target, board)) {\n                    db.save(game, cmd);\n                    dispatch(moveTank(cmd));\n                }\n            } else {\n                dispatch(moveTank(cmd));\n            }\n        }\n    }\n};\n\nexport const openDataFile = (buffer: ArrayBuffer): AppThunk => (dispatch) => {\n    const tLevel = {\n        board: 16 * 16,\n        levelName: 31,\n        hint: 256,\n        author: 31,\n        scoreDifficulty: 2,\n    }; // 576\n    const sizeOfTLevel = sum(Object.values(tLevel));\n\n    const levels = map(range(Math.floor(buffer.byteLength / sizeOfTLevel)), (i): TLEVEL => {\n        let cursor = sizeOfTLevel * i;\n        const data: any = {};\n        map(tLevel, (size, key) => {\n            data[key] = buffer.slice(cursor, cursor + size);\n            cursor += size;\n        });\n        return {\n            board: chunk(Array.from(new Uint8Array(data.board)), 16),\n            levelName: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.levelName))),\n            hint: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.hint))),\n            author: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.author))),\n            scoreDifficulty: new Uint16Array(data.scoreDifficulty)[0],\n        }\n    });\n    dispatch(loadLevels({\n        levels,\n        levelIndex: 0, \n    }));\n};\n\nexport default gameSlice.reducer;\n","import { map, min, range, bindAll, debounce } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport { BOARD_SIZE, CMD, exec, renderFrame, GameState, loadLevel } from './game';\nimport { Tile, GameBackgrounds, GameObject } from './tiles';\n\nimport './Board.css';\n\ninterface BoardProps {\n    game: GameState,\n}\n\ninterface BoardState {\n    limit: number,\n}\n\nconst BoardTile = React.memo(({ tile, tileSize }: { tile: Tile, tileSize: number }) => {\n    return <div style={{ width: tileSize, height: tileSize }} className={[\n        'board-object',\n        GameObject.getBackgroundCss(tile),\n    ].filter(Boolean).join(' ')}>\n        {tile.background === GameBackgrounds.TUNNEL && <div style={{ \n            background: 'transparent',\n            borderRadius: '50%',\n            border: `${tileSize/8}px solid #${tile.color}`,\n            boxSizing: 'border-box',\n        }}/>}\n        {tile.object && <div className={GameObject.getObstacleCss(tile)}/>} \n    </div>\n});\n\nconst BoardRow = React.memo(({ row, tileSize }: {row: Tile[], tileSize: number}) => {\n    return <div className=\"row\">\n        {map(row, (tile, j) => {\n            return <BoardTile key={j} tile={tile} tileSize={tileSize}/>\n        })}\n    </div>\n})\n\nclass Board extends React.Component<BoardProps, BoardState> {\n    state = { limit: 0 };\n    boardRef = React.createRef<HTMLInputElement>();\n    interval!: NodeJS.Timeout;\n\n    constructor(props: BoardProps) {\n        super(props)\n        bindAll(this, ['handleResize']);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        const animations = ['bg0', 'bg1', 'bg2'];\n        this.interval = setInterval(async () => {\n            const el = this.boardRef.current;\n            if (el) {\n                const backgrounds = el.querySelectorAll([\n                    '.ANTI_TANK_N', '.ANTI_TANK_E', '.ANTI_TANK_S', '.ANTI_TANK_W',\n                    '.TANK_MOVER_N', '.TANK_MOVER_S', '.TANK_MOVER_W', '.TANK_MOVER_E',\n                    '.FLAG', '.WATER',\n                ].join(', '));\n                const bg = animations.shift() || '';\n                backgrounds.forEach((background) => {\n                    background.classList.remove(...animations);\n                    background.classList.add(bg);\n                });\n                animations.push(bg);\n            }\n        }, 600);\n        this.handleResize();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        clearInterval(this.interval);\n    }\n\n    handleResize() {\n        if (this.boardRef.current) {\n            const { offsetWidth: width, offsetHeight: height } = this.boardRef.current;\n            this.setState({ limit: min([width, height]) ?? 0 });\n        }\n    }\n\n    shouldComponentUpdate(nextProps: BoardProps, nextState: BoardState) {\n        return nextState.limit !== this.state.limit ||\n            nextProps.game.timer !== this.props.game.timer\n        ;\n    }\n\n    render() {\n        const { game } = this.props;\n        const { limit } = this.state;\n        const { board, tank, laser } = game;\n        const tileSize = Math.floor(limit / (BOARD_SIZE + 2));\n        const tileStyle = { width: tileSize, height: tileSize };\n        return <div ref={this.boardRef} className=\"Board\">\n            <div>\n                {map([\n                    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'\n                ], (letter, i) => {\n                    return <div key={i} style={{ width: tileSize, display: 'inline-block' }}>{letter}</div>\n                })}\n            </div>\n            <div style={{\n                width: tileSize * BOARD_SIZE, height: tileSize * BOARD_SIZE, margin: '0 auto'\n            }}>\n                {map(board, (row, i) => {\n                    return <BoardRow key={i} row={row} tileSize={tileSize}/>\n                })}\n                {map(range(BOARD_SIZE), (i) => {\n                    return <div key={i} style={{\n                        position: 'absolute', verticalAlign: 'center', lineHeight: `${tileSize}px`,\n                        left: -tileSize, top: i * tileSize\n                    }}>{i + 1}</div>\n                })}\n                <div className={`tank TANK_${tank.direction}`} style={{ \n                    left: tank.x * tileSize, top: tank.y * tileSize, ...tileStyle\n                }}/>\n                {laser && <div className={`laser ${laser.direction}`} \n                    style={['N', 'S'].includes(laser.direction) ? { \n                        left: laser.x * tileSize + (tileSize / 2 - 2), \n                        top: laser.y * tileSize, \n                        ...tileStyle, width: 4,\n                    } : {\n                        left: laser.x * tileSize, \n                        top: laser.y * tileSize + (tileSize / 2 - 1), \n                        ...tileStyle, height: 4,\n                    }}\n                />}\n            </div>\n            <div>\n                {map(range(0, 16), (i) => {\n                    return <div key={i} style={{ width: tileSize, display: 'inline-block' }}>{i + 1}</div>\n                })}\n            </div>\n        </div>\n    }\n}\n\nexport default () => {\n    const game = useSelector((state: RootState) => state.game)\n    const dispatch = useDispatch();\n    const { status, levelIndex } = game;\n    const debounceRenderFrame = debounce(() => {\n        return dispatch(renderFrame());\n    }, 10);\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            const cmdMap: {[key: string]: CMD} = {\n                ARROWUP: 'N',\n                ARROWDOWN: 'S',\n                ARROWLEFT: 'W',\n                ARROWRIGHT: 'E',\n                'U': 'UNDO',\n                ' ': 'FIRE',\n                'P': 'PAUSE',\n            };\n            const cmd = cmdMap[e.key.toUpperCase()];\n            if (cmd) {\n                dispatch(exec(cmd));\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (game.rendering && !game.pause) {\n            debounceRenderFrame();\n        }\n    }, [debounceRenderFrame, game]);\n\n    useEffect(() => {\n        if (status === 'WIN') {\n            dispatch(loadLevel(levelIndex + 1));\n        }\n    }, [dispatch, levelIndex, status])\n\n    return <Board game={game}/>\n}","import { map } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { openDataFile } from '../../features/game/game';\n\nimport './MenuBar.css';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const [currentMenu, setMenu] = useState<null|{ menu: any, top: number, left: number}>(null);\n\n    const handleFile = (file: File) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            if (e.target?.result) {\n                dispatch(openDataFile(e.target?.result as ArrayBuffer));\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n    return <div className=\"MenuBar\">\n        {map([\n            {\n                name: 'Game',\n                items: [\n                    {\n                        render: () => {\n                            return <div>\n                                <label>\n                                    Open Data File\n                                    <input id=\"fileInput\" type=\"file\" \n                                        style={{display: 'none'}} \n                                        onChange={(e) => {\n                                            const files = e.currentTarget.files;\n                                            if (files?.length) {\n                                                handleFile(files[0]);\n                                            }\n                                            setMenu(null);\n                                        }}\n                                    />\n                                </label>\n                            </div>\n                        },\n                    },\n                ],\n            },\n            {\n                name: 'Options',\n                items: [\n                    {name: 'Animation'},\n                    // {name: 'Sound'},\n                ],\n            },\n            {\n                name: 'Editor', \n                onClick: () => {\n                    setMenu(null);\n                },\n            },\n            {\n                name: 'Help',\n                items: [\n                    {name: 'About'},\n                ],\n            },\n        ], (menu, i) => {\n            const { name, ...props } = menu;\n            return <div key={i}\n                className={`MenuBarItem ${name === currentMenu?.menu.name ? 'active ' : ''}`} \n                onClick={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    setMenu(currentMenu ? null : {\n                        menu,\n                        top: offsetTop + offsetHeight,\n                        left: offsetLeft,\n                    });\n                }}\n                onMouseEnter={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    if (currentMenu) {\n                        setMenu({\n                            menu,\n                            top: offsetTop + offsetHeight,\n                            left: offsetLeft,\n                        });\n                    }\n                }}\n                {...props}\n            >{name}</div>\n        })}\n        {<ul className=\"Menu\" style={!currentMenu?.menu.items ? {display: 'none'} : {\n            top: currentMenu.top,\n            left: currentMenu.left,\n        }}>\n            {map(currentMenu?.menu.items, ({ name, render }, i) => {\n                return <li key={i}>\n                    {render ? render() : name}\n                </li>;\n            })}\n        </ul>}\n    </div>\n}","import { get, map, max, filter } from 'lodash';\nimport React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport { exec, db } from '../game/game';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const game = useSelector((state: RootState) => state.game);\n    const { levelIndex, levels } = game;\n    const { record } = db;\n    const level = get(levels, [levelIndex]);\n    const numShoot = filter(record, (cmd) => cmd === 'FIRE').length;\n    const numMove = record.length - numShoot;\n\n    return <div className=\"control-panel\">\n        <div className=\"info\" style={{ position: 'relative' }}>\n            {level && <>\n                <div style={{ \n                    position: 'absolute', top: '16%', left: '24%', height: '8%', width: '52%',\n                    textAlign: 'center', color: '#0df90a',\n                }}>{levelIndex + 1}</div>\n                <div style={{ \n                    position: 'absolute', top: '39%', left: '5%', height: '8%', width: '90%',\n                    textAlign: 'center', color: '#0df90a', fontSize: `${max([0.25 * 0.90 / level.levelName.length, 1.7])}vw`\n                }}>{level.levelName}</div>\n                <div style={{ \n                    position: 'absolute', top: '59%', left: '5%', height: '8%', width: '90%',\n                    textAlign: 'center', color: '#0df90a',\n                }}>{level.author}</div>\n                {/* <div>{level.scoreDifficulty}</div> */}\n                <div style={{ \n                    position: 'absolute', top: '82%', left: '11%', height: '8%', width: '32%',\n                    textAlign: 'center', color: '#0df90a',\n                }}>{numMove}</div>\n                <div style={{ \n                    position: 'absolute', top: '82%', left: '58%', height: '8%', width: '32%',\n                    textAlign: 'center', color: '#0df90a',\n                }}>{numShoot}</div>\n\n                <div>{}</div>\n            </>}\n        </div>\n        <div className=\"control\">\n            {map([\n                [\n                    { name: 'Undo', cmd: 'UNDO' },\n                    {\n                        name: 'Hint', cmd: 'HINT', onClick: () => {\n                            if (level?.hint) {\n                                alert(level?.hint);\n                            }\n                        }\n                    },\n                ],\n                [{ name: 'Save Position', cmd: '' }],\n                [{ name: 'Restore Position', cmd: '' }],\n                [{ name: 'New', cmd: '' }, { name: 'Restart', cmd: '' }],\n                [{ name: 'Load Level', cmd: '' }],\n                [{ name: '<< Level', cmd: 'PREV_LEVEL' }, { name: 'Level >>', cmd: 'NEXT_LEVEL' }],\n            ], (row, i) => {\n                return <div key={i}>\n                    {map(row, ({ name, cmd, onClick }: { name: string, cmd: string, onClick?: any }, j) => {\n                        return <div key={j} onClick={(e) => {\n                            if (onClick) {\n                                onClick(e);\n                            } else if (cmd) {\n                                dispatch(exec(cmd))\n                            }\n                        }}>{name}</div>\n                    })}\n                </div>\n            })}\n        </div>\n    </div>\n}","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport './App.css';\nimport { loadLevels } from '../features/game/game';\nimport Board from '../features/game/Board';\nimport MenuBar from '../features/ui/MenuBar';\nimport ControlPanel from '../features/ui/ControlPanel';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    try {\n      const levels = JSON.parse(localStorage.getItem('levels') ?? '');\n      const levelIndex = JSON.parse(localStorage.getItem('levelIndex') ?? '0');\n      if (levels) {\n        dispatch(loadLevels({ levels, levelIndex }));\n      }\n    } catch (error) {\n      alert(`failed to load levels: ${error}`);\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <MenuBar/>\n      <div className=\"main\">\n        <Board/>\n        <ControlPanel/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit'\n\nimport gameSlice from '../features/game/game';\n\nconst rootReducer = combineReducers({\n    game: gameSlice,\n});\n\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from './rootReducer';\n\n\nconst store = configureStore({\n    reducer: rootReducer\n});\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './app/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}