{"version":3,"sources":["features/game/tiles.ts","features/game/game.ts","features/game/consts.ts","features/game/Board.tsx","features/ui/MenuBar.tsx","features/ui/ControlPanel.tsx","app/App.tsx","serviceWorker.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["GameBackgrounds","GameObstacles","CMD","sameCoord","p1","p2","x","y","getDirection","UP","DOWN","LEFT","RIGHT","reverseDirection","direction","fireLasert","game","laser","force","tank","status","isAvailable","position","board","target","get","object","nextPosition","GameObject","css","from","to","pending","push","background","FLAG","Flag","DIRT","Dirt","WATER","Water","MOVABLE_BLOCK_WATER","MovableBlockWater","ICE","Ice","THIN_ICE","ThinIce","TANK_MOVER_N","TankMoverN","TANK_MOVER_S","TankMoverS","TANK_MOVER_E","TankMoverE","TANK_MOVER_W","TankMoverW","TUNNEL","Tunnel","obstacle","BRICKS","Bricks","SOLID_BLOCK","SolidBlock","CRYSTAL_BLOCK","CrystalBlock","MOVABLE_BLOCK","MovableBlock","ANTI_TANK_N","AntiTankN","ANTI_TANK_S","AntiTankS","ANTI_TANK_W","AntiTankW","ANTI_TANK_E","AntiTankE","ANTI_TANK_DEAD_N","AntiTankDeadN","ANTI_TANK_DEAD_S","AntiTankDeadS","ANTI_TANK_DEAD_W","AntiTankDeadW","ANTI_TANK_DEAD_E","AntiTankDeadE","MIRROR_NW","MirrorNW","MIRROR_NE","MirrorNE","MIRROR_SE","MirrorSE","MIRROR_SW","MirrorSW","ROTARY_MIRROR_NW","RotaryMirrorNW","ROTARY_MIRROR_NE","RotaryMirrorNE","ROTARY_MIRROR_SE","RotaryMirrorSE","ROTARY_MIRROR_SW","RotaryMirrorSW","tile","this","getBackgroundClass","getObstacleClass","state","getObstacle","handleLaser","checkFire","each","sortBy","handlePending","toTile","fromTile","getBackground","handleLeaving","handleLanding","handleTank","callback","BOARD_SIZE","forEachTile","current","sawTank","cleanUp","handle","inSkipping","prevTank","rendering","handleTankMove","skipTank","GameObstacle","index","findIndex","p","splice","targetTile","handleMove","dead","dead_direction","directions","indexOf","hitBack","hitMirror","fire_directions","getFireDirections","next_direction","GameBackground","sameKindTunnel","t1","t2","color","tunnel","pendingTunnel","row","pendingTunnels","pedningTile","getNextTarget","moveTank","shouldPending","checkTank","Boolean","saveDataMap","0","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","isDirection","cmd","includes","db","record","history","levelIndex","FIRE","fireMap","FIRE_UP","FIRE_DOWN","FIRE_LEFT","FIRE_RIGHT","initialState","range","map","timer","pause","levels","gameSlice","createSlice","name","reducers","loadLevels","action","payload","localStorage","setItem","JSON","stringify","caseReducers","loadLevel","level","colors","forEach","i","cell","j","result","console","log","join","undo","pop","togglePause","fireTank","renderFrame","checkLaser","checkPending","length","actions","exec","dispatch","getState","UNDO","PAUSE","NEXT_LEVEL","PREV_LEVEL","isBoardCMD","save","BoardTile","React","memo","tileSize","style","width","height","className","getBackgroundCss","filter","borderRadius","border","boxSizing","getObstacleCss","BoardRow","key","directionToStr","Board","props","limit","boardRef","createRef","interval","bindAll","window","addEventListener","handleResize","animations","setInterval","a","el","backgrounds","querySelectorAll","bg","shift","classList","remove","add","removeEventListener","clearInterval","offsetWidth","offsetHeight","setState","min","nextProps","nextState","Math","floor","tileStyle","ref","letter","display","margin","verticalAlign","lineHeight","left","top","Component","useSelector","useDispatch","debounceRenderFrame","debounce","useEffect","handleKeyDown","e","ARROWUP","ARROWDOWN","ARROWLEFT","ARROWRIGHT","toUpperCase","cancel","useState","currentMenu","setMenu","handleFile","file","reader","FileReader","onload","buffer","tLevel","levelName","hint","author","scoreDifficulty","sizeOfTLevel","sum","Object","values","byteLength","cursor","data","size","slice","chunk","Array","Uint8Array","trim","String","fromCharCode","apply","Uint16Array","readAsArrayBuffer","items","render","id","type","onChange","files","currentTarget","onClick","menu","event","offsetTop","offsetLeft","onMouseEnter","numShoot","numMove","textAlign","fontSize","max","alert","App","parse","getItem","error","ControlPanel","location","hostname","match","rootReducer","combineReducers","reducer","store","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.907f3453.chunk.js","sourcesContent":["import { get, each, sortBy, findIndex } from 'lodash';\nimport {  GameState, DIRECTION, BOARD_SIZE, CMD } from './game';\n\nexport enum GameBackgrounds {\n    // background\n    FLAG = 1,\n    DIRT,\n    WATER,\n    MOVABLE_BLOCK_WATER,\n    ICE,\n    THIN_ICE,\n    TANK_MOVER_N,\n    TANK_MOVER_S,\n    TANK_MOVER_E,\n    TANK_MOVER_W,\n    TUNNEL,\n}\n\nexport enum GameObstacles {\n    // obstacle\n    BRICKS = 32,\n    SOLID_BLOCK = 33,\n    CRYSTAL_BLOCK = 34,\n    MOVABLE_BLOCK = 35,\n    ANTI_TANK_N = 36,\n    ANTI_TANK_S = 37,\n    ANTI_TANK_W = 38,\n    ANTI_TANK_E = 39,\n    ANTI_TANK_DEAD_N = 40,\n    ANTI_TANK_DEAD_S,\n    ANTI_TANK_DEAD_W,\n    ANTI_TANK_DEAD_E,\n    MIRROR_NW,\n    MIRROR_NE,\n    MIRROR_SE,\n    MIRROR_SW,\n    ROTARY_MIRROR_NW,\n    ROTARY_MIRROR_NE,\n    ROTARY_MIRROR_SE,\n    ROTARY_MIRROR_SW,\n}\n\nexport const sameCoord = (p1: Position | null, p2: Position | null): boolean => {\n    return p1 === p2 || (!!p1 && !!p2 && p1.x === p2.x && p1.y === p2.y); \n}\n\n// get direction of p2 relative to p1\nexport const getDirection = (p1: Position, p2: Position): DIRECTION | null => {\n    if (p1.x !== p2.x || p1.y !== p2.y) {\n        if (p1.x === p2.x) {\n            return p1.y > p2.y ? CMD.UP : CMD.DOWN;\n        } else if (p1.y === p2.y) {\n            return p1.x > p2.x ? CMD.LEFT : CMD.RIGHT;\n        }\n    }\n    return null;\n} \n\nconst reverseDirection = (direction: DIRECTION): DIRECTION => {\n    const reverseMap: {[key: string]: DIRECTION} = {\n        [CMD.UP]: CMD.DOWN, \n        [CMD.DOWN]: CMD.UP, \n        [CMD.LEFT]: CMD.RIGHT, \n        [CMD.RIGHT]: CMD.LEFT, \n    };\n    return reverseMap[direction];\n}\n\nconst fireLasert = (game: GameState, laser: Position, force: boolean = false) => {\n    if (game.laser === null || force) {\n        game.laser = laser;\n        // TODO: add this to impelemnt odd/even tank bug\n        if (sameCoord(laser, game.tank)) {\n            game.status = 'FAIL';\n        }\n    }\n}\n\nconst forEachTile = (board: Board, position: Position, callback: (tile: Tile, position: Position) => void | boolean) => {\n    let target = nextPosition(position);\n    while (target.x < BOARD_SIZE && target.y < BOARD_SIZE && target.x >= 0 && target.y >= 0) {\n        if (callback(board[target.y][target.x], target) === false) {\n            break;\n        }\n        target = nextPosition(target);\n    }\n}\n\nexport const isAvailable = (position: Position, board: Board): boolean => {\n    const { x, y } = position;\n    const target = get(board, `${y}.${x}`);\n    return !!(target && !target.object);\n}\n\nexport const nextPosition = (position: Position) => {\n    const { x, y, direction } = position;\n    return {\n        [CMD.UP]: { x, y: y - 1, direction },\n        [CMD.DOWN]: { x, y: y + 1, direction },\n        [CMD.RIGHT]: { x: x + 1, y, direction },\n        [CMD.LEFT]: { x: x - 1, y, direction },\n    }[direction];\n}\n\nexport interface Tile {\n    background: GameBackgrounds,\n    color?: string,\n    object?: GameObstacles,\n};\n\nexport type Board = Tile[][]; \n\nexport interface Position {\n    x: number,\n    y: number,\n    direction: DIRECTION,\n}\n\nexport class GameObject {\n    static getBackgroundClass(background: GameBackgrounds) {\n        return {\n            [GameBackgrounds.FLAG]: Flag,\n            [GameBackgrounds.DIRT]: Dirt,\n            [GameBackgrounds.WATER]: Water, \n            [GameBackgrounds.MOVABLE_BLOCK_WATER]: MovableBlockWater,\n            [GameBackgrounds.ICE]: Ice,\n            [GameBackgrounds.THIN_ICE]: ThinIce,\n            [GameBackgrounds.TANK_MOVER_N]: TankMoverN,\n            [GameBackgrounds.TANK_MOVER_S]: TankMoverS,\n            [GameBackgrounds.TANK_MOVER_E]: TankMoverE,\n            [GameBackgrounds.TANK_MOVER_W]: TankMoverW,\n            [GameBackgrounds.TUNNEL]: Tunnel,\n        }[background];\n    }\n\n    static getObstacleClass(obstacle: GameObstacles) {\n        return {\n            [GameObstacles.BRICKS]: Bricks,\n            [GameObstacles.SOLID_BLOCK]: SolidBlock,\n            [GameObstacles.CRYSTAL_BLOCK]: CrystalBlock,\n            [GameObstacles.MOVABLE_BLOCK]: MovableBlock,\n            [GameObstacles.ANTI_TANK_N]: AntiTankN,\n            [GameObstacles.ANTI_TANK_S]: AntiTankS,\n            [GameObstacles.ANTI_TANK_W]: AntiTankW,\n            [GameObstacles.ANTI_TANK_E]: AntiTankE,\n            [GameObstacles.ANTI_TANK_DEAD_N]: AntiTankDeadN,\n            [GameObstacles.ANTI_TANK_DEAD_S]: AntiTankDeadS,\n            [GameObstacles.ANTI_TANK_DEAD_W]: AntiTankDeadW,\n            [GameObstacles.ANTI_TANK_DEAD_E]: AntiTankDeadE,\n            [GameObstacles.MIRROR_NW]: MirrorNW,\n            [GameObstacles.MIRROR_NE]: MirrorNE,\n            [GameObstacles.MIRROR_SE]: MirrorSE,\n            [GameObstacles.MIRROR_SW]: MirrorSW,\n            [GameObstacles.ROTARY_MIRROR_NW]: RotaryMirrorNW,\n            [GameObstacles.ROTARY_MIRROR_NE]: RotaryMirrorNE,\n            [GameObstacles.ROTARY_MIRROR_SE]: RotaryMirrorSE,\n            [GameObstacles.ROTARY_MIRROR_SW]: RotaryMirrorSW,\n        }[obstacle];\n    }\n\n    static getBackground(tile: Tile) {\n        return new (this.getBackgroundClass(tile.background))();\n    }\n\n    static getObstacle(tile: Tile) {\n        return !tile.object ? null : new (this.getObstacleClass(tile.object))();\n    }\n\n    static checkLaser(state: GameState) {\n        const { laser, tank, board } = state;\n        if (laser) {\n            const target = nextPosition(laser);\n            const tile = get(board, [target.y, target.x]);\n            if (tile) {\n                state.laser = target;\n                if (sameCoord(target, tank)) {\n                    state.status = 'FAIL';\n                } else {\n                    this.getObstacle(tile)?.handleLaser(state, target);\n                }\n            } else {\n                state.laser = null;\n            }\n            if (!state.laser) {\n                this.checkFire(state);\n            }\n        }\n    }\n\n    static checkPending(game: GameState) {\n        const { pending } = game;\n        if (game.status === 'FAIL') {\n            return;\n        }\n        game.pending = [];\n        each(\n            sortBy(pending, [\n                ({ to }) => to.y, \n                ({ to }) => to.x, \n            ]), \n            ({ from, to }) => {\n                this.handlePending(game, from , to)\n            }\n        );\n    }\n\n    static handlePending(game: GameState, from: Position, to: Position) {\n        const { board } = game;\n        const toTile = get(board, [to.y, to.x]);\n        if (from) {\n            const fromTile = get(board, [from.y, from.x]);\n            this.getBackground(fromTile).handleLeaving(game, from);\n        }\n        this.getBackground(toTile).handleLanding(game, from, to);\n        return game.status !== 'FAIL';\n    }\n\n    static checkTank(game: GameState) {\n        const { board, tank } = game;\n        const tile = board[tank.y][tank.x];\n        if (!tile.object && game.status !== 'FAIL') {\n            this.checkFire(game);\n            this.getBackground(board[tank.y][tank.x]).handleTank(game, false);\n        }\n    }\n\n    static checkFire(game: GameState) {\n        const { board, tank } = game;\n        const tile = board[tank.y][tank.x];\n        if (!tile.object && game.status !== 'FAIL') {\n            each([CMD.RIGHT, CMD.DOWN, CMD.LEFT, CMD.UP], (direction: DIRECTION) => {\n                forEachTile(board, { ...tank, direction }, (tile, current) => {\n                    return this.getObstacle(tile)?.sawTank(game, current);\n                });\n                return game.status !== 'FAIL';\n            });\n        }\n    }\n\n    static cleanUp(game: GameState) {\n        const { cleanUp, board } = game;\n        game.cleanUp = [];\n        each(cleanUp, (position) => {\n            this.getBackground(board[position.y][position.x]).cleanUp(game, position);\n        });\n    }\n\n    static moveTank(game: GameState, to: Position, handle: boolean = false, inSkipping: boolean = false) {\n        const { board, tank } = game;\n        const tile = board[to.y][to.x];\n        const background = GameObject.getBackground(tile);\n        game.prevTank = { ...tank };\n        if (isAvailable(to, game.board)) {\n            tank.x = to.x;\n            tank.y = to.y;\n            game.rendering = true;\n            if (tile.background === GameBackgrounds.TUNNEL) {\n                background.handleTankMove(game);\n            }\n            GameObject.checkFire(game);\n            if (game.status !== 'FAIL') {\n                if (handle) {\n                    background.handleTank(game, true);\n                } else if (!inSkipping) {\n                    background.skipTank(game);\n                }\n            } \n        }\n    }\n\n    static getObstacleCss(tile: Tile) {\n        return this.getObstacle(tile)?.css;\n    }\n\n    static getBackgroundCss(tile: Tile) {\n        return this.getBackground(tile)?.css;\n    }\n\n    css = '';\n\n    handleLeaving(game: GameState, position: Position) {};\n\n    pending(game: GameState, from: Position, to: Position) {\n        game.pending.push({ from, to });\n    }\n}\n\nclass GameObstacle extends GameObject {\n    handleLaser(game: GameState, position: Position) {\n        game.laser = null;\n    }\n\n    sawTank(game: GameState, position: Position): boolean {\n        // false means current obstacle already blocked further obstacles seeing tank\n        return false;\n    }\n\n    handleMove(game: GameState, from: Position, to: Position | null = null) {\n        const { board, pending } = game;\n        const fromTile = board[from.y][from.x];\n        if (!to) {\n            to = nextPosition(from);\n        }\n        const index = pending.findIndex((p) => {\n            return sameCoord(p.to, from);\n        });\n        if (index > -1) {\n            pending.splice(index, 1);\n        }\n        if (fromTile.object && isAvailable(to, board)) {\n            const targetTile = get(board, [to.y, to.x]);\n            targetTile.object = fromTile.object;\n            delete fromTile.object;\n\n            const direction = getDirection(from, to);\n            if (game.laser && sameCoord(from, game.laser) && game.laser.direction === direction) {\n                // TODO: tmp hack, should move this logic to mirror and anti-tank\n                game.laser = {\n                    ...to,\n                    direction: game.laser.direction\n                };\n            }\n\n            if (targetTile.background === GameBackgrounds.TUNNEL) {\n                GameObject.handlePending(game, from, to);\n            } else {\n                GameObject.getBackground(targetTile).pending(game, from, to);\n            }\n        }\n    }\n}\n\nclass Bricks extends GameObstacle {\n    css = 'BRICKS';\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        delete game.board[position.y][position.x].object;\n    };\n}\n\nclass SolidBlock extends GameObstacle {\n    css = 'SOLID_BLOCK';\n}\n\nclass MovableBlock extends GameObstacle {\n    css = 'MOVABLE_BLOCK';\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        this.handleMove(game, position);\n    }\n}\n\nclass AntiTankN extends GameObstacle {\n    css = 'ANTI_TANK_N';\n    dead = GameObstacles.ANTI_TANK_DEAD_N;\n    dead_direction: DIRECTION = CMD.DOWN;\n\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        if (position.direction === this.dead_direction) {\n            game.board[position.y][position.x].object = this.dead;\n        } else {\n            this.handleMove(game, position);\n        }\n    }\n\n    sawTank(game: GameState, position: Position): boolean {\n        const { tank } = game;\n        const direction = reverseDirection(this.dead_direction);\n        if (getDirection(position, tank) === direction) {\n            fireLasert(game, nextPosition({ ...position, direction, }));\n        }\n        return super.sawTank(game, position);\n    }\n}\n\nclass AntiTankS extends AntiTankN {\n    css = 'ANTI_TANK_S';\n    dead = GameObstacles.ANTI_TANK_DEAD_S;\n    dead_direction: DIRECTION = CMD.UP;\n}\n\nclass AntiTankE extends AntiTankN {\n    css = 'ANTI_TANK_E';\n    dead = GameObstacles.ANTI_TANK_DEAD_E;\n    dead_direction: DIRECTION = CMD.LEFT;\n}\n\nclass AntiTankW extends AntiTankN {\n    css = 'ANTI_TANK_W';\n    dead = GameObstacles.ANTI_TANK_DEAD_W;\n    dead_direction: DIRECTION = CMD.RIGHT;\n}\n\nclass AntiTankDeadN extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_N';\n}\n\nclass AntiTankDeadS extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_S';\n}\n\nclass AntiTankDeadW extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_W';\n}\n\nclass AntiTankDeadE extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_E';\n}\n\nclass MirrorNW extends GameObstacle {\n    css = 'MIRROR_NW';\n    directions: DIRECTION[] = [CMD.UP, CMD.LEFT];\n    handleLaser(game: GameState, position: Position) {\n        super.handleLaser(game, position);\n        const index = this.directions.indexOf(position.direction);\n        if (index !== -1) {\n            this.hitBack(game, position);\n        } else {\n            this.hitMirror(game, position);\n        }\n    }\n\n    getFireDirections(): DIRECTION[] {\n        return [\n            reverseDirection(this.directions[0]),\n            reverseDirection(this.directions[1]),\n        ]\n    }\n\n    hitBack(game: GameState, position: Position) {\n        this.handleMove(game, position);\n    }\n\n    hitMirror(game: GameState, position: Position) {\n        const fire_directions = this.getFireDirections()\n        const direction =  this.directions[1 - fire_directions.indexOf(position.direction)];\n        fireLasert(game, {\n            ...position,\n            direction\n        }, true);\n    }\n}\n\nclass MirrorNE extends MirrorNW {\n    css = 'MIRROR_NE';\n    directions: DIRECTION[] = [CMD.UP, CMD.RIGHT];\n}\n\nclass MirrorSE extends MirrorNW {\n    css = 'MIRROR_SE';\n    directions: DIRECTION[] = [CMD.DOWN, CMD.RIGHT];\n}\n\nclass MirrorSW extends MirrorNW {\n    css = 'MIRROR_SW';\n    directions: DIRECTION[] = [CMD.DOWN, CMD.LEFT];\n}\n\nclass RotaryMirrorNW extends MirrorNW {\n    css = 'ROTARY_MIRROR_NW';\n    directions: DIRECTION[] = [CMD.UP, CMD.LEFT];\n    next_direction = GameObstacles.ROTARY_MIRROR_NE;\n\n    hitBack(game: GameState, position: Position) {\n        \n        game.board[position.y][position.x].object = this.next_direction;\n    }\n}\n\nclass RotaryMirrorNE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_NE';\n    directions: DIRECTION[] = [CMD.UP, CMD.RIGHT];\n    next_direction = GameObstacles.ROTARY_MIRROR_SE;\n}\n\nclass RotaryMirrorSE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SE';\n    directions: DIRECTION[] = [CMD.DOWN, CMD.RIGHT];\n    next_direction = GameObstacles.ROTARY_MIRROR_SW;\n}\n\nclass RotaryMirrorSW extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SW';\n    directions: DIRECTION[] = [CMD.DOWN, CMD.LEFT];\n    next_direction = GameObstacles.ROTARY_MIRROR_NW;\n}\n\nclass CrystalBlock extends GameObstacle {\n    css = 'CRYSTAL_BLOCK';\n    handleLaser(game: GameState, position: Position) { }\n}\n\nclass GameBackground extends GameObject {\n    handleLanding(game: GameState, from: Position, to: Position) {}\n    handleTank(game: GameState, inSkipping: boolean) {}\n    handleTankMove(game: GameState) {}\n    skipTank(game: GameState) {}\n    cleanUp(game: GameState, position: Position) {}\n    shouldSkip(game: GameState, position: Position): boolean {\n        return false;\n    }\n}\n\nclass Dirt extends GameBackground {\n    css = 'DIRT';\n}\n\nclass MovableBlockWater extends GameBackground {\n    css = 'MOVABLE_BLOCK_WATER';\n}\n\nconst sameKindTunnel = (t1: Tile, t2: Tile) => {\n    return t1.background === GameBackgrounds.TUNNEL && t2.background === GameBackgrounds.TUNNEL && t1.color === t2.color;\n}\n\nclass Tunnel extends GameBackground {\n    css = 'TUNNEL';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const { board } = game;\n        const tunnel = board[to.y][to.x];\n        let pendingTunnel = true;\n        each(board, (row, y) => {\n            each(row, (tile, x) => {\n                if (\n                    sameKindTunnel(tile, tunnel) && \n                    !sameCoord(to, {x, y, direction: CMD.UP}) &&\n                    !tile.object\n                ) {\n                    tile.object = tunnel.object;\n                    delete tunnel.object;\n                    pendingTunnel = false;\n                    return pendingTunnel;\n                }\n            });\n            return pendingTunnel;\n        });\n        if (pendingTunnel) {\n            game.pendingTunnels.push({\n                ...to,\n                direction: CMD.UP // TODO: use UP to indicate pending obstacle for now, should refactoring this\n            });\n        }\n    }\n\n    handleTankMove(game: GameState) {\n        super.handleTankMove(game);\n        const { board, tank } = game;\n        const tunnel = board[tank.y][tank.x];\n        let pendingTunnel = true;\n        each(board, (row, y) => {\n            each(row, (tile, x) => {\n                if (\n                    sameKindTunnel(tile, tunnel) && \n                    !sameCoord(tank, {x, y, direction: CMD.UP}) &&\n                    !tile.object\n                ) {\n                    tank.x = x;\n                    tank.y = y;\n                    pendingTunnel = false;\n                    return pendingTunnel;\n                }\n            });\n            return pendingTunnel;\n        });\n        if (pendingTunnel) {\n            game.pendingTunnels.push({ \n                ...tank,\n                direction: CMD.DOWN // TODO: use DOWN to indicate pending tank for now, should refactoring this\n            });\n        }\n    }\n\n    handleLeaving(game: GameState, position: Position) { \n        super.handleLeaving(game, position);\n        const { board, tank, pendingTunnels } = game;\n        const index = findIndex(pendingTunnels, ({ x, y }) => {\n            return sameKindTunnel(board[y][x], board[position.y][position.x]);\n        });\n        if (index > -1) {\n            const pending = pendingTunnels.splice(index, 1)[0];\n            if (!sameCoord(pending, position)) {\n                const pedningTile = board[pending.y][pending.x];\n                if (pending.direction === CMD.UP && pedningTile.object) {\n                    const targetTile = get(board, [position.y, position.x]);\n                    targetTile.object = pedningTile.object;\n                    delete pedningTile.object;\n                } else if (pending.direction === CMD.DOWN && sameCoord(tank, pending)) {\n                    if (isAvailable(position, game.board)) {\n                        tank.x = position.x;\n                        tank.y = position.y;\n                        game.rendering = true;\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass Flag extends GameBackground {\n    css = 'FLAG';\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        game.status = \"WIN\";\n    }\n}\n\nclass Water extends GameBackground {\n    css = 'WATER';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const { board } = game;\n        const tile = board[to.y][to.x];\n        if (tile.object === GameObstacles.MOVABLE_BLOCK) {\n            tile.background = GameBackgrounds.MOVABLE_BLOCK_WATER;\n        }\n        delete tile.object;\n    };\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        game.status = 'FAIL';\n    }\n\n    pending(game: GameState, from: Position, to: Position) {\n        this.handleLanding(game, from, to);\n    }\n}\n\nclass Ice extends GameBackground {\n    css = 'ICE';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        const target = this.getNextTarget(game, from, to, true);\n        if (target) {\n            GameObject.getObstacle(game.board[to.y][to.x])?.handleMove(game, to, target);\n        }\n    }\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        const { tank, prevTank } = game;\n        const direction = getDirection(prevTank, tank);\n        if (direction) {\n            GameObject.moveTank(game, nextPosition({\n                ...tank,\n                direction,\n            }), false, false);\n        }\n    }\n\n    pending(game: GameState, from: Position, to: Position) {\n        if (this.shouldPending(game, from, to)) {\n            super.pending(game, from, to);\n        }\n    }\n\n    shouldPending(game: GameState, from: Position, to: Position): boolean {\n        return !!this.getNextTarget(game, from, to, false);\n    }\n\n    getNextTarget(game: GameState, from: Position, to: Position, checkTank: boolean): Position | null {\n        const direction = getDirection(from, to);\n        if (direction) {\n            const target = nextPosition({ ...to, direction, });\n            if ((!checkTank || !sameCoord(game.tank, target)) && isAvailable(target, game.board)) {\n                return target;\n            }\n        }\n        return null;\n    }\n\n    shouldSkip(game: GameState, position: Position): boolean {\n        const tile = get(game.board, [position.y, position.x])\n        const background = GameObject.getBackground(tile);\n        return !Boolean(tile.object) && !(background instanceof Ice);\n    }\n}\n\nclass ThinIce extends Ice {\n    css = 'THIN_ICE';\n\n    handleLanding(game: GameState, from: Position, to: Position) {\n        super.handleLanding(game, from, to);\n        game.cleanUp.push(to);\n    }\n\n    cleanUp(game: GameState, position: Position) {\n        const tile = game.board[position.y][position.x];\n        game.board[position.y][position.x].background = GameBackgrounds.WATER\n        if (tile.object) {\n            GameObject.getBackground(tile).handleLanding(game, position, position);\n        }\n    }\n\n    shouldPending(game: GameState, from: Position, to: Position) {\n        return true;\n    }\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        const { tank, board } = game;\n        const position = { ...tank };\n        const tile = board[position.y][position.x];\n        super.handleTank(game, inSkipping);\n        tile.background = GameBackgrounds.WATER;\n        if (sameCoord(position, game.tank)) {\n            GameObject.getBackground(tile).handleTank(game, inSkipping);\n        }\n    }\n}\n\nclass TankMoverN extends GameBackground {\n    css = 'TANK_MOVER_N';\n    direction: DIRECTION = CMD.UP;\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        super.handleTank(game, inSkipping);\n        GameObject.moveTank(game, nextPosition({ ...game.tank, direction: this.direction }), false, true);\n    }\n\n    skipTank(game: GameState) {\n        GameObject.moveTank(game, nextPosition({ ...game.tank, direction: this.direction }), false, true);\n    }\n\n    shouldSkip(game: GameState, position: Position): boolean {\n        const tile = get(game.board, [position.y, position.x]);\n        const background = GameObject.getBackground(tile);\n        return !Boolean(tile.object) && !(background instanceof TankMoverN);\n    }\n}\n\nclass TankMoverS extends TankMoverN {\n    css = 'TANK_MOVER_S';\n    direction: DIRECTION = CMD.DOWN;\n}\n\nclass TankMoverW extends TankMoverN {\n    css = 'TANK_MOVER_W';\n    direction: DIRECTION = CMD.LEFT;\n}\n\nclass TankMoverE extends TankMoverN {\n    css = 'TANK_MOVER_E';\n    direction: DIRECTION = CMD.RIGHT;\n}\n","import { get, map, range, sum, trim, chunk } from 'lodash';\nimport { createSlice, PayloadAction  } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../app/store';\n\nimport { \n    nextPosition, isAvailable, Board, Position, GameObject, GameBackgrounds,  \n} from './tiles';\nimport { saveDataMap } from './consts';\n\nexport const BOARD_SIZE = 16;\n\ninterface TLEVEL {\n    board: number[][],\n    levelName: string,\n    hint: string,\n    author: string,\n    scoreDifficulty: number,\n}\n\nexport enum CMD {\n    UP = 'N',\n    DOWN = 'S',\n    LEFT = 'W',\n    RIGHT = 'E',\n    FIRE_UP = '0',\n    FIRE_DOWN = '1',\n    FIRE_LEFT = '2',\n    FIRE_RIGHT = '3',\n    FIRE = ' ',\n    UNDO = 'UNDO',\n    PAUSE = 'PAUSE',\n    NEXT_LEVEL = 'NEXT_LEVEL',\n    PREV_LEVEL = 'PREV_LEVEL',\n    HINT = 'HINT',\n};\n\nexport type DIRECTION = CMD.UP|CMD.DOWN|CMD.LEFT|CMD.RIGHT;\nexport const isDirection = (cmd: CMD): cmd is DIRECTION => {\n    return [CMD.UP, CMD.DOWN, CMD.LEFT, CMD.RIGHT].includes(cmd);\n}\nexport type FIRE_DIRECTION = CMD.FIRE_UP|CMD.FIRE_DOWN|CMD.FIRE_LEFT|CMD.FIRE_RIGHT;\n\ntype BoardCMD = DIRECTION|CMD.FIRE;\nconst isBoardCMD = (cmd: CMD): cmd is BoardCMD => {\n    return isDirection(cmd) || cmd === CMD.FIRE;\n}\nexport type RecordCMD = DIRECTION|FIRE_DIRECTION;\n\nexport interface PlayField {\n    board: Board,\n    tank: Position,\n    prevTank: Position,\n    laser: Position | null,\n    pending: {from: Position, to: Position}[], // may not need this\n    pendingTunnels: Position[],\n    status: Status,\n    levelIndex: number,\n}\n\nexport interface GameState extends PlayField {\n    cleanUp: Position[],\n    timer: number,\n    rendering: boolean,\n    pause: boolean,\n    levels: TLEVEL[],\n};\n\nexport type Status = \"WIN\" | \"FAIL\" | \"PLAYING\"\n\nclass DB {\n    record: RecordCMD[] = [];\n    history: PlayField[] = [];\n\n    save(state: GameState, cmd: BoardCMD) {\n        const { \n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        } = state;\n        if (cmd === CMD.FIRE) {\n            const fireMap: {[key in DIRECTION]: RecordCMD} = {\n                [CMD.UP]: CMD.FIRE_UP,\n                [CMD.DOWN]: CMD.FIRE_DOWN,\n                [CMD.LEFT]: CMD.FIRE_LEFT,\n                [CMD.RIGHT]: CMD.FIRE_RIGHT,\n            };\n            this.record.push(fireMap[tank.direction]);\n        } else {\n            this.record.push(cmd);\n        }\n        this.history.push({ \n            board, tank, prevTank, laser, pending, pendingTunnels, status, levelIndex\n        });\n    }\n}\n\nexport const db = new DB();\n\nexport const initialState: GameState = {\n    board: range(0, BOARD_SIZE).map(() => {\n        return range(0, BOARD_SIZE).map(() => {\n            return {\n                background: GameBackgrounds.DIRT,\n            };\n        });\n    }),\n    tank: {x: 0, y: 0, direction: CMD.UP}, \n    prevTank: {x: 0, y: 0, direction: CMD.UP}, \n    laser: null,\n    pending: [],\n    pendingTunnels: [],\n    status: \"PLAYING\",\n    cleanUp: [],\n    levelIndex: 0,\n    timer: 0,\n    rendering: false,\n    pause: false,\n    levels: [],\n};\n\nconst gameSlice = createSlice({\n    name: 'game',\n    initialState,\n    reducers: {\n        loadLevels(state, action: PayloadAction<{ levels: TLEVEL[], levelIndex: number }>) {\n            const { levels, levelIndex } = action.payload;\n            state.levels = levels;\n            localStorage.setItem('levels', JSON.stringify(levels));\n            gameSlice.caseReducers.loadLevel(state, loadLevel(levelIndex));\n        },\n        loadLevel(state, action: PayloadAction<number>) {\n            const { board, tank, levels } = state;\n            const levelIndex = action.payload;\n            const level = get(levels, [levelIndex]);\n            if (!level) {\n                return;\n            }\n            state.levelIndex = levelIndex;\n            localStorage.setItem('levelIndex', JSON.stringify(levelIndex));\n            const colors = ['FB2D0F', '36FA0E', '1538FF', '36FCFF', 'FFFB0A', 'F542F9', 'FFFFFF', 'A1A1A1'];\n            // getColors(9);\n            // colors.shift(); // old lasertank doesn't use back tunnels\n\n            level.board.forEach((row, i) => {\n                return row.forEach((cell, j) => {\n                    if (cell === 1) {\n                        tank.x = i;\n                        tank.y = j;\n                        tank.direction = CMD.UP;\n                        board[j][i] = {\n                            background: GameBackgrounds.DIRT,\n                        }\n                    } else if (cell > 63 && cell < 96) {\n                        board[j][i] = {\n                            color: colors[(cell & 15) >> 1],\n                            background: GameBackgrounds.TUNNEL,\n                        };\n                    } else {\n                        const result = saveDataMap[cell];\n                        if (!result) {\n                            console.log(cell);\n                        }\n                        board[j][i] = {\n                            background: GameBackgrounds.DIRT,\n                            ...result,\n                        };\n                    }\n                });\n            });\n            state.prevTank = {...tank};\n            state.laser = null;\n            state.pending = [];\n            state.pendingTunnels = [];\n            state.timer = state.timer === 0 ? 1 : 0;\n            state.rendering = false;\n            state.pause = false;\n            state.status = 'PLAYING';\n            console.log(db.record.join(''));\n            db.record = [];\n        },\n        undo(state) {\n            return {\n                ...state,\n                ...(db.history.pop()),\n                timer: state.timer + 1,\n            };\n        },\n        togglePause(state) {\n            state.pause = !state.pause;\n        },\n        moveTank(state, action: PayloadAction<DIRECTION>) {\n            const { tank } = state;\n            const cmd = action.payload;\n            if (tank.direction === cmd) {\n                GameObject.moveTank(state, nextPosition(tank), true);\n            } else {\n                tank.direction = cmd;\n                state.prevTank = { ...tank };\n            }\n            state.timer += 1;\n            state.rendering = state.status !== 'FAIL';\n        },\n        fireTank(state) {\n            const { tank } = state;\n            if (!state.laser) {\n                state.laser = tank;\n            }\n            gameSlice.caseReducers.renderFrame(state);\n        },\n        renderFrame(state) {\n            state.rendering = false;\n            // move laser\n            // check fail \n            // obstacle handle laser \n            //      move obstacle, pending target and src\n            GameObject.checkLaser(state);\n            // handle landing obstacle \n            // handle leaving obstacle\n            GameObject.checkPending(state);\n            // obstacle sawTank\n            // background handleTank\n            GameObject.checkTank(state);\n            GameObject.cleanUp(state);\n            state.timer += 1;\n            state.rendering = state.status === 'PLAYING' && (\n                state.rendering || Boolean(state.laser) || state.pending.length > 0\n            )\n        },\n    },\n});\n\nexport const {\n    loadLevel, loadLevels, undo, togglePause, renderFrame, moveTank, fireTank,\n} = gameSlice.actions;\n\nexport const exec = (cmd: CMD): AppThunk => (dispatch, getState) => {\n    const { game } = getState();\n    const { tank, board, status, pending, laser, levelIndex } = game;\n    if (cmd === CMD.UNDO) {\n        dispatch(undo());\n    } else if (cmd === CMD.PAUSE) {\n        dispatch(togglePause());\n    } else if (cmd === CMD.NEXT_LEVEL) {\n        dispatch(loadLevel(levelIndex + 1));\n    } else if (cmd === CMD.PREV_LEVEL) {\n        dispatch(loadLevel(levelIndex - 1));\n    } else if (isBoardCMD(cmd) && pending.length === 0 && !laser && status === 'PLAYING') {\n        const target = nextPosition(tank);\n        if (cmd === CMD.FIRE) {\n            db.save(game, cmd);\n            dispatch(fireTank());\n        } else if (isDirection(cmd) && (tank.direction !== cmd || isAvailable(target, board))) {\n            db.save(game, cmd);\n            dispatch(moveTank(cmd));\n        }\n    }\n};\n\nexport const openDataFile = (buffer: ArrayBuffer): AppThunk => (dispatch) => {\n    const tLevel = {\n        board: 16 * 16,\n        levelName: 31,\n        hint: 256,\n        author: 31,\n        scoreDifficulty: 2,\n    }; // 576\n    const sizeOfTLevel = sum(Object.values(tLevel));\n\n    const levels = map(range(Math.floor(buffer.byteLength / sizeOfTLevel)), (i): TLEVEL => {\n        let cursor = sizeOfTLevel * i;\n        const data: any = {};\n        map(tLevel, (size, key) => {\n            data[key] = buffer.slice(cursor, cursor + size);\n            cursor += size;\n        });\n        return {\n            board: chunk(Array.from(new Uint8Array(data.board)), 16),\n            levelName: trim(String.fromCharCode.apply(null, Array.from(new Uint8Array(data.levelName))), '\\u0000'),\n            hint: trim(String.fromCharCode.apply(null, Array.from(new Uint8Array(data.hint))), '\\u0000'),\n            author: trim(String.fromCharCode.apply(null, Array.from(new Uint8Array(data.author))), '\\u0000'),\n            scoreDifficulty: new Uint16Array(data.scoreDifficulty)[0],\n        }\n    });\n    console.log(JSON.stringify(levels));\n    dispatch(loadLevels({\n        levels,\n        levelIndex: 0, \n    }));\n};\n\nexport default gameSlice;\n","import { GameBackgrounds, GameObstacles } from './tiles';\n\nexport const saveDataMap: {[key: number]: any} = {\n    0: {\n        background: GameBackgrounds.DIRT,\n    },\n    2: {\n        background: GameBackgrounds.FLAG,\n    },\n    3: {\n        background: GameBackgrounds.WATER,\n    },\n    4: {\n        object: GameObstacles.SOLID_BLOCK,\n    },\n    5: {\n        object: GameObstacles.MOVABLE_BLOCK, ///////\n    },\n    6: {\n        object: GameObstacles.BRICKS,\n    },\n    7: {\n        object: GameObstacles.ANTI_TANK_N\n    },\n    8: {\n        object: GameObstacles.ANTI_TANK_E\n    },\n    9: {\n        object: GameObstacles.ANTI_TANK_S\n    },\n    10: {\n        object: GameObstacles.ANTI_TANK_W\n    },\n    11: {\n        object: GameObstacles.MIRROR_NW\n    },\n    12: {\n        object: GameObstacles.MIRROR_NE\n    },\n    13: {\n        object: GameObstacles.MIRROR_SE\n    },\n    14: {\n        object: GameObstacles.MIRROR_SW\n    },\n    15: {\n        background: GameBackgrounds.TANK_MOVER_N\n    },\n    16: {\n        background: GameBackgrounds.TANK_MOVER_E\n    },\n    17: {\n        background: GameBackgrounds.TANK_MOVER_S\n    },\n    18: {\n        background: GameBackgrounds.TANK_MOVER_W\n    },\n    19: {\n        object: GameObstacles.CRYSTAL_BLOCK\n    },\n    20: {\n        object: GameObstacles.ROTARY_MIRROR_NW\n    },\n    21: {\n        object: GameObstacles.ROTARY_MIRROR_NE\n    },\n    22: {\n        object: GameObstacles.ROTARY_MIRROR_SE\n    },\n    23: {\n        object: GameObstacles.ROTARY_MIRROR_SW\n    },\n    24: {\n        background: GameBackgrounds.ICE\n    },\n    25: {\n        background: GameBackgrounds.THIN_ICE,\n    },\n}\n","import { map, min, range, bindAll, debounce } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport { BOARD_SIZE, CMD, exec, renderFrame, GameState, loadLevel, DIRECTION } from './game';\nimport { Tile, GameBackgrounds, GameObject } from './tiles';\n\nimport './Board.css';\n\ninterface BoardProps {\n    game: GameState,\n}\n\ninterface BoardState {\n    limit: number,\n}\n\nconst BoardTile = React.memo(({ tile, tileSize }: { tile: Tile, tileSize: number }) => {\n    return <div style={{ width: tileSize, height: tileSize }} className={[\n        'board-object',\n        GameObject.getBackgroundCss(tile),\n    ].filter(Boolean).join(' ')}>\n        {tile.background === GameBackgrounds.TUNNEL && <div style={{ \n            background: 'transparent',\n            borderRadius: '50%',\n            border: `${tileSize/8}px solid #${tile.color}`,\n            boxSizing: 'border-box',\n        }}/>}\n        {tile.object && <div className={GameObject.getObstacleCss(tile)}/>} \n    </div>\n});\n\nconst BoardRow = React.memo(({ row, tileSize }: {row: Tile[], tileSize: number}) => {\n    return <div className=\"row\">\n        {map(row, (tile, j) => {\n            return <BoardTile key={j} tile={tile} tileSize={tileSize}/>\n        })}\n    </div>\n});\n\nconst directionToStr = (direction: DIRECTION) => {\n    const directionMap: {[key in DIRECTION]: string} = {\n        [CMD.UP]: 'N',\n        [CMD.DOWN]: 'S',\n        [CMD.LEFT]: 'W',\n        [CMD.RIGHT]: 'E',\n    };\n    return directionMap[direction];\n}\n\nclass Board extends React.Component<BoardProps, BoardState> {\n    state = { limit: 0 };\n    boardRef = React.createRef<HTMLInputElement>();\n    interval!: NodeJS.Timeout;\n\n    constructor(props: BoardProps) {\n        super(props)\n        bindAll(this, ['handleResize']);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        const animations = ['bg0', 'bg1', 'bg2'];\n        this.interval = setInterval(async () => {\n            const el = this.boardRef.current;\n            if (el) {\n                const backgrounds = el.querySelectorAll([\n                    '.ANTI_TANK_N', '.ANTI_TANK_E', '.ANTI_TANK_S', '.ANTI_TANK_W',\n                    '.TANK_MOVER_N', '.TANK_MOVER_S', '.TANK_MOVER_W', '.TANK_MOVER_E',\n                    '.FLAG', '.WATER',\n                ].join(', '));\n                const bg = animations.shift() || '';\n                backgrounds.forEach((background) => {\n                    background.classList.remove(...animations);\n                    background.classList.add(bg);\n                });\n                animations.push(bg);\n            }\n        }, 600);\n        this.handleResize();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        clearInterval(this.interval);\n    }\n\n    handleResize() {\n        if (this.boardRef.current) {\n            const { offsetWidth: width, offsetHeight: height } = this.boardRef.current;\n            this.setState({ limit: min([width, height]) ?? 0 });\n        }\n    }\n\n    shouldComponentUpdate(nextProps: BoardProps, nextState: BoardState) {\n        return nextState.limit !== this.state.limit ||\n            nextProps.game.timer !== this.props.game.timer\n        ;\n    }\n\n    render() {\n        const { game } = this.props;\n        const { limit } = this.state;\n        const { board, tank, laser } = game;\n        const tileSize = Math.floor(limit / (BOARD_SIZE + 2));\n        const tileStyle = { width: tileSize, height: tileSize };\n        return <div ref={this.boardRef} className=\"Board\">\n            <div>\n                {map([\n                    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'\n                ], (letter, i) => {\n                    return <div key={i} style={{ width: tileSize, display: 'inline-block' }}>{letter}</div>\n                })}\n            </div>\n            <div style={{\n                width: tileSize * BOARD_SIZE, height: tileSize * BOARD_SIZE, margin: '0 auto'\n            }}>\n                {map(board, (row, i) => {\n                    return <BoardRow key={i} row={row} tileSize={tileSize}/>\n                })}\n                {map(range(BOARD_SIZE), (i) => {\n                    return <div key={i} style={{\n                        position: 'absolute', verticalAlign: 'center', lineHeight: `${tileSize}px`,\n                        left: -tileSize, top: i * tileSize\n                    }}>{i + 1}</div>\n                })}\n                <div className={`tank TANK_${directionToStr(tank.direction)}`} style={{ \n                    left: tank.x * tileSize, top: tank.y * tileSize, ...tileStyle\n                }}/>\n                {laser && <div className={`laser ${directionToStr(laser.direction)}`} \n                    style={[CMD.UP, CMD.DOWN].includes(laser.direction) ? { \n                        left: laser.x * tileSize + (tileSize / 2 - 2), \n                        top: laser.y * tileSize, \n                        ...tileStyle, width: 4,\n                    } : {\n                        left: laser.x * tileSize, \n                        top: laser.y * tileSize + (tileSize / 2 - 1), \n                        ...tileStyle, height: 4,\n                    }}\n                />}\n            </div>\n            <div>\n                {map(range(0, 16), (i) => {\n                    return <div key={i} style={{ width: tileSize, display: 'inline-block' }}>{i + 1}</div>\n                })}\n            </div>\n        </div>\n    }\n}\n\nexport default () => {\n    const game = useSelector((state: RootState) => state.game)\n    const dispatch = useDispatch();\n    const { status, levelIndex } = game;\n    const debounceRenderFrame = debounce(() => {\n        return dispatch(renderFrame());\n    }, 10);\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            const cmdMap: {[key: string]: CMD} = {\n                ARROWUP: CMD.UP,\n                ARROWDOWN: CMD.DOWN,\n                ARROWLEFT: CMD.LEFT,\n                ARROWRIGHT: CMD.RIGHT,\n                'U': CMD.UNDO,\n                ' ': CMD.FIRE,\n                'P': CMD.PAUSE,\n            };\n            const cmd = cmdMap[e.key.toUpperCase()];\n            if (cmd) {\n                dispatch(exec(cmd));\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (game.rendering && !game.pause) {\n            debounceRenderFrame();\n        }\n    }, [debounceRenderFrame, game]);\n\n    useEffect(() => {\n        if (status === 'WIN') {\n            debounceRenderFrame.cancel();\n            dispatch(loadLevel(levelIndex + 1));\n        }\n    }, [dispatch, levelIndex, status, debounceRenderFrame])\n\n    return <Board game={game}/>\n}","import { map } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { openDataFile } from '../../features/game/game';\n\nimport './MenuBar.css';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const [currentMenu, setMenu] = useState<null|{ menu: any, top: number, left: number}>(null);\n\n    const handleFile = (file: File) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            if (e.target?.result) {\n                dispatch(openDataFile(e.target?.result as ArrayBuffer));\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n    return <div className=\"MenuBar\">\n        {map([\n            {\n                name: 'Game',\n                items: [\n                    {\n                        render: () => {\n                            return <div>\n                                <label>\n                                    Open Data File\n                                    <input id=\"fileInput\" type=\"file\" \n                                        style={{display: 'none'}} \n                                        onChange={(e) => {\n                                            const files = e.currentTarget.files;\n                                            if (files?.length) {\n                                                handleFile(files[0]);\n                                            }\n                                            setMenu(null);\n                                        }}\n                                    />\n                                </label>\n                            </div>\n                        },\n                    },\n                ],\n            },\n            {\n                name: 'Options',\n                items: [\n                    {name: 'Animation'},\n                    // {name: 'Sound'},\n                ],\n            },\n            {\n                name: 'Editor', \n                onClick: () => {\n                    setMenu(null);\n                },\n            },\n            {\n                name: 'Help',\n                items: [\n                    {name: 'About'},\n                ],\n            },\n        ], (menu, i) => {\n            const { name, ...props } = menu;\n            return <div key={i}\n                className={`MenuBarItem ${name === currentMenu?.menu.name ? 'active ' : ''}`} \n                onClick={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    setMenu(currentMenu ? null : {\n                        menu,\n                        top: offsetTop + offsetHeight,\n                        left: offsetLeft,\n                    });\n                }}\n                onMouseEnter={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    if (currentMenu) {\n                        setMenu({\n                            menu,\n                            top: offsetTop + offsetHeight,\n                            left: offsetLeft,\n                        });\n                    }\n                }}\n                {...props}\n            >{name}</div>\n        })}\n        {<ul className=\"Menu\" style={!currentMenu?.menu.items ? {display: 'none'} : {\n            top: currentMenu.top,\n            left: currentMenu.left,\n        }}>\n            {map(currentMenu?.menu.items, ({ name, render }, i) => {\n                return <li key={i}>\n                    {render ? render() : name}\n                </li>;\n            })}\n        </ul>}\n    </div>\n}","import { get, map, max, filter } from 'lodash';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport { exec, db, CMD, isDirection } from '../game/game';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const game = useSelector((state: RootState) => state.game);\n    const { levelIndex, levels } = game;\n    const { record } = db;\n    const level = get(levels, [levelIndex]);\n    const numShoot = filter(record, (cmd) => !isDirection(cmd)).length;\n    const numMove = record.length - numShoot;\n\n    return <div className=\"control-panel\">\n        <div className=\"info\" style={{ position: 'relative' }}>\n            {level && <>\n                <div style={{ \n                    position: 'absolute', top: '16%', left: '24%', height: '8%', width: '52%',\n                    textAlign: 'center', color: '#0df90a',\n                }}>{levelIndex + 1}</div>\n                <div style={{ \n                    position: 'absolute', top: '39%', left: '5%', height: '8%', width: '90%',\n                    textAlign: 'center', color: '#0df90a', fontSize: `${max([0.25 * 0.90 / level.levelName.length, 1.7])}vw`\n                }}>{level.levelName}</div>\n                <div style={{ \n                    position: 'absolute', top: '59%', left: '5%', height: '8%', width: '90%',\n                    textAlign: 'center', color: '#0df90a',\n                }}>{level.author}</div>\n                {/* <div>{level.scoreDifficulty}</div> */}\n                <div style={{ \n                    position: 'absolute', top: '82%', left: '11%', height: '8%', width: '32%',\n                    textAlign: 'center', color: '#0df90a',\n                }}>{numMove}</div>\n                <div style={{ \n                    position: 'absolute', top: '82%', left: '58%', height: '8%', width: '32%',\n                    textAlign: 'center', color: '#0df90a',\n                }}>{numShoot}</div>\n\n                <div>{}</div>\n            </>}\n        </div>\n        <div className=\"control\">\n            {map([\n                [\n                    { name: 'Undo', cmd: CMD.UNDO },\n                    {\n                        name: 'Hint', onClick: () => {\n                            if (level?.hint) {\n                                alert(level?.hint);\n                            }\n                        }\n                    },\n                ],\n                [{ name: 'Save Position' }],\n                [{ name: 'Restore Position' }],\n                [{ name: 'New' }, { name: 'Restart' }],\n                [{ name: 'Load Level' }],\n                [{ name: '<< Level', cmd: CMD.PREV_LEVEL }, { name: 'Level >>', cmd: CMD.NEXT_LEVEL }],\n            ], (row, i) => {\n                return <div key={i}>\n                    {map(row, ({ name, cmd, onClick }: { name: string, cmd?: CMD, onClick?: any }, j) => {\n                        return <div key={j} onClick={(e) => {\n                            if (onClick) {\n                                onClick(e);\n                            } else if (cmd) {\n                                dispatch(exec(cmd))\n                            }\n                        }}>{name}</div>\n                    })}\n                </div>\n            })}\n        </div>\n    </div>\n}","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport './App.css';\nimport { loadLevels } from '../features/game/game';\nimport Board from '../features/game/Board';\nimport MenuBar from '../features/ui/MenuBar';\nimport ControlPanel from '../features/ui/ControlPanel';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    try {\n      const levels = JSON.parse(localStorage.getItem('levels') ?? '');\n      const levelIndex = JSON.parse(localStorage.getItem('levelIndex') ?? '0');\n      if (levels) {\n        dispatch(loadLevels({ levels, levelIndex }));\n      }\n    } catch (error) {\n      alert(`failed to load levels: ${error}`);\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <MenuBar/>\n      <div className=\"main\">\n        <Board/>\n        <ControlPanel/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit'\n\nimport gameSlice from '../features/game/game';\n\nconst rootReducer = combineReducers({\n    game: gameSlice.reducer,\n});\n\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from './rootReducer';\n\n\nconst store = configureStore({\n    reducer: rootReducer\n});\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './app/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}