{"version":3,"sources":["features/game/tiles.ts","utils/colors.ts","features/game/consts.ts","features/game/game.ts","features/game/Board.tsx","features/ui/MenuBar.tsx","features/ui/ControlPanel.tsx","app/App.tsx","serviceWorker.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["GameBackgrounds","GameObstacles","hex","v","toString","getColors","size","pattern","n","Math","floor","cbrt","getPattern","rgbs","map","p","colors","color","diff","push","results","each","r","g","b","sameCoord","p1","p2","x","y","fireLasert","game","laser","force","laserCount","tank","status","forEachTile","board","position","callback","target","nextPosition","BOARD_SIZE","isAvailable","get","object","direction","GameObject","css","tile","FLAG","Flag","DIRT","Dirt","WATER","Water","MOVABLE_BLOCK_WATER","MovableBlockWater","ICE","Ice","THIN_ICE","ThinIce","TANK_MOVER_N","TankMoverN","TANK_MOVER_S","TankMoverS","TANK_MOVER_E","TankMoverE","TANK_MOVER_W","TankMoverW","TUNNEL","Tunnel","background","BRICKS","Bricks","SOLID_BLOCK","SolidBlock","CRYSTAL_BLOCK","CrystalBlock","MOVABLE_BLOCK","MovableBlock","ANTI_TANK_N","AntiTankN","ANTI_TANK_S","AntiTankS","ANTI_TANK_W","AntiTankW","ANTI_TANK_E","AntiTankE","ANTI_TANK_DEAD_N","AntiTankDeadN","ANTI_TANK_DEAD_S","AntiTankDeadS","ANTI_TANK_DEAD_W","AntiTankDeadW","ANTI_TANK_DEAD_E","AntiTankDeadE","MIRROR_NW","MirrorNW","MIRROR_NE","MirrorNE","MIRROR_SE","MirrorSE","MIRROR_SW","MirrorSW","ROTARY_MIRROR_NW","RotaryMirrorNW","ROTARY_MIRROR_NE","RotaryMirrorNE","ROTARY_MIRROR_SE","RotaryMirrorSE","ROTARY_MIRROR_SW","RotaryMirrorSW","from","to","toTile","this","getBackground","handleMove","fromTile","handleEmpty","getObstacle","handleFire","inSkipping","current","checkTank","handleTank","GameObstacle","dead","dead_direction","next","cmd","start","N","S","W","E","reverseDirection","getDirection","directions","indexOf","hitBack","hitMirror","directionMap","fire_directions","getFireDirections","next_direction","GameBackground","sameKindTunnel","t1","t2","pendingTunnels","tunnel","haveTank","pending","row","index","findIndex","splice","shouldSkip","prevTank","prevBackground","saveDataMap","0","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","isDirection","includes","checkLaser","state","db","record","history","initialState","range","timer","levels","levelIndex","gameSlice","createSlice","name","reducers","loadLevels","action","payload","localStorage","setItem","JSON","stringify","caseReducers","loadLevel","level","shift","forEach","i","cell","j","result","console","log","changeDirection","undo","pop","moveTank","renderFrame","sortBy","actions","exec","dispatch","getState","length","save","BoardTile","React","memo","tileSize","style","width","height","className","getBackgroundCss","filter","Boolean","join","borderRadius","border","boxSizing","getObstacleCss","BoardRow","key","Board","props","limit","boardRef","createRef","interval","bindAll","window","addEventListener","handleResize","animations","setInterval","a","el","backgrounds","querySelectorAll","bg","classList","remove","add","removeEventListener","clearInterval","offsetWidth","offsetHeight","setState","min","nextProps","nextState","tileStyle","ref","letter","display","margin","verticalAlign","lineHeight","left","top","Component","useSelector","useDispatch","debounceRenderFrame","debounce","useEffect","handleKeyDown","e","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","useState","currentMenu","setMenu","handleFile","file","reader","FileReader","onload","buffer","tLevel","levelName","hint","author","scoreDifficulty","sizeOfTLevel","sum","Object","values","byteLength","cursor","data","slice","chunk","Array","Uint8Array","String","fromCharCode","apply","Uint16Array","readAsArrayBuffer","items","render","id","type","onChange","files","currentTarget","onClick","menu","event","offsetTop","offsetLeft","onMouseEnter","alert","App","parse","getItem","error","ControlPanel","location","hostname","match","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e17fe2f.chunk.js","sourcesContent":["import { get, each, findIndex } from 'lodash';\nimport {  GameState, DIRECTION, BOARD_SIZE } from './game';\n\nexport enum GameBackgrounds {\n    // background\n    FLAG = 1,\n    DIRT,\n    WATER,\n    MOVABLE_BLOCK_WATER,\n    ICE,\n    THIN_ICE,\n    TANK_MOVER_N,\n    TANK_MOVER_S,\n    TANK_MOVER_E,\n    TANK_MOVER_W,\n    TUNNEL,\n}\n\nexport enum GameObstacles {\n    // obstacle\n    BRICKS = 32,\n    SOLID_BLOCK,\n    CRYSTAL_BLOCK,\n    MOVABLE_BLOCK,\n    ANTI_TANK_N,\n    ANTI_TANK_S,\n    ANTI_TANK_W,\n    ANTI_TANK_E,\n    ANTI_TANK_DEAD_N,\n    ANTI_TANK_DEAD_S,\n    ANTI_TANK_DEAD_W,\n    ANTI_TANK_DEAD_E,\n    MIRROR_NW,\n    MIRROR_NE,\n    MIRROR_SE,\n    MIRROR_SW,\n    ROTARY_MIRROR_NW,\n    ROTARY_MIRROR_NE,\n    ROTARY_MIRROR_SE,\n    ROTARY_MIRROR_SW,\n}\n\nexport const sameCoord = (p1: Position, p2: Position): boolean => {\n    return p1.x === p2.x && p1.y === p2.y; \n}\n\n// get direction of p2 relative to p1\nexport const getDirection = (p1: Position, p2: Position): DIRECTION | null => {\n    if (p1.x !== p2.x || p1.y !== p2.y) {\n        if (p1.x === p2.x) {\n            return p1.y > p2.y ? 'N': 'S';\n        } else if (p1.y === p2.y) {\n            return p1.x > p2.x ? 'W': 'E';\n        }\n    }\n    return null;\n} \n\nconst reverseDirection = (direction: DIRECTION): DIRECTION => {\n    const reverseMap: {[key: string]: DIRECTION} = {N: 'S', S: 'N', W: 'E', E: 'W'};\n    return reverseMap[direction];\n}\n\nconst fireLasert = (game: GameState, laser: Position, force: boolean = false) => {\n    if (game.laser === null || force) {\n        game.laser = laser;\n        game.laserCount = 0;\n        // TODO: add this to impelemnt odd/even tank bug\n        if (sameCoord(laser, game.tank)) {\n            game.status = 'FAIL';\n        }\n    }\n}\n\nconst forEachTile = (board: Board, position: Position, callback: (tile: Tile, position: Position) => void | boolean) => {\n    let target = nextPosition(position);\n    while (target.x < BOARD_SIZE && target.y < BOARD_SIZE && target.x >= 0 && target.y >= 0) {\n        if (callback(board[target.y][target.x], target) === false) {\n            break;\n        }\n        target = nextPosition(target);\n    }\n}\n\nexport const isAvailable = (position: Position, board: Board): boolean => {\n    const { x, y } = position;\n    const target = get(board, `${y}.${x}`);\n    return !!(target && !target.object);\n}\n\nexport const nextPosition = (position: Position) => {\n    const { x, y, direction } = position;\n    return {\n        'N': { x, y: y - 1, direction },\n        'S': { x, y: y + 1, direction },\n        'E': { x: x + 1, y, direction },\n        'W': { x: x - 1, y, direction },\n    }[direction];\n}\n\nexport interface Tile {\n    background: GameBackgrounds,\n    color?: string,\n    object?: GameObstacles,\n};\n\nexport type Board = Tile[][]; \n\nexport interface Position {\n    x: number,\n    y: number,\n    direction: DIRECTION,\n}\n\n\nexport class GameObject {\n    static getBackground(tile: Tile): GameBackground {\n        return new ({\n            [GameBackgrounds.FLAG]: Flag,\n            [GameBackgrounds.DIRT]: Dirt,\n            [GameBackgrounds.WATER]: Water, \n            [GameBackgrounds.MOVABLE_BLOCK_WATER]: MovableBlockWater,\n            [GameBackgrounds.ICE]: Ice,\n            [GameBackgrounds.THIN_ICE]: ThinIce,\n            [GameBackgrounds.TANK_MOVER_N]: TankMoverN,\n            [GameBackgrounds.TANK_MOVER_S]: TankMoverS,\n            [GameBackgrounds.TANK_MOVER_E]: TankMoverE,\n            [GameBackgrounds.TANK_MOVER_W]: TankMoverW,\n            [GameBackgrounds.TUNNEL]: Tunnel,\n        }[tile.background])();\n    }\n\n    static getObstacle(tile: Tile): GameObstacle | null {\n        return !tile.object ? null : new ({\n            [GameObstacles.BRICKS]: Bricks,\n            [GameObstacles.SOLID_BLOCK]: SolidBlock,\n            [GameObstacles.CRYSTAL_BLOCK]: CrystalBlock,\n            [GameObstacles.MOVABLE_BLOCK]: MovableBlock,\n            [GameObstacles.ANTI_TANK_N]: AntiTankN,\n            [GameObstacles.ANTI_TANK_S]: AntiTankS,\n            [GameObstacles.ANTI_TANK_W]: AntiTankW,\n            [GameObstacles.ANTI_TANK_E]: AntiTankE,\n            [GameObstacles.ANTI_TANK_DEAD_N]: AntiTankDeadN,\n            [GameObstacles.ANTI_TANK_DEAD_S]: AntiTankDeadS,\n            [GameObstacles.ANTI_TANK_DEAD_W]: AntiTankDeadW,\n            [GameObstacles.ANTI_TANK_DEAD_E]: AntiTankDeadE,\n            [GameObstacles.MIRROR_NW]: MirrorNW, \n            [GameObstacles.MIRROR_NE]: MirrorNE, \n            [GameObstacles.MIRROR_SE]: MirrorSE, \n            [GameObstacles.MIRROR_SW]: MirrorSW, \n            [GameObstacles.ROTARY_MIRROR_NW]: RotaryMirrorNW, \n            [GameObstacles.ROTARY_MIRROR_NE]: RotaryMirrorNE, \n            [GameObstacles.ROTARY_MIRROR_SE]: RotaryMirrorSE, \n            [GameObstacles.ROTARY_MIRROR_SW]: RotaryMirrorSW, \n        }[tile.object])();\n    }\n\n    static handleMove(game: GameState, from: Position, to: Position){\n        const { board } = game;\n        const toTile = get(board, [to.y, to.x]);\n        if (toTile) {\n            this.getBackground(toTile).handleMove(game, to);\n            const fromTile = get(board, [from.y, from.x]);\n            if (!fromTile?.object) {\n                this.getBackground(fromTile).handleEmpty(game, from);\n            }\n        }\n    };\n\n    static handleFire(game: GameState, position: Position) {\n        const tile = get(game.board, [position.y, position.x]);\n        if (tile) {\n            this.getObstacle(tile)?.handleFire(game, position);\n        }\n    }\n\n    static checkTank(game: GameState, inSkipping: boolean = false) {\n        const { board, tank } = game;\n        if (!board[tank.y][tank.x].object) {\n            each(['E', 'S', 'W', 'N'], (direction: DIRECTION) => {\n                forEachTile(board, { ...tank, direction }, (tile, current) => {\n                    return this.getObstacle(tile)?.checkTank(game, current);\n                });\n            });\n            this.getBackground(board[tank.y][tank.x]).handleTank(game, inSkipping);\n        }\n    };\n\n    static getObstacleCss(tile: Tile) {\n        return this.getObstacle(tile)?.css;\n    }\n\n    static getBackgroundCss(tile: Tile) {\n        return this.getBackground(tile)?.css;\n    }\n\n    css = '';\n\n    handleMove(game: GameState, position: Position) {};\n    handleEmpty(game: GameState, position: Position) {};\n}\n\nclass GameObstacle extends GameObject {\n    handleFire(game: GameState, position: Position) {\n        game.laser = null;\n    }\n\n    checkTank(game: GameState, position: Position): boolean {\n        // false means current obstacle already blocked further obstacles seeing tank\n        return false;\n    }\n}\n\nclass Bricks extends GameObstacle {\n    css = 'BRICKS';\n\n    handleFire(game: GameState, position: Position) {\n        super.handleFire(game, position);\n        delete game.board[position.y][position.x].object;\n    };\n}\n\nclass SolidBlock extends GameObstacle {\n    css = 'SOLID_BLOCK';\n}\n\nclass MovableBlock extends GameObstacle {\n    css = 'MOVABLE_BLOCK';\n\n    handleFire(game: GameState, position: Position) {\n        super.handleFire(game, position);\n        const { board } = game;\n        // TODO: merge this with renderFrame\n        const from = { ...position };\n        const target = nextPosition(from);\n\n        if (isAvailable(target, board)) {\n            board[target.y][target.x].object = board[from.y][from.x].object;\n            delete board[from.y][from.x].object;\n            GameObject.handleMove(game, from, target);\n        }\n        // TODO: next action actually make more sence, because it keep laser speed\n        // game.next.push({\n        //     cmd: position.direction,\n        //     start: {...position},\n        // });\n    };\n}\n\n\nclass AntiTankN extends GameObstacle {\n    css = 'ANTI_TANK_N';\n    dead = GameObstacles.ANTI_TANK_DEAD_N;\n    dead_direction: DIRECTION = 'S';\n\n    handleFire(game: GameState, position: Position) {\n        super.handleFire(game, position);\n        if (position.direction === this.dead_direction) {\n            game.board[position.y][position.x].object = this.dead;\n        } else {\n            game.next.push({\n                cmd: position.direction,\n                start: {...position},\n            });\n        }\n    }\n\n    checkTank(game: GameState, position: Position) {\n        const { tank } = game;\n        const direction = reverseDirection(this.dead_direction);\n        if (getDirection(position, tank) === direction) {\n            fireLasert(game, nextPosition({\n                ...position,\n                direction,\n            }));\n        }\n        return super.checkTank(game, position);\n    }\n}\n\nclass AntiTankS extends AntiTankN {\n    css = 'ANTI_TANK_S';\n    dead = GameObstacles.ANTI_TANK_DEAD_S;\n    dead_direction: DIRECTION = 'N';\n}\n\nclass AntiTankE extends AntiTankN {\n    css = 'ANTI_TANK_E';\n    dead = GameObstacles.ANTI_TANK_DEAD_E;\n    dead_direction: DIRECTION = 'W';\n}\n\nclass AntiTankW extends AntiTankN {\n    css = 'ANTI_TANK_W';\n    dead = GameObstacles.ANTI_TANK_DEAD_W;\n    dead_direction: DIRECTION = 'E';\n}\n\nclass AntiTankDeadN extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_N';\n}\n\nclass AntiTankDeadS extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_S';\n}\n\nclass AntiTankDeadW extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_W';\n}\n\nclass AntiTankDeadE extends GameObstacle {\n    css = 'ANTI_TANK_DEAD_E';\n}\n\nclass MirrorNW extends GameObstacle {\n    css = 'MIRROR_NW';\n    directions: DIRECTION[] = ['N', 'W'];\n    handleFire(game: GameState, position: Position) {\n        super.handleFire(game, position);\n        const index = this.directions.indexOf(position.direction);\n        if (index !== -1) {\n            this.hitBack(game, position);\n        } else {\n            this.hitMirror(game, position);\n        }\n    }\n\n    getFireDirections(): DIRECTION[] {\n        const directionMap: {[key: string]: DIRECTION} = {\n            'N': 'S', 'S': 'N', 'W': 'E', 'E': 'W'\n        };\n        return [\n            directionMap[this.directions[0]],\n            directionMap[this.directions[1]],\n        ]\n    }\n\n    hitBack(game: GameState, position: Position) {\n        game.next.push({\n            cmd: position.direction,\n            start: {...position},\n        });\n    }\n\n    hitMirror(game: GameState, position: Position) {\n        const fire_directions = this.getFireDirections()\n        const direction =  this.directions[1 - fire_directions.indexOf(position.direction)];\n        fireLasert(game, {\n            ...position,\n            direction\n        }, true);\n    }\n}\n\nclass MirrorNE extends MirrorNW {\n    css = 'MIRROR_NE';\n    directions: DIRECTION[] = ['N', 'E'];\n}\n\nclass MirrorSE extends MirrorNW {\n    css = 'MIRROR_SE';\n    directions: DIRECTION[] = ['S', 'E'];\n}\n\nclass MirrorSW extends MirrorNW {\n    css = 'MIRROR_SW';\n    directions: DIRECTION[] = ['S', 'W'];\n}\n\nclass RotaryMirrorNW extends MirrorNW {\n    css = 'ROTARY_MIRROR_NW';\n    directions: DIRECTION[] = ['N', 'W'];\n    next_direction = GameObstacles.ROTARY_MIRROR_NE;\n\n    hitBack(game: GameState, position: Position) {\n        \n        game.board[position.y][position.x].object = this.next_direction;\n    }\n}\n\nclass RotaryMirrorNE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_NE';\n    directions: DIRECTION[] = ['N', 'E'];\n    next_direction = GameObstacles.ROTARY_MIRROR_SE;\n}\n\nclass RotaryMirrorSE extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SE';\n    directions: DIRECTION[] = ['S', 'E'];\n    next_direction = GameObstacles.ROTARY_MIRROR_SW;\n}\n\nclass RotaryMirrorSW extends RotaryMirrorNW {\n    css = 'ROTARY_MIRROR_SW';\n    directions: DIRECTION[] = ['S', 'W'];\n    next_direction = GameObstacles.ROTARY_MIRROR_NW;\n}\n\nclass CrystalBlock extends GameObstacle {\n    css = 'CRYSTAL_BLOCK';\n    handleFire(game: GameState, position: Position) { }\n}\n\nclass GameBackground extends GameObject {\n    handleTank(game: GameState, inSkipping: boolean) {}\n    shouldSkip(game: GameState) {\n        return false;\n    }\n}\n\nclass Dirt extends GameBackground {\n    css = 'DIRT';\n}\n\nclass MovableBlockWater extends GameBackground {\n    css = 'MOVABLE_BLOCK_WATER';\n}\n\nconst sameKindTunnel = (t1: Tile, t2: Tile) => {\n    return t1.background === GameBackgrounds.TUNNEL && t2.background === GameBackgrounds.TUNNEL && t1.color === t2.color;\n}\n\nclass Tunnel extends GameBackground {\n    css = 'TUNNEL';\n\n    handleMove(game: GameState, position: Position) {\n        const { board, tank, pendingTunnels } = game;\n        const tunnel = board[position.y][position.x];\n        const haveTank = sameCoord(position, tank);\n        let pending = true;\n        each(board, (row, y) => {\n            each(row, (tile, x) => {\n                if (\n                    sameKindTunnel(tile, tunnel) && \n                    !sameCoord(position, {x, y, direction: 'N'}) &&\n                    !tile.object\n                ) {\n                    if (tunnel.object) {\n                        tile.object = tunnel.object;\n                        delete tunnel.object;\n                        pending = false;\n                    } else if (haveTank) {\n                        tank.x = x;\n                        tank.y = y;\n                        pending = false;\n                    }\n                    return pending;\n                }\n            });\n            return pending;\n        });\n        if (pending) {\n            pendingTunnels.push({...position});\n        }\n    }\n\n    handleEmpty(game: GameState, position: Position) { \n        super.handleEmpty(game, position);\n        const { board, pendingTunnels } = game;\n        const index = findIndex(pendingTunnels, ({ x, y }) => {\n            return sameKindTunnel(board[y][x], board[position.y][position.x]);\n        });\n        if (index > -1) {\n            const pending = pendingTunnels.splice(index, 1)[0];\n            if (!sameCoord(pending, position)) {\n                this.handleMove(game, pending);\n            }\n        }\n    }\n}\n\nclass Flag extends GameBackground {\n    css = 'FLAG';\n\n    handleMove(game: GameState, position: Position) {\n        const { tank } = game;\n        if (tank.x === position.x && tank.y === position.y) {\n            game.status = \"WIN\";\n        }\n    };\n}\n\nclass Water extends GameBackground {\n    css = 'WATER';\n\n    handleMove(game: GameState, position: Position) {\n        const { board, tank } = game;\n        const { x, y } = position;\n        const tile = board[y][x];\n        if (tile.object === GameObstacles.MOVABLE_BLOCK) {\n            tile.background = GameBackgrounds.MOVABLE_BLOCK_WATER;\n        }\n        delete tile.object;\n        if (tank.x === x && tank.y === y) {\n            game.status = 'FAIL';\n        }\n    };\n}\n\nclass Ice extends GameBackground {\n    css = 'ICE';\n\n    handleMove(game: GameState, position: Position) {\n        const { tank, board } = game;\n        const { x, y } = position;\n        const target = nextPosition(position);\n        // TODO: hack for skipping issue, should make this configurable\n        if (tank.x === x && tank.y === y && isAvailable(target, board) && this.shouldSkip(game)) {\n                game.prevTank = { ...tank };\n                tank.x = target.x;\n                tank.y = target.y;\n                GameObject.handleMove(game, game.prevTank, target);\n                GameObject.checkTank(game, false);\n        } else {\n            // TODO: need handle tank skipping. Does obstacle has skipping issue ?\n            game.next.push({\n                cmd: position.direction,\n                start: {...position},\n            });\n        }\n    }\n\n    shouldSkip(game: GameState) {\n        const { board, prevTank } = game;\n        const prevBackground = GameObject.getBackground(get(board, [prevTank.y, prevTank.x]));\n        return !(prevBackground instanceof Ice) && !(prevBackground instanceof TankMoverN);\n    }\n}\n\nclass ThinIce extends Ice {\n    css = 'THIN_ICE';\n\n    handleMove(game: GameState, position: Position) {\n        super.handleMove(game, position);\n        game.board[position.y][position.x].background = GameBackgrounds.WATER;\n    }\n}\n\nclass TankMoverN extends GameObject {\n    css = 'TANK_MOVER_N';\n    direction: DIRECTION = 'N';\n\n    handleTank(game: GameState, inSkipping: boolean) {\n        const { tank } = game;\n        const { x, y } = tank;\n        const target = nextPosition({ x, y, direction: this.direction });\n        if (tank.x === x && tank.y === y && isAvailable(target, game.board)) {\n            if (!inSkipping && this.shouldSkip(game)) {\n                game.prevTank = { ...tank };\n                tank.x = target.x;\n                tank.y = target.y;\n                GameObject.handleMove(game, game.prevTank, target);\n                GameObject.checkTank(game, true);\n            } else {\n                game.next.push({\n                    cmd: this.direction,\n                    start: {...tank},\n                });\n            }\n        }\n    }\n\n    shouldSkip(game: GameState) {\n        const { board, prevTank, tank } = game;\n        const prevBackground = GameObject.getBackground(get(board, [prevTank.y, prevTank.x]));\n        return sameCoord(prevTank, tank) || !(prevBackground instanceof TankMoverN);\n    }\n}\n\nclass TankMoverS extends TankMoverN {\n    css = 'TANK_MOVER_S';\n    direction: DIRECTION = 'S';\n}\n\nclass TankMoverW extends TankMoverN {\n    css = 'TANK_MOVER_W';\n    direction: DIRECTION = 'W';\n}\n\nclass TankMoverE extends TankMoverN {\n    css = 'TANK_MOVER_E';\n    direction: DIRECTION = 'E';\n}\n","import { map, each } from 'lodash';\n\nconst hex = (v: number): string => {\n    return (v < 16 ? '0' : '') + v.toString(16);\n}\n\nconst getPattern = (size: number): [number, number, number] => {\n    const n = Math.floor(Math.cbrt(size));\n    if (n > 255) {\n        return [255, 255, 255];\n    }\n    size -= n * n * n;\n    const pattern: [number, number, number] = [n, n, n];\n    if (size === 0) {\n        return pattern;\n    }\n    pattern[0] += 1;\n    if (size <= n * n) {\n        return pattern;\n    }\n    pattern[1] += 1;\n    if (size <= 2 * n * n + n) {\n        return pattern;\n    }\n    pattern[2] += 1;\n    return pattern;\n}\n\nexport const getColors = (size: number): string[] => {\n    const pattern = getPattern(size);\n\n    const rgbs = map(pattern, (p) => {\n        const colors = [];\n        let color = 0;\n        p -= 1;\n        if (p > 0) {\n            const diff = 255 / p;\n            while (color < 255) {\n                colors.push(Math.floor(color));\n                color += diff;\n            }\n        }\n        colors.push(255);\n        return colors;\n    });\n\n    const results: string[] = [];\n    // const available = rgbs[0].length * rgbs[1].length * rgbs[2].length;\n    // const redundant = Math.ceil(available / (available - size + 1));\n    // let count = 0;\n    each(rgbs[0], (r) => {\n        each(rgbs[1], (g) => {\n            each(rgbs[2], (b) => {\n                // if (count % redundant !== 0) {\n                results.push(`${hex(r)}${hex(g)}${hex(b)}`);\n                // }\n                // count += 1;\n            });\n        });\n    });\n    return results;\n}\n\n","import { GameBackgrounds, GameObstacles } from './tiles';\n\nexport const saveDataMap: {[key: number]: any} = {\n    0: {\n        background: GameBackgrounds.DIRT,\n    },\n    2: {\n        background: GameBackgrounds.FLAG,\n    },\n    3: {\n        background: GameBackgrounds.WATER,\n    },\n    4: {\n        object: GameObstacles.SOLID_BLOCK,\n    },\n    5: {\n        object: GameObstacles.MOVABLE_BLOCK, ///////\n    },\n    6: {\n        object: GameObstacles.BRICKS,\n    },\n    7: {\n        object: GameObstacles.ANTI_TANK_N\n    },\n    8: {\n        object: GameObstacles.ANTI_TANK_E\n    },\n    9: {\n        object: GameObstacles.ANTI_TANK_S\n    },\n    10: {\n        object: GameObstacles.ANTI_TANK_W\n    },\n    11: {\n        object: GameObstacles.MIRROR_NW\n    },\n    12: {\n        object: GameObstacles.MIRROR_NE\n    },\n    13: {\n        object: GameObstacles.MIRROR_SE\n    },\n    14: {\n        object: GameObstacles.MIRROR_SW\n    },\n    15: {\n        background: GameBackgrounds.TANK_MOVER_N\n    },\n    16: {\n        background: GameBackgrounds.TANK_MOVER_E\n    },\n    17: {\n        background: GameBackgrounds.TANK_MOVER_S\n    },\n    18: {\n        background: GameBackgrounds.TANK_MOVER_W\n    },\n    19: {\n        object: GameObstacles.CRYSTAL_BLOCK\n    },\n    20: {\n        object: GameObstacles.ROTARY_MIRROR_NW\n    },\n    21: {\n        object: GameObstacles.ROTARY_MIRROR_NE\n    },\n    22: {\n        object: GameObstacles.ROTARY_MIRROR_SE\n    },\n    23: {\n        object: GameObstacles.ROTARY_MIRROR_SW\n    },\n    24: {\n        background: GameBackgrounds.ICE\n    },\n    25: {\n        background: GameBackgrounds.THIN_ICE,\n    },\n}\n","import { get, each, map, range, sum, chunk, sortBy } from 'lodash';\nimport { createSlice, PayloadAction  } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../app/store';\n\nimport { getColors } from '../../utils/colors';\nimport { \n    nextPosition, sameCoord, isAvailable, Board, Position, GameObject, GameBackgrounds, getDirection\n} from './tiles';\nimport { saveDataMap } from './consts';\n\nexport const BOARD_SIZE = 16;\n\ninterface TLEVEL {\n    board: number[][],\n    levelName: string,\n    hint: string,\n    author: string,\n    scoreDifficulty: number,\n}\ninterface NextAction {\n    cmd: CMD, start: Position\n}\n\nexport type DIRECTION = 'N'|'S'|'W'|'E';\nexport type CMD = DIRECTION | 'FIRE' | 'UNDO';\n\nexport interface PlayField {\n    board: Board,\n    tank: Position,\n    prevTank: Position,\n    laser: Position | null,\n    status: Status,\n    pendingTunnels: Position[],\n}\n\nexport interface GameState {\n    board: Board,\n    tank: Position,\n    prevTank: Position,\n    laser: Position | null,\n    laserCount: number,\n    status: Status,\n    pendingTunnels: Position[],\n    next: NextAction[],\n    timer: number,\n    levels: TLEVEL[],\n    levelIndex: number,\n};\n\ntype Status = \"WIN\" | \"FAIL\" | \"PLAYING\"\n\nconst isDirection = (cmd: string): cmd is DIRECTION => {\n    return ['N', 'S', 'W', 'E'].includes(cmd);\n}\n\nconst checkLaser = (state: GameState) => {\n    const { laser, laserCount, tank, prevTank } = state;\n    if (laser) {\n        // if (\n        //     sameCoord(laser, tank)\n        //     //  && !(getDirection(tank, prevTank) === laser.direction && laserCount !== 1 && laserCount % 2 === 0)\n        // ) {\n        //     state.status = 'FAIL';\n        // }\n        // else {\n        state.next.push({\n            cmd: 'FIRE',\n            start: nextPosition(laser),\n        });\n        // }\n    }\n}\n\nclass DB {\n    record: CMD[] = [];\n    history: PlayField[] = [];\n\n    save(state: GameState, cmd: CMD) {\n        const { board, tank, prevTank, laser, status, pendingTunnels } = state;\n        this.record.push(cmd);\n        this.history.push({ board, tank, prevTank, laser, status, pendingTunnels });\n    }\n}\n\nconst db = new DB();\n\nconst initialState: GameState = {\n    board: range(0, BOARD_SIZE).map(() => {\n        return range(0, BOARD_SIZE).map(() => {\n            return {\n                background: GameBackgrounds.DIRT,\n            };\n        });\n    }),\n    tank: {x: 0, y: 0, direction: 'N'}, \n    prevTank: {x: 0, y: 0, direction: 'N'}, \n    laser: null,\n    laserCount: 0,\n    status: \"PLAYING\",\n    pendingTunnels: [],\n    timer: 0,\n    next: [],\n    levels: [],\n    levelIndex: 0,\n};\n\nconst gameSlice = createSlice({\n    name: 'game',\n    initialState,\n    reducers: {\n        loadLevels(state, action: PayloadAction<{ levels: TLEVEL[], levelIndex: number }>) {\n            const { levels, levelIndex } = action.payload;\n            state.levels = levels;\n            localStorage.setItem('levels', JSON.stringify(levels));\n            gameSlice.caseReducers.loadLevel(state, loadLevel(levelIndex));\n        },\n        loadLevel(state, action: PayloadAction<number>) {\n            const { tank, board, levels } = state;\n            const levelIndex = action.payload;\n            const level = get(levels, [levelIndex]);\n            if (!level) {\n                return;\n            }\n            state.levelIndex = levelIndex;\n            localStorage.setItem('levelIndex', JSON.stringify(levelIndex));\n            const colors = getColors(9);\n            colors.shift(); // old lasertank doesn't use back tunnels\n\n            level.board.forEach((row, i) => {\n                return row.forEach((cell, j) => {\n                    if (cell === 1) {\n                        tank.x = i;\n                        tank.y = j;\n                        board[j][i] = {\n                            background: GameBackgrounds.DIRT,\n                        }\n                    } else if (cell > 63 && cell < 72) {\n                        board[j][i] = {\n                            color: colors[cell - 64],\n                            background: GameBackgrounds.TUNNEL,\n                        };\n                    } else {\n                        const result = saveDataMap[cell];\n                        if (!result) {\n                            console.log(cell);\n                        }\n                        board[j][i] = {\n                            background: GameBackgrounds.DIRT,\n                            ...result,\n                        };\n                    }\n                });\n            });\n            state.timer += 1;\n            state.status = 'PLAYING';\n        },\n        changeDirection(state, action: PayloadAction<DIRECTION>) {\n            state.tank.direction = action.payload;\n        },\n        undo(state) {\n            return {\n                ...state,\n                ...(db.history.pop()),\n                timer: state.timer + 1,\n            };\n        },\n        moveTank(state, action: PayloadAction<DIRECTION>) {\n            const { tank } = state;\n            const cmd = action.payload;\n            if (tank.direction === cmd) {\n                const from = {...tank};\n                const target = nextPosition(tank);\n                state.prevTank = from;\n                tank.x = target.x;\n                tank.y = target.y;\n                GameObject.handleMove(state, from, target);\n                GameObject.checkTank(state);\n                checkLaser(state);\n            } else {\n                tank.direction = cmd;\n            }\n            state.timer += 1;\n        },\n        renderFrame(state, action: PayloadAction<NextAction | null>) {\n            const { tank, board, next } = state;\n            state.next = [];\n            state.prevTank = { ...tank };\n            if (action?.payload) {\n                next.push(action.payload);\n            }\n            each(sortBy(next, ({ cmd, start }) => {\n                return cmd === 'FIRE' ? 0 : \n                    !sameCoord(start, tank) ? 1 :\n                    2\n                ;\n            }), (n) => {\n                const { cmd, start } = n;\n                const { x, y } = start;\n                if (isDirection(cmd)) {\n                    // handleMove:\n                    //  this.getBackground(toTile).handleMove(game, to);\n                    //  this.getBackground(fromTile).handleEmpty(game, from);\n                    // checkTank:\n                    //  this.getObstacle(tankTile)?.checkTank(game, current);  // laser available, check fail\n                    //  this.getBackground(tankTile).handleTank(game, inSkipping);\n                    //      skiping:\n                    //          GameObject.handleMove(game, game.prevTank, target);\n                    //          GameObject.checkTank(game, true);\n                    const from = { x, y, direction: cmd };\n                    const target = nextPosition(from);\n\n                    if (isAvailable(target, board)) {\n                        if (board[y][x].object) {\n                            board[target.y][target.x].object = board[y][x].object;\n                            delete board[y][x].object;\n                        } else if (sameCoord(tank, from)) {\n                            tank.x = target.x;\n                            tank.y = target.y;\n                        }\n                        GameObject.handleMove(state, from, target);\n                    }\n                } else if (cmd === 'FIRE') {\n                    const tile = get(board, [y, x]);\n                    if (tile) {\n                        state.laser = { ...start };\n                        state.laserCount += 1;\n                        if (sameCoord(state.laser, tank)) {\n                            state.status = 'FAIL';\n                        }\n                        GameObject.handleFire(state, state.laser);\n                        // }\n                    } else {\n                        state.laser = null;\n                    }\n                }\n                return state.status !== 'FAIL';\n            });\n            if (state.status !== 'FAIL') {\n                GameObject.checkTank(state);\n                checkLaser(state);\n            }\n            state.timer += 1\n        },\n    },\n});\n\nexport const {\n    loadLevel, loadLevels, undo, changeDirection, renderFrame, moveTank\n} = gameSlice.actions;\n\nexport const exec = (cmd: string): AppThunk => (dispatch, getState) => {\n    const { game } = getState();\n    const { tank, board, status, next, levelIndex } = game;\n    if (cmd === 'UNDO') {\n        dispatch(undo());\n    } else if (cmd === 'NEXT_LEVEL') {\n        dispatch(loadLevel(levelIndex + 1));\n    } else if (cmd === 'PREV_LEVEL') {\n        dispatch(loadLevel(levelIndex - 1));\n    } else if (next.length === 0 && status === 'PLAYING') {\n        const target = nextPosition(tank);\n        if (cmd === 'FIRE') {\n            db.save(game, cmd);\n            dispatch(renderFrame({ cmd, start: target }));\n        } else if (isDirection(cmd)) {\n            if (tank.direction === cmd) {\n                if (isAvailable(target, board)) {\n                    db.save(game, cmd);\n                    dispatch(moveTank(cmd));\n                }\n            } else {\n                dispatch(moveTank(cmd));\n            }\n        }\n    }\n};\n\nexport const openDataFile = (buffer: ArrayBuffer): AppThunk => (dispatch) => {\n    const tLevel = {\n        board: 16 * 16,\n        levelName: 31,\n        hint: 256,\n        author: 31,\n        scoreDifficulty: 2,\n    }; // 576\n    const sizeOfTLevel = sum(Object.values(tLevel));\n\n    const levels = map(range(Math.floor(buffer.byteLength / sizeOfTLevel)), (i): TLEVEL => {\n        let cursor = sizeOfTLevel * i;\n        const data: any = {};\n        map(tLevel, (size, key) => {\n            data[key] = buffer.slice(cursor, cursor + size);\n            cursor += size;\n        });\n        return {\n            board: chunk(Array.from(new Uint8Array(data.board)), 16),\n            levelName: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.levelName))),\n            hint: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.hint))),\n            author: String.fromCharCode.apply(null, Array.from(new Uint8Array(data.author))),\n            scoreDifficulty: new Uint16Array(data.scoreDifficulty)[0],\n        }\n    });\n    dispatch(loadLevels({\n        levels,\n        levelIndex: 0, \n    }));\n};\n\nexport default gameSlice.reducer;\n","import { map, min, range, bindAll, debounce } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport { BOARD_SIZE, CMD, exec, renderFrame, GameState, loadLevel } from './game';\nimport { Tile, GameBackgrounds, GameObject } from './tiles';\n\nimport './Board.css';\n\ninterface BoardProps {\n    game: GameState,\n}\n\ninterface BoardState {\n    limit: number,\n}\n\nconst BoardTile = React.memo(({ tile, tileSize }: { tile: Tile, tileSize: number }) => {\n    return <div style={{ width: tileSize, height: tileSize }} className={[\n        'board-object',\n        GameObject.getBackgroundCss(tile),\n    ].filter(Boolean).join(' ')}>\n        {tile.background === GameBackgrounds.TUNNEL && <div style={{ \n            background: 'transparent',\n            borderRadius: '50%',\n            border: `${tileSize/8}px solid #${tile.color}`,\n            boxSizing: 'border-box',\n        }}/>}\n        {tile.object && <div className={GameObject.getObstacleCss(tile)}/>} \n    </div>\n});\n\nconst BoardRow = React.memo(({ row, tileSize }: {row: Tile[], tileSize: number}) => {\n    return <div className=\"row\">\n        {map(row, (tile, j) => {\n            return <BoardTile key={j} tile={tile} tileSize={tileSize}/>\n        })}\n    </div>\n})\n\nclass Board extends React.Component<BoardProps, BoardState> {\n    state = { limit: 0 };\n    boardRef = React.createRef<HTMLInputElement>();\n    interval!: NodeJS.Timeout;\n\n    constructor(props: BoardProps) {\n        super(props)\n        bindAll(this, ['handleResize']);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        const animations = ['bg0', 'bg1', 'bg2'];\n        this.interval = setInterval(async () => {\n            const el = this.boardRef.current;\n            if (el) {\n                const backgrounds = el.querySelectorAll([\n                    '.ANTI_TANK_N', '.ANTI_TANK_E', '.ANTI_TANK_S', '.ANTI_TANK_W',\n                    '.TANK_MOVER_N', '.TANK_MOVER_S', '.TANK_MOVER_W', '.TANK_MOVER_E',\n                    '.FLAG', '.WATER',\n                ].join(', '));\n                const bg = animations.shift() || '';\n                backgrounds.forEach((background) => {\n                    background.classList.remove(...animations);\n                    background.classList.add(bg);\n                });\n                animations.push(bg);\n            }\n        }, 600);\n        this.handleResize();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        clearInterval(this.interval);\n    }\n\n    handleResize() {\n        if (this.boardRef.current) {\n            const { offsetWidth: width, offsetHeight: height } = this.boardRef.current;\n            this.setState({ limit: min([width, height]) ?? 0 });\n        }\n    }\n\n    shouldComponentUpdate(nextProps: BoardProps, nextState: BoardState) {\n        return nextProps.game.timer !== this.props.game.timer ||\n            nextState.limit !== this.state.limit\n        ;\n    }\n\n    render() {\n        const { game } = this.props;\n        const { limit } = this.state;\n        const { board, tank, laser } = game;\n        const tileSize = Math.floor(limit / (BOARD_SIZE + 2));\n        const tileStyle = { width: tileSize, height: tileSize };\n        return <div ref={this.boardRef} className=\"Board\">\n            <div>\n                {map([\n                    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'\n                ], (letter, i) => {\n                    return <div key={i} style={{ width: tileSize, display: 'inline-block' }}>{letter}</div>\n                })}\n            </div>\n            <div style={{\n                width: tileSize * BOARD_SIZE, height: tileSize * BOARD_SIZE, margin: '0 auto'\n            }}>\n                {map(board, (row, i) => {\n                    return <BoardRow key={i} row={row} tileSize={tileSize}/>\n                })}\n                {map(range(BOARD_SIZE), (i) => {\n                    return <div key={i} style={{\n                        position: 'absolute', verticalAlign: 'center', lineHeight: `${tileSize}px`,\n                        left: -tileSize, top: i * tileSize\n                    }}>{i + 1}</div>\n                })}\n                <div className={`tank TANK_${tank.direction}`} style={{ \n                    left: tank.x * tileSize, top: tank.y * tileSize, ...tileStyle\n                }}/>\n                {laser && <div className={`laser ${laser.direction}`} \n                    style={['N', 'S'].includes(laser.direction) ? { \n                        left: laser.x * tileSize + (tileSize / 2 - 2), \n                        top: laser.y * tileSize, \n                        ...tileStyle, width: 4,\n                    } : {\n                        left: laser.x * tileSize, \n                        top: laser.y * tileSize + (tileSize / 2 - 1), \n                        ...tileStyle, height: 4,\n                    }}\n                />}\n            </div>\n        </div>\n    }\n}\n\nexport default () => {\n    const game = useSelector((state: RootState) => state.game)\n    const dispatch = useDispatch();\n    const { next, status, levelIndex } = game;\n    const debounceRenderFrame = debounce(() => {\n        return dispatch(renderFrame(null));\n    }, 10);\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            const cmdMap: {[key: string]: CMD} = {\n                ArrowUp: 'N',\n                ArrowDown: 'S',\n                ArrowLeft: 'W',\n                ArrowRight: 'E',\n                'u': 'UNDO',\n                'U': 'UNDO',\n                ' ': 'FIRE',\n            };\n            const cmd = cmdMap[e.key];\n            if (cmd) {\n                dispatch(exec(cmd));\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (next.length > 0 && status !== 'FAIL') {\n            debounceRenderFrame();\n        }\n    }, [debounceRenderFrame, next, status]);\n\n    useEffect(() => {\n        if (status === 'WIN') {\n            dispatch(loadLevel(levelIndex + 1));\n        }\n    }, [dispatch, levelIndex, status])\n\n    return <Board game={game}/>\n}","import { map } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { openDataFile } from '../../features/game/game';\n\nimport './MenuBar.css';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const [currentMenu, setMenu] = useState<null|{ menu: any, top: number, left: number}>(null);\n\n    const handleFile = (file: File) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            if (e.target?.result) {\n                dispatch(openDataFile(e.target?.result as ArrayBuffer));\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n    return <div className=\"MenuBar\">\n        {map([\n            {\n                name: 'Game',\n                items: [\n                    {\n                        render: () => {\n                            return <div>\n                                <label>\n                                    Open Data File\n                                    <input id=\"fileInput\" type=\"file\" \n                                        style={{display: 'none'}} \n                                        onChange={(e) => {\n                                            const files = e.currentTarget.files;\n                                            if (files?.length) {\n                                                handleFile(files[0]);\n                                            }\n                                            setMenu(null);\n                                        }}\n                                    />\n                                </label>\n                            </div>\n                        },\n                    },\n                ],\n            },\n            {\n                name: 'Options',\n                items: [\n                    {name: 'Animation'},\n                    // {name: 'Sound'},\n                ],\n            },\n            {\n                name: 'Editor', \n                onClick: () => {\n                    setMenu(null);\n                },\n            },\n            {\n                name: 'Help',\n                items: [\n                    {name: 'About'},\n                ],\n            },\n        ], (menu, i) => {\n            const { name, ...props } = menu;\n            return <div key={i}\n                className={`MenuBarItem ${name === currentMenu?.menu.name ? 'active ' : ''}`} \n                onClick={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    setMenu(currentMenu ? null : {\n                        menu,\n                        top: offsetTop + offsetHeight,\n                        left: offsetLeft,\n                    });\n                }}\n                onMouseEnter={(event) => {\n                    const { offsetTop, offsetHeight, offsetLeft } = event.currentTarget;\n                    if (currentMenu) {\n                        setMenu({\n                            menu,\n                            top: offsetTop + offsetHeight,\n                            left: offsetLeft,\n                        });\n                    }\n                }}\n                {...props}\n            >{name}</div>\n        })}\n        {<ul className=\"Menu\" style={!currentMenu?.menu.items ? {display: 'none'} : {\n            top: currentMenu.top,\n            left: currentMenu.left,\n        }}>\n            {map(currentMenu?.menu.items, ({ name, render }, i) => {\n                return <li key={i}>\n                    {render ? render() : name}\n                </li>;\n            })}\n        </ul>}\n    </div>\n}","import { get, map } from 'lodash';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../app/rootReducer';\nimport { exec } from '../game/game';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const game = useSelector((state: RootState) => state.game);\n    const { levelIndex, levels } = game;\n    const level = get(levels, [levelIndex]);\n\n    return <div className=\"control-panel\">\n        <div className=\"info\"></div>\n        <div className=\"control\">\n            {map([\n                [\n                    { name: 'Undo', cmd: 'UNDO' },\n                    {\n                        name: 'Hint', cmd: 'HINT', onClick: () => {\n                            if (level?.hint) {\n                                alert(level?.hint);\n                            }\n                        }\n                    },\n                ],\n                [{ name: 'Save Position', cmd: '' }],\n                [{ name: 'Restore Position', cmd: '' }],\n                [{ name: 'New', cmd: '' }, { name: 'Restart', cmd: '' }],\n                [{ name: 'Load Level', cmd: '' }],\n                [{ name: '<< Level', cmd: 'PREV_LEVEL' }, { name: 'Level >>', cmd: 'NEXT_LEVEL' }],\n            ], (row, i) => {\n                return <div key={i}>\n                    {map(row, ({ name, cmd, onClick }: { name: string, cmd: string, onClick?: any }, j) => {\n                        return <div key={j} onClick={(e) => {\n                            if (onClick) {\n                                onClick(e);\n                            } else if (cmd) {\n                                dispatch(exec(cmd))\n                            }\n                        }}>{name}</div>\n                    })}\n                </div>\n            })}\n        </div>\n    </div>\n}","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport './App.css';\nimport { loadLevels } from '../features/game/game';\nimport Board from '../features/game/Board';\nimport MenuBar from '../features/ui/MenuBar';\nimport ControlPanel from '../features/ui/ControlPanel';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    try {\n      const levels = JSON.parse(localStorage.getItem('levels') ?? '');\n      const levelIndex = JSON.parse(localStorage.getItem('levelIndex') ?? '0');\n      if (levels) {\n        dispatch(loadLevels({ levels, levelIndex }));\n      }\n    } catch (error) {\n      alert(`failed to load levels: ${error}`);\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <MenuBar/>\n      <div className=\"main\">\n        <Board/>\n        <ControlPanel/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit'\n\nimport gameSlice from '../features/game/game';\n\nconst rootReducer = combineReducers({\n    game: gameSlice,\n});\n\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from './rootReducer';\n\n\nconst store = configureStore({\n    reducer: rootReducer\n});\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './app/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}